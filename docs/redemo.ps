%!PS-Adobe-3.0
%%Creator: Windows PSCRIPT
%%Title: C:\PROGRAM\CRYPT\NOTES\REDEMO.DOC
%%BoundingBox: 14 14 595 778
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%Pages: (atend)
%%BeginResource: procset Win35Dict 3 1
/Win35Dict 290 dict def Win35Dict begin/bd{bind def}bind def/in{72
mul}bd/ed{exch def}bd/ld{load def}bd/tr/translate ld/gs/gsave ld/gr
/grestore ld/M/moveto ld/L/lineto ld/rmt/rmoveto ld/rlt/rlineto ld
/rct/rcurveto ld/st/stroke ld/n/newpath ld/sm/setmatrix ld/cm/currentmatrix
ld/cp/closepath ld/ARC/arcn ld/TR{65536 div}bd/lj/setlinejoin ld/lc
/setlinecap ld/ml/setmiterlimit ld/sl/setlinewidth ld/scignore false
def/sc{scignore{pop pop pop}{0 index 2 index eq 2 index 4 index eq
and{pop pop 255 div setgray}{3{255 div 3 1 roll}repeat setrgbcolor}ifelse}ifelse}bd
/FC{bR bG bB sc}bd/fC{/bB ed/bG ed/bR ed}bd/HC{hR hG hB sc}bd/hC{
/hB ed/hG ed/hR ed}bd/PC{pR pG pB sc}bd/pC{/pB ed/pG ed/pR ed}bd/sM
matrix def/PenW 1 def/iPen 5 def/mxF matrix def/mxE matrix def/mxUE
matrix def/mxUF matrix def/fBE false def/iDevRes 72 0 matrix defaultmatrix
dtransform dup mul exch dup mul add sqrt def/fPP false def/SS{fPP{
/SV save def}{gs}ifelse}bd/RS{fPP{SV restore}{gr}ifelse}bd/EJ{gsave
showpage grestore}bd/#C{userdict begin/#copies ed end}bd/FEbuf 2 string
def/FEglyph(G  )def/FE{1 exch{dup 16 FEbuf cvrs FEglyph exch 1 exch
putinterval 1 index exch FEglyph cvn put}for}bd/SM{/iRes ed/cyP ed
/cxPg ed/cyM ed/cxM ed 72 100 div dup scale dup 0 ne{90 eq{cyM exch
0 eq{cxM exch tr -90 rotate -1 1 scale}{cxM cxPg add exch tr +90 rotate}ifelse}{cyP
cyM sub exch 0 ne{cxM exch tr -90 rotate}{cxM cxPg add exch tr -90
rotate 1 -1 scale}ifelse}ifelse}{pop cyP cyM sub exch 0 ne{cxM cxPg
add exch tr 180 rotate}{cxM exch tr 1 -1 scale}ifelse}ifelse 100 iRes
div dup scale 0 0 transform .25 add round .25 sub exch .25 add round
.25 sub exch itransform translate}bd/SJ{1 index 0 eq{pop pop/fBE false
def}{1 index/Break ed div/dxBreak ed/fBE true def}ifelse}bd/ANSIVec[
16#0/grave 16#1/acute 16#2/circumflex 16#3/tilde 16#4/macron 16#5/breve
16#6/dotaccent 16#7/dieresis 16#8/ring 16#9/cedilla 16#A/hungarumlaut
16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle 16#60/grave
16#7C/bar 16#82/quotesinglbase 16#83/florin 16#84/quotedblbase 16#85
/ellipsis 16#86/dagger 16#87/daggerdbl 16#88/circumflex 16#89/perthousand
16#8A/Scaron 16#8B/guilsinglleft 16#8C/OE 16#91/quoteleft 16#92/quoteright
16#93/quotedblleft 16#94/quotedblright 16#95/bullet 16#96/endash 16#97
/emdash 16#98/tilde 16#99/trademark 16#9A/scaron 16#9B/guilsinglright
16#9C/oe 16#9F/Ydieresis 16#A0/space 16#A1/exclamdown 16#A4/currency
16#A5/yen 16#A6/brokenbar 16#A7/section 16#A8/dieresis 16#A9/copyright
16#AA/ordfeminine 16#AB/guillemotleft 16#AC/logicalnot 16#AD/hyphen
16#AE/registered 16#AF/macron 16#B0/degree 16#B1/plusminus 16#B2/twosuperior
16#B3/threesuperior 16#B4/acute 16#B5/mu 16#B6/paragraph 16#B7/periodcentered
16#B8/cedilla 16#B9/onesuperior 16#BA/ordmasculine 16#BB/guillemotright
16#BC/onequarter 16#BD/onehalf 16#BE/threequarters 16#BF/questiondown
16#C0/Agrave 16#C1/Aacute 16#C2/Acircumflex 16#C3/Atilde 16#C4/Adieresis
16#C5/Aring 16#C6/AE 16#C7/Ccedilla 16#C8/Egrave 16#C9/Eacute 16#CA
/Ecircumflex 16#CB/Edieresis 16#CC/Igrave 16#CD/Iacute 16#CE/Icircumflex
16#CF/Idieresis 16#D0/Eth 16#D1/Ntilde 16#D2/Ograve 16#D3/Oacute 16#D4
/Ocircumflex 16#D5/Otilde 16#D6/Odieresis 16#D7/multiply 16#D8/Oslash
16#D9/Ugrave 16#DA/Uacute 16#DB/Ucircumflex 16#DC/Udieresis 16#DD/Yacute
16#DE/Thorn 16#DF/germandbls 16#E0/agrave 16#E1/aacute 16#E2/acircumflex
16#E3/atilde 16#E4/adieresis 16#E5/aring 16#E6/ae 16#E7/ccedilla 16#E8
/egrave 16#E9/eacute 16#EA/ecircumflex 16#EB/edieresis 16#EC/igrave
16#ED/iacute 16#EE/icircumflex 16#EF/idieresis 16#F0/eth 16#F1/ntilde
16#F2/ograve 16#F3/oacute 16#F4/ocircumflex 16#F5/otilde 16#F6/odieresis
16#F7/divide 16#F8/oslash 16#F9/ugrave 16#FA/uacute 16#FB/ucircumflex
16#FC/udieresis 16#FD/yacute 16#FE/thorn 16#FF/ydieresis ] def/reencdict
12 dict def/IsChar{basefontdict/CharStrings get exch known}bd/MapCh{dup
IsChar not{pop/bullet}if newfont/Encoding get 3 1 roll put}bd/MapDegree{16#b0
/degree IsChar{/degree}{/ring}ifelse MapCh}bd/MapBB{16#a6/brokenbar
IsChar{/brokenbar}{/bar}ifelse MapCh}bd/ANSIFont{reencdict begin/newfontname
ed/basefontname ed FontDirectory newfontname known not{/basefontdict
basefontname findfont def/newfont basefontdict maxlength dict def basefontdict{exch
dup/FID ne{dup/Encoding eq{exch dup length array copy newfont 3 1 roll
put}{exch newfont 3 1 roll put}ifelse}{pop pop}ifelse}forall newfont
/FontName newfontname put 127 1 159{newfont/Encoding get exch/bullet
put}for ANSIVec aload pop ANSIVec length 2 idiv{MapCh}repeat MapDegree
MapBB newfontname newfont definefont pop}if newfontname end}bd/SB{FC
/ULlen ed/str ed str length fBE not{dup 1 gt{1 sub}if}if/cbStr ed
/dxGdi ed/y0 ed/x0 ed str stringwidth dup 0 ne{/y1 ed/x1 ed y1 y1
mul x1 x1 mul add sqrt dxGdi exch div 1 sub dup x1 mul cbStr div exch
y1 mul cbStr div}{exch abs neg dxGdi add cbStr div exch}ifelse/dyExtra
ed/dxExtra ed x0 y0 M fBE{dxBreak 0 BCh dxExtra dyExtra str awidthshow}{dxExtra
dyExtra str ashow}ifelse fUL{x0 y0 M dxUL dyUL rmt ULlen fBE{Break
add}if 0 mxUE transform gs rlt cyUL sl [] 0 setdash st gr}if fSO{x0
y0 M dxSO dySO rmt ULlen fBE{Break add}if 0 mxUE transform gs rlt cyUL
sl [] 0 setdash st gr}if n/fBE false def}bd/font{/name ed/Ascent ed
0 ne/fT3 ed 0 ne/fSO ed 0 ne/fUL ed/Sy ed/Sx ed 10.0 div/ori ed -10.0
div/esc ed/BCh ed name findfont/xAscent 0 def/yAscent Ascent def/ULesc
esc def ULesc mxUE rotate pop fT3{/esc 0 def xAscent yAscent mxUE transform
/yAscent ed/xAscent ed}if [Sx 0 0 Sy neg xAscent yAscent] esc mxE
rotate mxF concatmatrix makefont setfont [Sx 0 0 Sy neg 0 Ascent] mxUE
mxUF concatmatrix pop fUL{currentfont dup/FontInfo get/UnderlinePosition
known not{pop/Courier findfont}if/FontInfo get/UnderlinePosition get
1000 div 0 exch mxUF transform/dyUL ed/dxUL ed}if fSO{0 .3 mxUF transform
/dySO ed/dxSO ed}if fUL fSO or{currentfont dup/FontInfo get/UnderlineThickness
known not{pop/Courier findfont}if/FontInfo get/UnderlineThickness get
1000 div Sy mul/cyUL ed}if}bd/min{2 copy gt{exch}if pop}bd/max{2 copy
lt{exch}if pop}bd/CP{/ft ed{{ft 0 eq{clip}{eoclip}ifelse}stopped{currentflat
1 add setflat}{exit}ifelse}loop}bd/patfont 10 dict def patfont begin
/FontType 3 def/FontMatrix [1 0 0 -1 0 0] def/FontBBox [0 0 16 16]
def/Encoding StandardEncoding def/BuildChar{pop pop 16 0 0 0 16 16
setcachedevice 16 16 false [1 0 0 1 .25 .25]{pat}imagemask}bd end/p{
/pat 32 string def{}forall 0 1 7{dup 2 mul pat exch 3 index put dup
2 mul 1 add pat exch 3 index put dup 2 mul 16 add pat exch 3 index
put 2 mul 17 add pat exch 2 index put pop}for}bd/pfill{/PatFont patfont
definefont setfont/ch(AAAA)def X0 64 X1{Y1 -16 Y0{1 index exch M ch
show}for pop}for}bd/vert{X0 w X1{dup Y0 M Y1 L st}for}bd/horz{Y0 w
Y1{dup X0 exch M X1 exch L st}for}bd/fdiag{X0 w X1{Y0 M X1 X0 sub dup
rlt st}for Y0 w Y1{X0 exch M Y1 Y0 sub dup rlt st}for}bd/bdiag{X0 w
X1{Y1 M X1 X0 sub dup neg rlt st}for Y0 w Y1{X0 exch M Y1 Y0 sub dup
neg rlt st}for}bd/AU{1 add cvi 15 or}bd/AD{1 sub cvi -16 and}bd/SHR{pathbbox
AU/Y1 ed AU/X1 ed AD/Y0 ed AD/X0 ed}bd/hfill{/w iRes 37.5 div round
def 0.1 sl [] 0 setdash n dup 0 eq{horz}if dup 1 eq{vert}if dup 2 eq{fdiag}if
dup 3 eq{bdiag}if dup 4 eq{horz vert}if 5 eq{fdiag bdiag}if}bd/F{/ft
ed fm 256 and 0 ne{gs FC ft 0 eq{fill}{eofill}ifelse gr}if fm 1536
and 0 ne{SHR gs HC ft CP fm 1024 and 0 ne{/Tmp save def pfill Tmp restore}{fm
15 and hfill}ifelse gr}if}bd/S{PenW sl PC st}bd/m matrix def/GW{iRes
12 div PenW add cvi}bd/DoW{iRes 50 div PenW add cvi}bd/DW{iRes 8 div
PenW add cvi}bd/SP{/PenW ed/iPen ed iPen 0 eq iPen 6 eq or{[] 0 setdash}if
iPen 1 eq{[DW GW] 0 setdash}if iPen 2 eq{[DoW GW] 0 setdash}if iPen
3 eq{[DW GW DoW GW] 0 setdash}if iPen 4 eq{[DW GW DoW GW DoW GW] 0
setdash}if}bd/E{m cm pop tr scale 1 0 moveto 0 0 1 0 360 arc cp m sm}bd
/AG{/sy ed/sx ed sx div 4 1 roll sy div 4 1 roll sx div 4 1 roll sy
div 4 1 roll atan/a2 ed atan/a1 ed sx sy scale a1 a2 ARC}def/A{m cm
pop tr AG m sm}def/P{m cm pop tr 0 0 M AG cp m sm}def/RRect{n 4 copy
M 3 1 roll exch L 4 2 roll L L cp}bd/RRCC{/r ed/y1 ed/x1 ed/y0 ed/x0
ed x0 x1 add 2 div y0 M x1 y0 x1 y1 r arcto 4{pop}repeat x1 y1 x0 y1
r arcto 4{pop}repeat x0 y1 x0 y0 r arcto 4{pop}repeat x0 y0 x1 y0 r
arcto 4{pop}repeat cp}bd/RR{2 copy 0 eq exch 0 eq or{pop pop RRect}{2
copy eq{pop RRCC}{m cm pop/y2 ed/x2 ed/ys y2 x2 div 1 max def/xs x2
y2 div 1 max def/y1 exch ys div def/x1 exch xs div def/y0 exch ys div
def/x0 exch xs div def/r2 x2 y2 min def xs ys scale x0 x1 add 2 div
y0 M x1 y0 x1 y1 r2 arcto 4{pop}repeat x1 y1 x0 y1 r2 arcto 4{pop}repeat
x0 y1 x0 y0 r2 arcto 4{pop}repeat x0 y0 x1 y0 r2 arcto 4{pop}repeat
m sm cp}ifelse}ifelse}bd/PP{{rlt}repeat}bd/OB{gs 0 ne{7 3 roll/y ed
/x ed x y translate ULesc rotate x neg y neg translate x y 7 -3 roll}if
sc B fill gr}bd/B{M/dy ed/dx ed dx 0 rlt 0 dy rlt dx neg 0 rlt cp}bd
/CB{B clip n}bd/ErrHandler{errordict dup maxlength exch length gt
dup{errordict begin}if/errhelpdict 12 dict def errhelpdict begin/stackunderflow(operand stack underflow)def
/undefined(this name is not defined in a dictionary)def/VMerror(you have used up all the printer's memory)def
/typecheck(operator was expecting a different type of operand)def
/ioerror(input/output error occured)def end{end}if errordict begin
/handleerror{$error begin newerror{/newerror false def showpage 72
72 scale/x .25 def/y 9.6 def/Helvetica findfont .2 scalefont setfont
x y moveto(Offending Command = )show/command load{dup type/stringtype
ne{(max err string)cvs}if show}exec/y y .2 sub def x y moveto(Error = )show
errorname{dup type dup( max err string )cvs show( : )show/stringtype
ne{( max err string )cvs}if show}exec errordict begin errhelpdict errorname
known{x 1 add y .2 sub moveto errhelpdict errorname get show}if end
/y y .4 sub def x y moveto(Stack =)show ostack{/y y .2 sub def x 1
add y moveto dup type/stringtype ne{( max err string )cvs}if show}forall
showpage}if end}def end}bd end
%%EndResource
/SVDoc save def
%%EndProlog
%%BeginSetup
Win35Dict begin
ErrHandler
statusdict begin 0 setjobtimeout end
statusdict begin statusdict /jobname (C:\PROGRAM\CRYPT\NOTES\REDEMO.DOC) put end
/oldDictCnt countdictstack def {}stopped 
{ countdictstack oldDictCnt lt { Win35Dict begin } 
{1 1 countdictstack oldDictCnt sub {pop end } for } ifelse } if 
/oldDictCnt countdictstack def {letter
}stopped 
{ countdictstack oldDictCnt lt { Win35Dict begin } 
{1 1 countdictstack oldDictCnt sub {pop end } for } ifelse } if 
[{ }
/exec load currenttransfer /exec load] cvx settransfer
%%EndSetup
%%Page: 1 1
%%PageResources: (atend)
SS
0 0 20 20 806 1100 300 SM
userdict /SVDoc known {matrix currentmatrix aload pop grestore gsave}if
/level2 {/languagelevel where {p languagelevel 2 ge}{false} ife} def
/level1 {level2 not} def
%!PS-Adobe
%%BeginProlog
/wpdict 300 dict def
wpdict begin
/d{bind def}bind def/l{load def}d/ec{exec def}d/cp/closepath l/cup/currentpoint l/cs/currentscreen l
/cv/curveto l/drx{dtransform round x round x}d/f/eofill l/g/setgray l/gr/grestore l
/gs/gsave l/ife{ifelse}d/ix/index l/li/lineto l/lc/setlinecap l
/lj/setlinejoin l/m/moveto l/mx/matrix l/mcm{mx currentmatrix}d/sm/setmatrix l
/np/newpath l/p/pop l/re/rotate l/rh/readhexstring l/rl/rlineto l/rm/rmoveto l/rs/restore l
/setfl{dup 1 le{p 1 setflat}{setflat}ife}def/languagelevel where{p languagelevel}{1}ife
2 lt{/sf{bzcnt 70 div setfl}d/fpath{bzcnt 4 div setflat}d}{/sf{}d/fpath{}d}ife
/cf currentflat def/s{fpath flattenpath stroke}d/sc/scale l
/sd/setdash l/ss/setscreen l/sv/save l/tr/translate l
/w/setlinewidth l/x/exch l/xd{x def}d/c{3{255 div 3 1 roll}repeat setrgbcolor}d
/bF false def/bF2 false def/bf 0 def/ds{gs 1 lc s gr}d/gd{255 div g}d
/h{0 rm}d
/lp{px li}d/mp{px m}d/nb 50 string def/osv 0 def/icl/initclip l/pf{gs f gr}def
/pff{gs fill gr}def/pl{{px li}repeat}d/ps{gs s gr}def/plen 0 def/pwid 0 def
/px{transform .25 sub round .25 add x .25 sub round .25 add x itransform}d
/pxd{drx idtransform}d/rlp{pxd rl}d/rmp{pxd rm}d/_g{g}d/_lr{rlp}d/_s{s}d
/_w{w}d/_m{mp}d/_rmxy{rmp}d/bzcnt 0 def/bzct{/bzcnt xd}def
/bzcl{/bzcnt 0 def cf setflat}def/rF false def/sF false def/pth 0 def/ptw 0 def/pths 0 def/ptws 0 def/PColor 0 def
/instpat 0 def/cm 0 def/slan 0 def/hscl 0 def/psz 0 def/xres 0 def/yres 0 def/pstr 0 def/lutb 0 def
/rot 0 def/mir 0 def/HTd 0 def/WDd 0 def/ury 0 def/llx 0 def/lly 0 def/exstr 0 def/HTs 0 def/WDs 0 def
/Hs 0 def/Ws 0 def/imc 0 def/Bdep 0 def/clu 0 def/curx 0 def/cury 0 def/Sx 0 def/Sy 0 def/xpos 0 def
/ypos 0 def/lw 0 def/DUy 0 def/DUx 0 def/Ux 0 def/Uy 0 def/cml 0 def
/cp3{3 copy}d/cp4{4 copy}d/cp6{6 copy}d/aosh{cp3 -4 -4 rm gs ashow gr
cp3 4 0 rm gs ashow gr cp3 4 0 rm gs ashow gr cp3 0 4 rm gs ashow gr
cp3 0 4 rm gs ashow gr cp3 -4 0 rm gs ashow gr cp3 -4 0 rm gs ashow gr
cp3 0 -4 rm gs ashow gr currentrgbcolor 6 3 roll 1 g 4 0 rm ashow setrgbcolor}d
/wosh{cp4 -4 -4 rm gs widthshow gr
cp4 4 0 rm gs widthshow gr cp4 4 0 rm gs widthshow gr cp4 0 4 rm gs widthshow gr
cp4 0 4 rm gs widthshow gr cp4 -4 0 rm gs widthshow gr cp4 -4 0 rm gs widthshow gr
cp4 0 -4 rm gs widthshow gr currentrgbcolor 7 3 roll 1 g 4 0 rm widthshow setrgbcolor}d
/awosh{cp6 -4 -4 rm gs awidthshow gr
cp6 4 0 rm gs awidthshow gr cp6 4 0 rm gs awidthshow gr cp6 0 4 rm gs awidthshow gr
cp6 0 4 rm gs awidthshow gr cp6 -4 0 rm gs awidthshow gr cp6 -4 0 rm gs awidthshow gr
cp6 0 -4 rm gs awidthshow gr currentrgbcolor 9 3 roll 1 g 4 0 rm awidthshow setrgbcolor}d
/assh{sv gs psz 20 div dup neg rm 4 1 roll cp3 ashow 4 -1 roll gr cp3 sv x currentfont/PaintType known
{bf setfont}if 1 g ashow rs currentfont/PaintType known{currentfont mo setfont ashow}{aosh}ife cup 3 -1 roll rs m}d
/wssh{sv gs psz 20 div dup neg rm 5 1 roll cp4 widthshow gr cp4 sv currentfont/PaintType known{bf setfont}if
1 g 5 1 roll widthshow rs currentfont/PaintType known{currentfont mo setfont widthshow}{wosh}ife cup 3 -1 roll rs m}d
/awssh{sv gs psz 20 div dup neg rm 7 1 roll cp6 awidthshow gr cp6 sv x currentfont/PaintType known{bf setfont}if
1 g 7 1 roll awidthshow rs currentfont/PaintType known{currentfont mo setfont awidthshow}{awosh}ife cup 3 -1 roll rs m}d
/B{/bF true def sF not{/S/bsh l/bF2 true def}if}d
/b{/bF false def bF2{/S/show l/bF2 false def}if}d
/bd{sv}d/bp{sv .06 .06 sc 0 0 m}d/bsh{gs psz 30 div 0 rm dup show gr show}d
/clr{rF{6 3 roll p p p}{eq3{p p gd}{c}ife}ife}d/co{/pwid xd/plen xd
osv 1 eq{0 pwid tr -90 re}if osv 2 eq{pwid plen tr 180 re}if
osv 3 eq{plen 0 tr 90 re}if dup 1 eq{pwid 0 tr 90 re}if
dup 2 eq{pwid plen tr 180 re}if dup 3 eq{0 plen tr -90 re}if/osv xd}d
/cw{s initclip m 0 2 ix rl 0 rl 0 x neg rl clip np}d
/DU{cup/DUy xd/DUx xd}d/du{gs sv 12 w cup -24 add m DUx DUy -24 add li s rs
12 w cup -48 add m DUx DUy -48 add li s gr}d/ed{rs}d/ep{rs showpage 0 0 m}d
/eq3{3 copy 2 ix eq{eq{true}{false}ife}{p p false}ife}d
/ff{x rc x 3 div dup/psz xd scalefont dup/bf xd setfont}d
/ffs{/slan x 10 div def/hscl x 1000 div def/psz x 3 div def
[psz hscl mul 0 slan dup sin x cos div psz mul psz 0 0]
x rc x makefont dup/bf xd setfont}d/fr{72 0 rmtx defaultmatrix dtransform
/yres xd/xres xd xres dup mul yres dup mul add sqrt}d
/is{sv 4 1 roll dup/pstr x 7 add 8 idiv string def
3 1 roll tr dup 1 sc dup 1 1[5 -1 roll 0 0 1 0 0]{currentfile pstr rh p}
cml 0 eq{image}{false 3 colorimage}ife rs}d/cexp{exstr 0 lutb 3 copy 7 -1 roll
{get putinterval x 3 add x 3 copy}forall p p p p p}d/bwexp{dup 0 lutb 3 copy 7 -1 roll
{get put x 1 add x 3 copy}forall p p p p p}d/NOM 0 def/INX 1 def/INY 2 def
/p1x 0 def/p1y 0 def/p2x 0 def/p2y 0 def/p3x 0 def/p3y 0 def
/idef{/p3y xd/p3x xd/p2y xd/p2x xd/p1y xd/p1x xd
/rot xd/mir xd p3x p1x sub 1 add dup mul p1y p3y sub 1 add
dup mul add sqrt/HTd xd p2y p1y sub 1 add dup mul p2x p1x
sub 1 add dup mul add sqrt/WDd xd}def
/mirror{mir NOM eq{Ws Hs sc}{mir INX eq{Ws neg Hs sc}
{mir INY eq{Ws Hs neg sc}{Ws neg Hs neg sc}ife}ife}ife}def
/ic{sv 6 1 roll tr 2 ix 2 ix sc[3 ix 0 0 5 ix neg 0 7 ix]
2 1 roll true 3 1 roll imagemask rs}d/ieps{/ury xd/urx xd/lly xd/llx xd idef
ury lly sub/HTs xd urx llx sub/WDs xd
WDd WDs div/Ws xd HTd HTs div/Hs xd
p3x p3y tr rot re mirror llx neg lly neg tr}def
/im{sv 15 1 roll dup/pstr x string def/exstr x 3 mul string def
/HTs xd/WDs xd/imc xd/Bdep xd/clu xd
idef p1x p1y m cup transform/cury xd/curx xd rot re
/Ws WDd def/Hs HTd def mirror curx cury itransform tr WDs HTs Bdep
[WDs 0 0 HTs neg 0 0]{currentfile pstr rh p
clu 1 eq{cexp}if clu 2 eq{bwexp}if}
imc 0 eq{image}{false 3 colorimage}ife rs}d
/kp{initclip clip np}d/l1{cup osv plen pwid 6 -1 roll rs sv}d
/l2{bp 7 2 roll co m}d/osh{dup -4 -4 rm gs show gr
dup 4 0 rm gs show gr dup 4 0 rm gs show gr dup 0 4 rm gs show gr
dup 0 4 rm gs show gr dup -4 0 rm gs show gr dup -4 0 rm gs show gr
dup 0 -4 rm gs show gr currentrgbcolor 4 3 roll 1 g 4 0 rm show setrgbcolor}d
/mo{dup/OutlineFlag known not{dup dup length 2 add dict begin
{1 ix/FID ne{def}{p p}ife}forall/UniqueID known{/UniqueID UniqueID 10000 add def}if
/PaintType PaintType 0 eq{2}{PaintType}ife def/StrokeWidth 15 def/OutlineFlag true def
/OutlineFont currentdict end definefont}if}d/O{currentfont/PaintType known{currentfont mo setfont}{/S/osh l}ife}d
/o{currentfont/PaintType known{bf setfont}{/S/show l}ife}d/R{/rF true def currentrgbcolor 1 .25 .25 setrgbcolor}d
/r{/rF false def eq3{1 sub neg gd p p}{setrgbcolor}ife}d/rc{dup FontDirectory x known{findfont}
{dup nb cvs dup length 1 sub get 82 eq{dup nb cvs dup length 1 sub 0 x getinterval
findfont begin currentdict dup length dict begin
{1 ix/FID ne{def}{p p}ife}forall/FontName xd/Encoding WPen def
currentdict dup end end/FontName get x definefont}
{findfont}ife}ife}d/rmtx mx def/S/show l/A/ashow l/W/widthshow l/AW/awidthshow l/sg{neg 100 add 100 div g}d/SH{bF2{/bF2 false def}if/S/ssh l/A/assh l/W/wssh l/AW/awssh l/sF true def}d
/sh{/S/show l/A/ashow l/W/widthshow l/AW/awidthshow l/sF false def bF{B}if}d/sp{gs s gr}d/ssh{sv x gs psz 20 div dup neg rm dup show gr dup sv x
currentfont/PaintType known{bf setfont}if 1 g show rs currentfont/PaintType known{currentfont mo setfont show}{osh}ife
cup 3 -1 roll rs m}d/ST{cup/Sy xd/Sx xd}d
/st{gs cup psz 4 div add mp Sx Sy psz 4 div add lp 10 w s gr}d
/U{cup/Uy xd/Ux xd}d/u{gs cup -24 add m Ux Uy -24 add li 12 w s gr}d
/ul{cup osv plen pwid 7 -2 roll rs rs bp 6 1 roll co m}d/WPen StandardEncoding 256 array copy def 0
[127/Aacute/Acircumflex/Adieresis/Agrave/Aring/Atilde/Ccedilla
/Delta/Eacute/Ecircumflex/Edieresis/Egrave/Eth/Gamma/Iacute/Icircumflex/Idieresis/Igrave/Lambda/Ntilde/Oacute
/Ocircumflex/Odieresis/Ograve/Omega/Otilde/Phi/Pi/Psi/Scaron/Sigma/TeXtext32/Theta/Thorn
176/Pts
181/dbar
190/Hbar
192/hbar
201/Ldot
204/ldot
209/Uacute/Ucircumflex/Udieresis/Ugrave/Upsilon/Xi/Yacute
/Ydieresis/Zcaron/aacute/acircumflex/adieresis/agrave/aring/atilde/brokenbar
226/approxequal
228/ccedilla/copyright/degree/divide
236/dotlessj/eacute/ecircumflex/edieresis/egrave
242/eth/ff/ffi
246/ffl/iacute
252/icircumflex/idieresis/igrave/logicalnot
1/minus/mu/multiply/ntilde/oacute/ocircumflex/odieresis/ograve/onehalf/onequarter/onesuperior/otilde/plusminus
/registered/scaron/thorn/threequarters/threesuperior/trademark/twosuperior/uacute/ucircumflex/udieresis
/ugrave/yacute/ydieresis/zcaron/IJ/ij/Eng/eng
]{dup type/nametype eq{WPen 2 ix 2 ix put p 1 add}{x
p}ife}forall p/URy 0 def/URx	0 def/LLy 0 def/LLx	0 def/dxcg 0 def/dx1 0 def/dx2 0 def/dx3 0 def
/cgray	0 def/curstep -1 def/dis 0 def/steps 0 def/gsteps 0 def/grot 0 def/gtype 0 def/ry 0 def
/rx 0 def/botg	0 def/topg 0 def/bgc 0 def/tgc	0 def/cgc 0 def
/extents{fpath flattenpath pathbbox/URy xd/URx xd/LLy xd/LLx xd}def
/dxcolor{cml 0 eq{cgray dxcg sub dup/cgray xd curstep -1 eq{g}
{/curstep curstep 1 sub def curstep 1 eq{p botg gd}{g}ife}ife}
{cgc aload p dx3 sub 3 1 roll dx2 sub 3 1 roll
dx1 sub 3 1 roll 3 array astore/cgc xd
cgc aload p setrgbcolor}ife}d/box{LLx LLy m URx LLy li URx URy li LLx URy li cp s}def
/calcdx{sub gsteps 1 sub div 255 div}def
/computegdx{topg botg calcdx/dxcg xd}def/computeRGBdx{mark tgc aload p bgc aload p
3 ix 1 ix calcdx/dx3 xd 4 ix 2 ix calcdx/dx2 xd
5 ix 3 ix calcdx/dx1 xd cleartomark}def
/ccdx{cml 0 eq{computegdx}{computeRGBdx}ife}def/stclr{cml 0 eq{topg gd/cgray currentgray def}
{tgc aload p c currentrgbcolor 3 array astore/cgc xd}ife}def/lgf{/steps gsteps def
ry 1 ne{stclr/gf{add}def/top URy LLy sub ry mul LLy add def
/lw URy top sub steps .5 sub div def lgfdo}if
stclr/gf{sub}def
ry 1 ne{/lw top LLy sub steps .5 sub div def}if lgfdo}def
/lgfdo{ry 1 ne{/center top def lw 2 div w
LLx center lw 4 div gf m URx center lw 4 div gf li s
/center center lw gf def LLx center m dxcolor}
{/lw URy LLy sub steps div def/top URy lw 2 div sub def
/center top def LLx top m/steps steps 1 add def}ife
lw w steps 1 sub dup/curstep xd{URx center li s center lw gf/center xd
LLx center m dxcolor}repeat/curstep -1 def}def/sgf{/steps gsteps .5 sub def
/midx URx LLx sub 1 rx sub mul def/midy URy LLy sub ry mul def
/width URx LLx sub def/dx width midx sub steps div def
/height URy LLy sub def/dy height midy sub steps div def
/dw width steps div def/dl height steps div def
width w stclr/xpos LLx def/ypos URy def/lw width def/lh height def
gsteps{xpos lw 2 div add ypos m xpos lw 2 div add ypos
lh sub li s/lw lw dw sub def/lh lh dl sub def/xpos xpos dx add def/ypos ypos dy sub def
lw w dxcolor}repeat/curstep -1 def}def
/dfc{dup mul x dup mul add sqrt dup dis gt{/dis xd}{p}ife}def
/fdis{URx LLx sub rx mul LLx add/midx xd
URy LLy sub ry mul LLy add/midy xd
/width URx LLx sub def/gcx width rx mul def/height URy LLy sub def/gcy height ry mul def
gcx gcy dfc width gcx sub gcy dfc
width gcx sub height gcy sub dfc gcx height gcy sub dfc}def/rgf{/steps gsteps def
fdis/lw dis steps .5 sub div def/radius lw def lw 2 div w stclr
midx lw 2 div sub midy m midx midy radius 2 div 0 361 arc s lw w
steps 1 sub
dup/curstep xd/curstep curstep 1 add def
{dxcolor midx midy radius 0 361 arc s/radius radius lw add def}repeat/curstep -1 def}def
/gf{fpath flattenpath/gsteps xd/grot xd/gtype xd/ry x 100 div def/rx x 100 div def
cml 0 eq{gtype 1 eq{x}if/botg xd/topg xd}{gtype 1 eq{6 3 roll}if
3 array astore/bgc xd
3 array astore/tgc xd}ife
sv[]0 sd eoclip gsteps 1 eq
{stclr f}{mcm 3 get 0 gt{/grot grot 180 add def}if grot re extents
gsteps 0 eq{csteps}if
ccdx gtype 0 eq
{lgf}{gtype 1 eq{sgf}{rgf}ife}ife}ife rs}d/csteps{fdis dis 72 div fr mul	cs p p dup xres
eq{p p/gsteps xres def}{div/gsteps x round cvi dup 1 le{p 2}if def}ife}def
/ssf{dup 0 eq{p}{cs 3 ix 3 1 roll ss p p}ife}d/ssa{cs 4 1 roll p 1 ix 4 -1 roll ss p}d
/invalidcolortable? true def
level2 {
/PATmp{x dup length 2 add dict copy begin currentdict/Multi known not{/Multi 1 def}if
Multi 1 ne{/UserProc/PaintProc load def
/PaintProc{begin 0 1 Multi 1 sub{PaintColors 1 index get PATsc
PaintData x get gs currentdict UserProc gr}for end}d
}if currentdict end x makepattern
}d/PATDict 3 dict def/PATsc{mark x aload p
counttomark 1 eq{gd}if counttomark 3 eq{c}if
cleartomark}d/PATsp{PATDict begin/CColor[currentcolor]def
/CCSpace currentcolorspace def end
dup/PaintType get 2 eq{x dup length
dup 1 eq{[/Pattern/DeviceGray]setcolorspace}if
dup 3 eq{[/Pattern/DeviceRGB]setcolorspace}if
4 eq{[/Pattern/DeviceCMYK]setcolorspace}if
aload length 1 add -1 roll}if setpattern}d/PATusp{PATDict begin
CCSpace setcolorspace CColor aload p setcolor
end p}d
/pdictt 20 dict def
pdictt begin/dummy null def/PaintType 1 def/PatternType 1 def/TilingType 2 def/BBox[0 0 1 1]def
/XStep 1 def/YStep 1 def/Multi 2 def/PaintData[{0 0 m 0 1 rl 1 0 rl 0 -1 rl cp
PaintColors 0 get aload p null ne{f}if p p}
{ptw pth true[ptw 0 0 pth neg 0 ptw]{Bitmap}imagemask}]def
/PaintProc{begin exec end}d end/makedict{pdictt 20 dict copy dup begin
x/Bitmap xd x/PaintColors xd gs initmatrix 1 1 drx idtransform sc
[ptws 0 0 pths 0 0]PATmp gr end}d
/setpat{/pth xd/ptw xd/pths xd/ptws xd makedict/instpat xd instpat PATsp}d/unsetpat{instpat PATusp}d
/myappcolorspace/DeviceRGB def/rgbclut 0 def
/doclutimage{/rgbclut xd p bpc dup 8 eq{p 255}{4 eq{15}{3}ife}
ife/hival xd[/Indexed myappcolorspace hival rgbclut]setcolorspace
myimagedict dup begin/Width iw def/Height ih def/Decode[0 hival]def/ImageMatrix[1 0 0 -1 0 ih]def
/DataSource setupimageproc def/BitsPerComponent bpc def
/Interpolate smoothflag def end image}d/do24image{myappcolorspace setcolorspace
myimagedict dup begin/Width iw def/Height ih def/Decode[0 1 0 1 0 1]def/ImageMatrix[1 0 0 -1 0 ih]def
/DataSource setupimageproc def/BitsPerComponent 8 def/Interpolate smoothflag def
end image}d/setup1asciiproc{[currentfile mystring/rh cvx/p cvx]cvx bind}d
/setup1binaryproc{[currentfile mystring/readstring cvx/p cvx]cvx bind}d
/setup2asciiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}d
/setup2binaryproc{currentfile/ASCIIHexDecode filter/RunLengthDecode filter}d
/myimagedict 16 dict dup begin/ImageType 1 def/MultipleDataSource false def end def
/im_save 0 def/setupimageproc 0 def/polarity 0 def/smoothflag 0 def/mystring 0 def
/bpc 0 def/ih 0 def/iw 0 def/beginimage{/im_save sv def
dup 2 eq{p/setup2binaryproc}{dup 3 eq{p/setup2asciiproc}
{0 eq{/setup1binaryproc}{/setup1asciiproc}ife}ife}ife
/setupimageproc x l{[1 0]}{[0 1]}ife/polarity xd/smoothflag xd tr
sc/mystring x string def/bpc xd/ih xd/iw xd}d/endimage{im_save rs np}d/1bitbwcopyimage{1 g
0 0 m 0 1 rl 1 0 rl 0 -1 rl cp fill
0 g myimagedict dup begin/Width iw def/Height ih def/Decode polarity def
/ImageMatrix[1 0 0 -1 0 ih]def/DataSource setupimageproc def
/BitsPerComponent 1 def/Interpolate smoothflag def
end
imagemask}d/1bitcopyimage{ssc 0 0 m 0 1 rl 1 0 rl 0 -1 rl cp fill
ssc myimagedict dup begin/Width iw def/Height ih def
/Decode polarity def/ImageMatrix[1 0 0 -1 0 ih]def
/DataSource setupimageproc def/BitsPerComponent 1 def/Interpolate smoothflag def
end imagemask}d/1bitmaskimage{ssc
myimagedict dup begin/Width iw def/Height ih def/Decode polarity def
/ImageMatrix[1 0 0 -1 0 ih]def/DataSource setupimageproc def
/BitsPerComponent 1 def/Interpolate smoothflag def
end imagemask}d
} if
level1 {
/PATsc{aload length dup 1 eq{p dup null eq{p}{gd}ife}{p c}ife}d
/PATtcalc{gs x concat mcm x 2 ne{dup 4 get x dup 5 get x
XStep 0 drx XStep div x XStep div x 0 YStep drx YStep div x YStep div x
7 -3 roll astore}if gr}d
/PATmp{x dup length 7 add dict copy begin TilingType PATtcalc
/cm xd currentdict/Multi known not{/Multi 1 def}if/FontType 3 def/Encoding 256 array def
3 string 0 1 255{Encoding x dup 3 ix cvs cvn put}for p
/FontMatrix mx def/FontBBox BBox def/BuildChar{mark 3 1 roll x begin
Multi 1 ne{PaintData x get}{p}ife PaintType 2 eq Multi 1 ne or
{XStep 0 FontBBox aload p setcachedevice}{XStep 0 setcharwidth}ife currentdict/PaintProc load
end gs false PATredef exec true PATredef gr
cleartomark}d currentdict end/foo x definefont}d
/PATpcalc{PATDict/CurrentPattern get begin gs
cm sm BBox aload p p p tr pathbbox
gr YStep div ceiling 4 1 roll XStep div ceiling 4 1 roll
YStep div floor 4 1 roll XStep div floor 4 1 roll
2 ix sub cvi abs x 3 ix sub cvi abs x
4 2 roll YStep mul x XStep mul x end}d/PATfill{sv 5 1 roll PATDict/CurrentPattern get dup begin
setfont cm sm PaintType 2 eq{PATDict/PColor get PATsc}if
3 ix string 0 1 Multi 1 sub{3 ix 3 ix m
Multi 1 ne{dup PaintColors x get PATsc}if
0 1 7 ix 1 sub{2 ix x 2 ix put}for p
3 ix{cup 2 ix show YStep add m}repeat}for
5{p}repeat end rs}d/oldeofill/eofill l
/oldfill/fill l/oldstroke/stroke l/oldshow/show l/oldwidthshow/widthshow l/PATredef{userdict begin
{/eofill{/eoclip load PATdraw np}d/fill{/clip load PATdraw np}d
/stroke{PATstroke}d/show{0 0 null 0 0 6 -1 roll PATawidthshow}d
/widthshow{0 0 3 -1 roll PATawidthshow}d}{/eofill{oldeofill}d
/fill{oldfill}d/stroke{oldstroke}d/show{oldshow}d/widthshow{oldwidthshow}d}ife end}d
false PATredef
/PATdraw{PATpcalc gs 5 -1 roll exec np PATfill gr}d
/PATstroke{{cup strokepath m PATpcalc gs clip np PATfill gr np}stopped
{0.1 g oldstroke (Path is too complex, filling with light gray)=}if}d
/PATsstr 1 string def/PATawidthshow{{dup PATsstr dup 0 4 -1 roll put
false charpath/clip load PATdraw cup np m
3 ix eq{4 ix 4 ix rm}if 2 copy rm}forall
p p p p p cup np m}d/PATDict 3 dict def/PATsp{true PATredef PATDict begin/CurrentPattern xd
CurrentPattern/PaintType get 2 eq{/PColor xd}if/CColor[currentrgbcolor]def end}d
/PATusp{false PATredef PATDict begin CColor aload p c end p}d
/pdictt 20 dict def
pdictt begin/dummy null def/PaintType 1 def/PatternType 1 def/TilingType 2 def/BBox[0 0 1 1]def
/XStep 1 def/YStep 1 def/Multi 2 def/PaintData[{0 0 m 0 1 rl 1 0 rl 0 -1 rl cp
PaintColors 0 get aload p null ne{f}if p p}
{ptw pth true[ptw 0 0 pth neg 0 ptw]{Bitmap}imagemask}]def
/PaintProc{begin exec end}d end/makedict{pdictt 20 dict copy dup begin
x/Bitmap xd x/PaintColors xd gs initmatrix 1 1 drx idtransform sc
[ptws 0 0 pths 0 0]PATmp gr end}d
/setpat{/pth xd/ptw xd/pths xd/ptws xd makedict/instpat xd instpat PATsp}d/unsetpat{instpat PATusp}d
/snl{{/noload sv def}if}d/enl{{noload rs}if}d/nc 1 def
/colorimage where{p true}{false}ife{/nc 0
statusdict begin/processcolors where{p p processcolors}
{/deviceinfo where{p deviceinfo/Colors known
{p{deviceinfo/Colors get}}if}if}ife end def
nc 0 ne{systemdict/colorimage known
systemdict/setcolortransfer known
systemdict/currentcolortransfer known
systemdict/currentcmykcolor known
and and and not{/nc 0 def}if}if}if
nc dup 1 ne x dup 3 ne x 4 ne and and{/nc 0 def}if
nc 1 eq dup dup not snl{
/expandbw{expandfactor mul round cvi bwclut x get 255 div}d
/doclutimage{p/bwclut xd bpc dup 8 eq{p 255}{4 eq{15}{3}ife}ife
/expandfactor xd[/expandbw load/exec load dup currenttransfer x]
cvx bind settransfer
iw ih bpc[1 0 0 -1 0 ih]setupimageproc
image}d}if
not enl
nc dup 3 eq x 4 eq or
dup dup not snl{/nullproc{{}}def
/concatutil{/exec load 7 -1 roll/exec load}d/defsubclut{1 add getinterval def}d
/spconcattransfer{/Dclut x def/Cclut x def/Bclut x def/Aclut x def/ncompute x l
currentcolortransfer[{Aclut ncompute}concatutil]cvx[{Bclut ncompute}concatutil]cvx
[{Cclut ncompute}concatutil]cvx[{Dclut ncompute}concatutil]cvx
setcolortransfer}d/setuprgbcluts{/bit3x rgbclut length 3 sub def
/bit1x bit3x 3 idiv def/rclut rgbclut def/gclut rclut 1 bit3x defsubclut
/bclut rclut 2 bit3x defsubclut}d}if not enl
nc 3 eq dup dup not snl{/3compute{x bit3x mul round cvi get 255 div}d
/doclutimage{/rgbclut xd p setuprgbcluts/3compute rclut gclut bclut dup
spconcattransfer iw ih bpc[1 0 0 -1 0 ih][setupimageproc/exec load/dup load dup]cvx
nullproc nullproc true 3 colorimage}d}if not enl
nc 4 eq
dup dup not snl{/stuffclut{cmykindex 3 -1 roll put}d
/ftoint{1 x sub 255 mul round cvi}d/4compute{x bit4x mul round cvi get 255 div}d
/computecmykclut{setuprgbcluts/bit4x rgbclut length 3 idiv 4 mul 4 sub def
/cmykclut bit4x 4 add string def/cclut cmykclut def
/mclut cclut 1 bit4x defsubclut/yclut cclut 2 bit4x defsubclut
/kclut cclut 3 bit4x defsubclut/cmykindex 0 def
0 1 bit1x{dup/cmykindex x
bit1x x sub 4 mul def 3 mul dup rclut x get 255 div
x dup gclut x get 255 div x bclut x get 255 div
setrgbcolor currentcmykcolor ftoint kclut stuffclut
ftoint yclut stuffclut ftoint mclut stuffclut
ftoint cclut stuffclut}for}d/doclutimage{/rgbclut xd p invalidcolortable?
{computecmykclut}if/4compute cclut mclut yclut kclut spconcattransfer
iw ih bpc[1 0 0 -1 0 ih][setupimageproc/exec load/dup load dup dup]cvx
nullproc nullproc nullproc true 4 colorimage}d}if not enl
nc 0 eq dup dup not
snl{/las{3 mul 3 getinterval putinterval x
3 add x 3 copy}d/8lookup/las l/4lookup{/byte 1 ix def -4 bitshift
las byte 15 and las}d
/2lookup{/byte 1 ix def -6 bitshift las
byte -4 bitshift 3 and las byte -2 bitshift
3 and las byte 3 and las}d/colorexpand{mystringexp 0 rgbclut
3 copy 7 -1 roll/mylookup load forall p p p p p}d
/createexpandstr{/mystringexp x mystring length mul string def}d
/doclutimage{/rgbclut xd p/mylookup bpc 8 eq
{3 createexpandstr/8lookup}{bpc 4 eq{6 createexpandstr/4lookup}{12 createexpandstr
/2lookup}ife}ife l iw ih bpc[1 0 0 -1 0 ih]
[setupimageproc/exec load/colorexpand load/exec load]cvx
false 3 colorimage}d}if not enl
/colorimage where{p true}{false}ife dup{/do24image{iw ih 8[1 0 0 -1 0 ih]
setupimageproc false 3 colorimage}d}if
dup dup snl not{/rgbtogray{/str xd/len str length def/smlen len 3 idiv def
/rstr str def/gstr str 1 len 1 sub getinterval def/bstr str 2 len 2 sub getinterval def
str dup 0 1 smlen 1 sub{dup 3 mul rstr 1 ix get .3 mul
gstr 2 ix get .59 mul add bstr 3 -1 roll get .11 mul add
round cvi put dup}for p 0 smlen getinterval}d/do24image{iw ih 8[1 0 0 -1 0 ih]
[setupimageproc/exec load/rgbtogray load/exec load]cvx bind
image}d}if enl/doimage{iw ih 8[1 0 0 -1 0 ih]setupimageproc image}d
/setup1asciiproc{[currentfile mystring/rh cvx/p cvx]cvx bind}d
/setup1binaryproc{[currentfile mystring/readstring cvx/p cvx]cvx bind}d
/iw 0 def/ih 0 def/im_save 0 def/setupimageproc 0 def/polarity 0 def
/smoothflag 0 def/mystring 0 def/bpc 0 def/beginimage{/im_save sv def dup 0 eq
{p/setup1binaryproc}{1 eq{/setup1asciiproc}
{(error, can't use level2 data acquisition procs for level1)print flush}ife}ife
/setupimageproc x l/polarity xd/smoothflag xd tr sc/mystring x string def/bpc xd/ih xd/iw xd}d
/endimage{im_save rs np}d/1bitbwcopyimage{1 g 0 0 m 0 1 rl 1 0 rl 0 -1 rl cp fill
0 g iw ih polarity[1 0 0 -1 0 ih]setupimageproc imagemask}d/1bitcopyimage{setrgbcolor
0 0 m 0 1 rl 1 0 rl 0 -1 rl cp fill
setrgbcolor iw ih polarity[1 0 0 -1 0 ih]setupimageproc
imagemask}d/1bitmaskimage{setrgbcolor
iw ih polarity[1 0 0 -1 0 ih]setupimageproc
imagemask}d
} if
/BeginEPSF{end
userdict begin/showpage{}def
/b4 sv def/d_cnt countdictstack def/op_cnt count 1 sub def
0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
10 setmiterlimit[]0 setdash newpath/languagelevel where{p languagelevel 1 ne
{false setstrokeadjust false setoverprint}if}if}d
end
userdict begin/EndEPSF{count op_cnt sub{pop}repeat
countdictstack d_cnt sub{end}repeat b4 end restore wpdict begin}bind def end
%%EndProlog
  /wb {wpdict begin} def
wb
/cml 1 def
/we {icl end} d
we
userdict /SVDoc known {/SVDoc save def matrix astore setmatrix}if
/winmtx matrix currentmatrix def

%%BeginResource: font MSTT31c420
/GreNewFont{10 dict dup 3 1 roll def dup begin 6 1 roll/FontType 3
def/FontMatrix exch def/FontBBox exch def/FontInfo 2 dict def FontInfo
/UnderlinePosition 3 -1 roll put FontInfo/UnderlineThickness 3 -1
roll put/Encoding 256 array def 0 1 255{Encoding exch/.notdef put}for
/CharProcs 256 dict def CharProcs/.notdef{}put/Metrics 256 dict def
Metrics/.notdef 3 -1 roll put/BuildChar{/char exch def/fontdict exch
def/charname fontdict/Encoding get char get def fontdict/Metrics get
charname get aload pop setcachedevice fontdict begin Encoding char
get CharProcs exch get end exec}def end definefont pop}def/AddChar{begin
Encoding 3 1 roll put CharProcs 3 1 roll put Metrics 3 1 roll put end}def
/MSTT31c420 [75.0 0 0 0 0 0] 93 -104 [-75.0 -75.0 75.0 75.0] [1 75 div 0 0 1 75 div 0 0] /MSTT31c420 GreNewFont
%%EndResource

32 0 0 75 75 0 0 1 69 /MSTT31c420 font

%%BeginResource: font MSTT31c420
/G52 [54.0 0.0 1.0 0.0 54.0 50.0]
/G52 {
    53 50 true [1 0 0 -1 -1.0 50.0] {<ffffffff8000000ffffffff8000003fffffffe000001ffe01fff800001ffe003ffc00001ffe001ff
e00001ffe000fff00001ffe0007ff80001ffe0007ff80001ffe0007ff80001ffe0003ffc0001ffe0
003ffc0001ffe0003ffc0001ffe0003ffc0001ffe0003ffc0001ffe0003ffc0001ffe0003ffc0001
ffe0003ff80001ffe0007ff80001ffe0007ff00001ffe000fff00001ffe001ffe00001ffe003ffc0
0001ffe01fff800001fffffffe000001fffffff0000001fffffff0000001ffe1fff8000001ffe1ff
fc000001ffe0fffc000001ffe07ffe000001ffe07fff000001ffe03fff000001ffe01fff800001ff
e01fffc00001ffe00fffc00001ffe007ffe00001ffe007fff00001ffe003fff80001ffe001fff800
01ffe000fffc0001ffe000fffe0001ffe0007ffe0001ffe0003fff0001ffe0003fff8001ffe0001f
ff8003fff0000fffc003fff0000fffe00ffffc0007fff8ffffffc003fff8>} imagemask 
  }
  82 /G52 MSTT31c420 AddChar
/G45 [50.0 0.0 2.0 0.0 47.0 50.0]
/G45 {
    45 50 true [1 0 0 -1 -2.0 50.0] {<ffffffffff800fffffffff8003ffffffff8003ffe003ff8001ffe0007f8001ffe0001f8001ffe000
0f8001ffe000078001ffe000038001ffe000038001ffe000018001ffe004018001ffe004018001ff
e004008001ffe00c008001ffe00c000001ffe00c000001ffe00c000001ffe01c000001ffe01c0000
01ffe03c000001ffe07c000001ffe1fc000001fffffc000001fffffc000001fffffc000001ffe1fc
000001ffe07c000001ffe03c000001ffe01c000001ffe01c000001ffe00c000001ffe00c000001ff
e00c000001ffe00c001801ffe004001801ffe004001801ffe004003801ffe000003001ffe0000070
01ffe000007001ffe00000f001ffe00001f001ffe00003f001ffe00007f001fff0001fe003fff800
ffe003ffffffffe00fffffffffe0ffffffffffe0>} imagemask 
  }
  69 /G45 MSTT31c420 AddChar
/G44 [54.0 0.0 1.0 0.0 51.0 50.0]
/G44 {
    50 50 true [1 0 0 -1 -1.0 50.0] {<fffffff80000000fffffffc0000003fffffff8000003ffe03ffe000001ffe007ff000001ffe003ff
c00001ffe001ffe00001ffe000fff00001ffe0007ff80001ffe0003ff80001ffe0003ffc0001ffe0
001ffe0001ffe0001ffe0001ffe0001fff0001ffe0000fff0001ffe0000fff0001ffe0000fff8001
ffe0000fff8001ffe00007ff8001ffe00007ff8001ffe00007ffc001ffe00007ffc001ffe00007ff
c001ffe00007ffc001ffe00007ffc001ffe00007ffc001ffe00007ffc001ffe00007ffc001ffe000
07ffc001ffe00007ffc001ffe00007ffc001ffe00007ff8001ffe0000fff8001ffe0000fff8001ff
e0000fff0001ffe0000fff0001ffe0000fff0001ffe0001ffe0001ffe0001ffe0001ffe0001ffc00
01ffe0003ff80001ffe0003ff80001ffe0007ff00001ffe000ffe00001ffe001ff800001ffe007ff
000003fff01ffc000003fffffff000000fffffffc00000fffffffc000000>} imagemask 
  }
  68 /G44 MSTT31c420 AddChar
/G4d [72.0 0.0 2.0 0.0 70.0 50.0]
/G4d {
    68 50 true [1 0 0 -1 -2.0 50.0] {<fffff8000000fffff00ffff8000001ffff0003fffc000001fffc0003fffc000003fffc0001fffe00
0003fff80001fffe0000037ff80001dfff0000077ff80001dfff0000077ff80001dfff00000e7ff8
0001cfff80000e7ff80001cfff80000c7ff80001c7ffc0001c7ff80001c7ffc0001c7ff80001c3ff
e000387ff80001c3ffe000387ff80001c3ffe000307ff80001c1fff000707ff80001c1fff000707f
f80001c0fff800e07ff80001c0fff800e07ff80001c07ffc01c07ff80001c07ffc01c07ff80001c0
7ffc01c07ff80001c03ffe03807ff80001c03ffe03807ff80001c01fff07007ff80001c01fff0700
7ff80001c00fff86007ff80001c00fff8e007ff80001c00fff8e007ff80001c007ffdc007ff80001
c007ffdc007ff80001c003fff8007ff80001c003fff8007ff80001c001fff8007ff80001c001fff0
007ff80001c001fff0007ff80001c000ffe0007ff80001c000ffe0007ff80001c0007fe0007ff800
01c0007fc0007ff80001c0003fc0007ff80001c0003f80007ff80001c0003f80007ff80001c0001f
80007ff80003c0001f00007ff80003e0000f0000fffc0007f0000e0000fffc001ffc00060003ffff
00ffff8004003ffffff0>} imagemask 
  }
  77 /G4d MSTT31c420 AddChar
/G4f [58.0 0.0 3.0 -1.0 55.0 51.0]
/G4f {
    52 52 true [1 0 0 -1 -3.0 51.0] {<00001fff0000000000fffff000000003fffffe0000000ffe03ff0000003ff800ffc000007fe0007f
e00000ffc0003ff00001ff80001ff80003ff80000ffc0007ff00000ffe0007ff000007ff000ffe00
0007ff001ffe000007ff801ffc000003ff803ffc000003ffc03ffc000003ffc07ffc000003ffe07f
fc000003ffe07ff8000001ffe07ff8000001ffe0fff8000001fff0fff8000001fff0fff8000001ff
f0fff8000001fff0fff8000001fff0fff8000001fff0fff8000001fff0fff8000001fff0fff80000
01fff0fff8000001fff0fff8000001fff07ff8000001ffe07ff8000001ffe07ff8000001ffe07ffc
000003ffe03ffc000003ffc03ffc000003ffc03ffc000003ff801ffc000003ff801ffe000007ff00
0ffe000007ff0007ff000007fe0007ff00000ffc0003ff80001ffc0001ff80001ff80000ffc0003f
f000007fe0007fe000001ff000ff8000000ffe03ff00000003fffffc000000007ffff0000000000f
ff000000>} imagemask 
  }
  79 /G4f MSTT31c420 AddChar
%%EndResource

0 0 0 fC
1011 243 338 (REDEMO) 338 SB
0 0 0 fC
/fm 256 def
337 2 1011 315 B
1 F
n

%%BeginResource: font MSTT31c420
/G65 [33.0 0.0 3.0 -1.0 31.0 35.0]
/G65 {
    28 36 true [1 0 0 -1 -3.0 35.0] {<000fc000007ff80001fffc0003f8fe0007f07f000fe07f801fe07fc01fe03fc03fc03fc03fc03fe0
7fc03fe07fc03fe07fc03ff0ffc03ff0fffffff0fffffff0fffffff0ffc00000ffc00000ffc00000
ffc00000ffe00000ffe00000ffe000007ff000207ff000307ff800603ffc00e03ffe01c01fff83c0
1fffff800fffff0007fffe0003fffc0000fff000003fc000>} imagemask 
  }
  101 /G65 MSTT31c420 AddChar
/G6d [60.0 0.0 3.0 0.0 57.0 35.0]
/G6d {
    54 35 true [1 0 0 -1 -3.0 35.0] {<00000fc001f800fff83ff007fe003ff8fff81fff001ff9fffc3fff801ffbfffe7fffc01fff8ffef1
ffc01ffe07ffe0ffc01ffe03ffc07fe01ffc03ff807fe01ff803ff007fe01ff803ff007fe01ff803
ff007fe01ff803ff007fe01ff803ff007fe01ff803ff007fe01ff803ff007fe01ff803ff007fe01f
f803ff007fe01ff803ff007fe01ff803ff007fe01ff803ff007fe01ff803ff007fe01ff803ff007f
e01ff803ff007fe01ff803ff007fe01ff803ff007fe01ff803ff007fe01ff803ff007fe01ff803ff
007fe01ff803ff007fe01ff803ff007fe01ff803ff007fe01ffc07ff00ffe03ffc07ff81fff0ffff
1fffe3fffc>} imagemask 
  }
  109 /G6d MSTT31c420 AddChar
/G6f [37.0 0.0 3.0 -1.0 34.0 35.0]
/G6f {
    31 36 true [1 0 0 -1 -3.0 35.0] {<001fe000007ffc0001ffff0003f83f8007f01fc00fe00fe01fe00ff01fe00ff03fe007f83fc007f8
7fc007fc7fc007fc7fc007fcffc007feffc007feffc007feffc007feffc007feffc007feffc007fe
ffc007feffc007feffc007fe7fc007fc7fc007fc7fc007fc3fc007f83fc00ff81fe00ff01fe00ff0
0fe00fe007f01fc003f83f8001ffff00007ffc00001ff000>} imagemask 
  }
  111 /G6f MSTT31c420 AddChar
/G6e [41.0 0.0 3.0 0.0 38.0 35.0]
/G6e {
    35 35 true [1 0 0 -1 -3.0 35.0] {<00000fc000fff83ff0003ff8fff8001ff9fffc001ffbfffe001fff8ffe001fff07fe001ffe03ff00
1ffc03ff001ffc03ff001ff803ff001ff803ff001ff803ff001ff803ff001ff803ff001ff803ff00
1ff803ff001ff803ff001ff803ff001ff803ff001ff803ff001ff803ff001ff803ff001ff803ff00
1ff803ff001ff803ff001ff803ff001ff803ff001ff803ff001ff803ff001ff803ff001ff803ff00
1ffc07ff003ffc0fff80ffff1fffe0>} imagemask 
  }
  110 /G6e MSTT31c420 AddChar
/G73 [29.0 0.0 3.0 -1.0 26.0 35.0]
/G73 {
    23 36 true [1 0 0 -1 -3.0 35.0] {<01fc0807ff181ffff83f87f83f01f87e00f87e0078fe0038ff0038ff8018ffc018fff008fff8007f
fe007fff003fff803fffe01ffff00ffff803fff801fffc00fffc003ffe001ffe8007fec003fec001
fee000fef000fcf000fcfc00f8fe01f8ff83f0ffffe0c7ff8080fe00>} imagemask 
  }
  115 /G73 MSTT31c420 AddChar
/G74 [25.0 0.0 1.0 -1.0 24.0 47.0]
/G74 {
    23 48 true [1 0 0 -1 -1.0 47.0] {<000600000600000e00000e00001e00003e00003e00007e0000fe0001fe0003fe0007fe000ffe001f
fffe3ffffefffffefffffe07fe0007fe0007fe0007fe0007fe0007fe0007fe0007fe0007fe0007fe
0007fe0007fe0007fe0007fe0007fe0007fe0007fe0007fe0007fe0007fe0007fe0007fe0007fe00
07fe0207fe0607ff1c03fffc01fff801fff0007fe0001f80>} imagemask 
  }
  116 /G74 MSTT31c420 AddChar
/G61 [37.0 0.0 3.0 -1.0 35.0 35.0]
/G61 {
    32 36 true [1 0 0 -1 -3.0 35.0] {<000ff80000fffe0003ffff0007e0ffc00f807fc01f803fe03f803fe03fc03ff07fe03ff07fe03ff0
7fe03ff07fe03ff03fe03ff03fc03ff00f807ff00001fff00007fff0001fbff0007e3ff001fc3ff0
03f83ff00ff03ff01fe03ff03fe03ff03fc03ff07fc03ff07fc03ff0ffc03ff0ffc07ff0ffe0fff0
fff1bff0ffff3fff7ffe1ffe7ffc1ffc3ff00ff80fc007e0>} imagemask 
  }
  97 /G61 MSTT31c420 AddChar
/G69 [21.0 0.0 3.0 0.0 19.0 51.0]
/G69 {
    16 51 true [1 0 0 -1 -3.0 51.0] {<03c00ff00ff01ff81ff81ff81ff80ff00ff003c00000000000000000000000000000fff83ff81ff8
1ff81ff81ff81ff81ff81ff81ff81ff81ff81ff81ff81ff81ff81ff81ff81ff81ff81ff81ff81ff8
1ff81ff81ff81ff81ff81ff81ff81ff81ff83ffcffff>} imagemask 
  }
  105 /G69 MSTT31c420 AddChar
/G20 [19.0 0.0 0.0 0.0 0.0 0.0]
/G20 {
} 
  32 /G20 MSTT31c420 AddChar
/G50 [46.0 0.0 1.0 0.0 44.0 50.0]
/G50 {
    43 50 true [1 0 0 -1 -1.0 50.0] {<fffffffc00000fffffffc00003fffffff00001ffe07ffc0001ffe01ffe0001ffe00fff0001ffe007
ff8001ffe003ff8001ffe003ffc001ffe001ffc001ffe001ffe001ffe001ffe001ffe001ffe001ff
e001ffe001ffe001ffe001ffe001ffe001ffe001ffe001ffe001ffc001ffe003ffc001ffe003ff80
01ffe007ff8001ffe00fff0001ffe01ffe0001ffe07ffc0001fffffff00001ffffffc00001fffff8
000001ffe000000001ffe000000001ffe000000001ffe000000001ffe000000001ffe000000001ff
e000000001ffe000000001ffe000000001ffe000000001ffe000000001ffe000000001ffe0000000
01ffe000000001ffe000000001ffe000000001ffe000000001ffe000000001ffe000000003fff000
000003fff00000000ffffc000000ffffffc00000>} imagemask 
  }
  80 /G50 MSTT31c420 AddChar
/G72 [33.0 0.0 3.0 0.0 31.0 35.0]
/G72 {
    28 35 true [1 0 0 -1 -3.0 35.0] {<00000780fff81fe03ff83ff03ff87ff01ff8fff01ff9fff01ffbfff01ffb8fe01fff07e01ffe0380
1ffe00001ffc00001ffc00001ffc00001ff800001ff800001ff800001ff800001ff800001ff80000
1ff800001ff800001ff800001ff800001ff800001ff800001ff800001ff800001ff800001ff80000
1ff800001ff800001ff800003ffc0000ffff0000>} imagemask 
  }
  114 /G72 MSTT31c420 AddChar
/G67 [38.0 0.0 3.0 -16.0 36.0 35.0]
/G67 {
    33 51 true [1 0 0 -1 -3.0 35.0] {<003fe0000001ffffff8003ffffff800ff87fff801ff03fff803fe01fe0003fe01ff0007fc00ff800
7fc00ff800ffc00ff800ffc00ffc00ffc00ffc00ffc00ffc00ffc00ffc00ffc00ffc00ffc00ffc00
7fc00ff8007fc00ff8003fe01ff0003fe01ff0001ff03fe00007f87fc00003ffff000000fffc0000
00fff0000003c000000007800000001f000000001f000000003f000000007f800000007fffff8000
7ffffff8007ffffffc007ffffffe003fffffff003fffffff001fffffff800fffffff800fffffff80
3f00007f807c00001f80f800000f80f800000f00f800000f00fc00001e007e00007c003fc003f800
1ffffff00007ffff8000007ff80000>} imagemask 
  }
  103 /G67 MSTT31c420 AddChar
/G66 [25.0 0.0 3.0 0.0 31.0 51.0]
/G66 {
    28 51 true [1 0 0 -1 -3.0 51.0] {<0001fe00000fff80003fffe0007f1fe000fe1ff001fe1ff001fe1ff003fe1ff003fe0fe007fe07c0
07fe000007fe000007fe000007fe000007fe000007fe000007fe0000fffff000fffff000fffff000
fffff00007fe000007fe000007fe000007fe000007fe000007fe000007fe000007fe000007fe0000
07fe000007fe000007fe000007fe000007fe000007fe000007fe000007fe000007fe000007fe0000
07fe000007fe000007fe000007fe000007fe000007fe000007fe000007fe00000fff00001fff8000
fffff000>} imagemask 
  }
  102 /G66 MSTT31c420 AddChar
/G53 [42.0 0.0 4.0 -1.0 39.0 51.0]
/G53 {
    35 52 true [1 0 0 -1 -4.0 51.0] {<001ff0010000ffff010001ffffc30007f80fff000fe003ff001fc000ff003f80007f003f00003f00
7f00001f007f00000f007f00000700ff00000700ff80000300ffc0000300ffe0000300fff0000100
fffc000100fffe0000007fff8000007fffe000003ffffc00003fffff00001fffff80000fffffe000
07fffff00003fffffc0001fffffe00007fffff00003fffff80000fffff800003ffffc00000ffffc0
00003fffc080000fffe0800003ffe0c00001ffe0c000007fe0c000007fe0e000003fe0e000001fe0
f000001fc0f000001fc0f800001fc0fc00001f80fe00003f80ff00003f00ffc0007e00ffe001fc00
fffc07f800e1ffffe000c03fff80008007fc0000>} imagemask 
  }
  83 /G53 MSTT31c420 AddChar
/G41 [54.0 0.0 0.0 0.0 52.0 51.0]
/G41 {
    52 51 true [1 0 0 -1 0.0 51.0] {<000000200000000000006000000000000070000000000000f0000000000000f8000000000001f800
0000000001fc000000000003fc000000000003fc000000000003fe000000000007fe000000000007
ff00000000000fff00000000000fff80000000001fff80000000001fff80000000001fffc0000000
003fffc0000000003bffe00000000073ffe00000000071fff000000000e1fff000000000e1fff000
000000e0fff800000001c0fff800000001c07ffc00000003807ffc00000003803ffe00000007003f
fe00000007003ffe00000007001fff0000000e001fff0000000e000fff8000001c000fff8000001f
ffffffc000003fffffffc000003fffffffc00000380003ffe00000700003ffe00000700001fff000
00e00001fff00000e00000fff80001c00000fff80001c00000fff80003c000007ffc0003c000007f
fc0007c000007ffe000fc000003fff001fe000007fff003ff80000ffffc0ffff000ffffff0>} imagemask 
  }
  65 /G41 MSTT31c420 AddChar
/G55 [54.0 0.0 1.0 -1.0 53.0 50.0]
/G55 {
    52 51 true [1 0 0 -1 -1.0 50.0] {<ffffffc01ffff00ffff80001ff0003fff00000fe0001ffe000007c0001ffe00000780001ffe00000
380001ffe00000380001ffe00000380001ffe00000380001ffe00000380001ffe00000380001ffe0
0000380001ffe00000380001ffe00000380001ffe00000380001ffe00000380001ffe00000380001
ffe00000380001ffe00000380001ffe00000380001ffe00000380001ffe00000380001ffe0000038
0001ffe00000380001ffe00000380001ffe00000380001ffe00000380001ffe00000380001ffe000
00380001ffe00000380001ffe00000380001ffe00000380001ffe00000380001ffe00000380001ff
e00000380001ffe00000380001ffe00000380001ffe00000300001ffe00000700000ffe000007000
00ffe00000700000fff00000e000007ff00000e000007ff00001c000003ff80003c000001ffc0007
8000000ffe000f00000007ffc07c00000003fffff800000000ffffe0000000000ffe000000>} imagemask 
  }
  85 /G55 MSTT31c420 AddChar
%%EndResource

559 331 1242 (Demonstation Program for RSAEURO) 1242 SB
/fm 256 def
1241 2 559 403 B
1 F
n

%%BeginResource: font MSTT31c420
/G27 [21.0 0.0 5.0 27.0 15.0 51.0]
/G27 {
    10 24 true [1 0 0 -1 -5.0 51.0] {<1e003f807f80ffc0ffc0ffc0ffc0ffc0ffc07f807f807f807f803f003f003f003f001e001e001e00
1e000c000c000c00>} imagemask 
  }
  39 /G27 MSTT31c420 AddChar
/G75 [41.0 0.0 3.0 -1.0 38.0 34.0]
/G75 {
    35 35 true [1 0 0 -1 -3.0 34.0] {<fff81fff003ff807ff001ff803ff001ff803ff001ff803ff001ff803ff001ff803ff001ff803ff00
1ff803ff001ff803ff001ff803ff001ff803ff001ff803ff001ff803ff001ff803ff001ff803ff00
1ff803ff001ff803ff001ff803ff001ff803ff001ff803ff001ff803ff001ff803ff001ff803ff00
1ff803ff001ff803ff001ff807ff001ff80fff000ffc1fff000ffe3fff000ffffbff0007fff3ff00
03ffe3ff8001ff83ffe0007e000000>} imagemask 
  }
  117 /G75 MSTT31c420 AddChar
/G6c [21.0 0.0 3.0 0.0 19.0 50.0]
/G6c {
    16 50 true [1 0 0 -1 -3.0 50.0] {<fff83ff81ff81ff81ff81ff81ff81ff81ff81ff81ff81ff81ff81ff81ff81ff81ff81ff81ff81ff8
1ff81ff81ff81ff81ff81ff81ff81ff81ff81ff81ff81ff81ff81ff81ff81ff81ff81ff81ff81ff8
1ff81ff81ff81ff81ff81ff81ff81ff83ffcffff>} imagemask 
  }
  108 /G6c MSTT31c420 AddChar
%%EndResource

947 419 467 (User's Manual) 467 SB
/fm 256 def
466 2 947 491 B
1 F
n

%%BeginResource: font MSTT31c46b
/MSTT31c46b [58.0 0 0 0 0 0] 103 -102 [-58.0 -58.0 58.0 58.0] [1 58 div 0 0 1 58 div 0 0] /MSTT31c46b GreNewFont
%%EndResource

32 0 0 58 58 0 0 1 53 /MSTT31c46b font

%%BeginResource: font MSTT31c46b
/G56 [39.0 0.0 0.0 0.0 39.0 42.0]
/G56 {
    39 42 true [1 0 0 -1 0.0 42.0] {<ff800003fe7f800003fc7f800003fc7fc00007fc3fc00007f83fc00007f83fe0000ff81fe0000ff0
1fe0000ff01ff0001fe00ff0001fe00ff0001fe00ff8003fc007f8003fc007f8003f8003fc007f80
03fc007f8003fc007f0001fe00ff0001fe00ff0001fe00fe0000ff01fe0000ff01fc0000ff01fc00
007f83fc00007f83f800007f83f800003fc7f800003fc7f000001fc7f000001fefe000001fefe000
000fefe000000fffc000000fffc0000007ff80000007ff80000007ff80000003ff00000003ff0000
0003ff00000001fe0000>} imagemask 
  }
  86 /G56 MSTT31c46b AddChar
/G65 [32.0 0.0 2.0 -1.0 30.0 32.0]
/G65 {
    28 33 true [1 0 0 -1 -2.0 32.0] {<003fc00000fff00003fffc0007fffe000fffff001fffff803ff0ffc03fc03fc07fc01fc07f801fe0
7f801fe07f000fe0ff000ff0ff000ff0fffffff0fffffff0fffffff0fffffff0fffffff0ff000000
ff000000ff0000007f8000007f801e007fc03fe03fc03fc03ff0ffc01fffff800fffff8007ffff00
03fffe0001fff800003fc000>} imagemask 
  }
  101 /G65 MSTT31c46b AddChar
/G72 [23.0 0.0 4.0 0.0 24.0 32.0]
/G72 {
    20 32 true [1 0 0 -1 -4.0 32.0] {<000fc0ff1ff0ff3ff0ff7fe0ff7fe0ffffe0ffffc0ffffc0ffe0c0ffc000ff8000ff8000ff8000ff
0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff00
00ff0000ff0000ff0000ff0000ff0000>} imagemask 
  }
  114 /G72 MSTT31c46b AddChar
/G73 [32.0 0.0 1.0 -1.0 29.0 32.0]
/G73 {
    28 33 true [1 0 0 -1 -1.0 32.0] {<007fe00003fffc000ffffe001fffff001fffff803fffffc03fe0ffc07f803fe07f803fe07f801e00
7fc000007ff800007fff80003ffff0003ffffe001fffff800fffffc003ffffe000ffffe0001ffff0
0001fff000001ff00f000ff0ff000ff0ff800ff07fc01ff07fe03fe03fffffe01fffffc00fffff80
07ffff0001fffc00003fe000>} imagemask 
  }
  115 /G73 MSTT31c46b AddChar
/G69 [16.0 0.0 4.0 0.0 12.0 42.0]
/G69 {
    8 42 true [1 0 0 -1 -4.0 42.0] {<ffffffffffffff00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffff>} imagemask 
  }
  105 /G69 MSTT31c46b AddChar
/G6f [35.0 0.0 2.0 -1.0 33.0 32.0]
/G6f {
    31 33 true [1 0 0 -1 -2.0 32.0] {<001ff000007ffc0001ffff0007ffff800fffffc00fffffe01ff83ff03fe00ff83fc007f87fc007fc
7f8003fc7f8003fcff0001feff0001feff0001feff0001feff0001feff0001feff0001feff0001fe
ff0001fe7f8003fc7f8003fc7fc007fc3fc007f83fe00ff81ff83ff01fffffe00fffffc007ffff80
01ffff00007ffc00001ff000>} imagemask 
  }
  111 /G6f MSTT31c46b AddChar
/G6e [35.0 0.0 4.0 0.0 31.0 32.0]
/G6e {
    27 32 true [1 0 0 -1 -4.0 32.0] {<0003f800ff0ffe00ff1fff00ff3fff80ff7fffc0ffffffc0fff0ffc0ffc03fe0ff803fe0ff801fe0
ff801fe0ff001fe0ff001fe0ff001fe0ff001fe0ff001fe0ff001fe0ff001fe0ff001fe0ff001fe0
ff001fe0ff001fe0ff001fe0ff001fe0ff001fe0ff001fe0ff001fe0ff001fe0ff001fe0ff001fe0
ff001fe0ff001fe0>} imagemask 
  }
  110 /G6e MSTT31c46b AddChar
/G20 [16.0 0.0 0.0 0.0 0.0 0.0]
/G20 {
} 
  32 /G20 MSTT31c46b AddChar
/G31 [32.0 0.0 5.0 0.0 23.0 42.0]
/G31 {
    18 42 true [1 0 0 -1 -5.0 42.0] {<001fc0001fc0003fc0003fc0007fc000ffc001ffc003ffc007ffc01fffc07fffc0ffffc0ffffc0ff
bfc0ff3fc0fc3fc0f83fc0e03fc0803fc0003fc0003fc0003fc0003fc0003fc0003fc0003fc0003f
c0003fc0003fc0003fc0003fc0003fc0003fc0003fc0003fc0003fc0003fc0003fc0003fc0003fc0
003fc0003fc0>} imagemask 
  }
  49 /G31 MSTT31c46b AddChar
/G2e [16.0 0.0 4.0 0.0 12.0 8.0]
/G2e {
    8 8 true [1 0 0 -1 -4.0 8.0] {<ffffffffffffffff>} imagemask 
  }
  46 /G2e MSTT31c46b AddChar
/G30 [32.0 0.0 2.0 -1.0 29.0 42.0]
/G30 {
    27 43 true [1 0 0 -1 -2.0 42.0] {<003f800001fff00003fff80007fffc000ffffe001fffff001fffff003fe0ff803fc07f803fc07f80
7f803fc07f803fc07f803fc07f001fc0ff001fe0ff001fe0ff001fe0ff001fe0ff001fe0ff001fe0
ff001fe0ff001fe0ff001fe0ff001fe0ff001fe0ff001fe0ff001fe0ff001fe0ff001fe07f001fc0
7f803fc07f803fc07f803fc07fc07f803fc07f803fe0ff801fffff001fffff000ffffe0007fffc00
03fff80001fff000003f8000>} imagemask 
  }
  48 /G30 MSTT31c46b AddChar
%%EndResource

1026 556 308 (Version 1.0) 308 SB

%%BeginResource: font MSTT31c43b
/MSTT31c43b [50.0 0 0 0 0 0] 100 -100 [-50.0 -50.0 50.0 50.0] [1 50 div 0 0 1 50 div 0 0] /MSTT31c43b GreNewFont
%%EndResource

32 0 0 50 50 0 0 1 46 /MSTT31c43b font

%%BeginResource: font MSTT31c43b
/G43 [36.0 0.0 2.0 -1.0 34.0 34.0]
/G43 {
    32 35 true [1 0 0 -1 -2.0 34.0] {<0003fe01001fffe3007f81ff00fe003f03fc001f07f8000f0ff000070fe000031fe000033fc00001
3fc000017fc000007f8000007f800000ff800000ff800000ff800000ff800000ff800000ff800000
ff800000ff8000007f8000007fc000007fc000003fc000003fe000001fe000021fe000060ff0000e
07f8001c03fc003800ff01e0003fffc00007fe00>} imagemask 
  }
  67 /G43 MSTT31c43b AddChar
/G6f [25.0 0.0 2.0 -1.0 23.0 23.0]
/G6f {
    21 24 true [1 0 0 -1 -2.0 23.0] {<01fc0007ff000f8f801f07c03f07e03e03f07e03f07e03f0fe03f8fe03f8fe03f8fe03f8fe03f8fe
03f8fe03f8fe03f87e03f07e03f03e03f03f07e01f07c00f8f8007ff0001fc00>} imagemask 
  }
  111 /G6f MSTT31c43b AddChar
/G70 [28.0 0.0 2.0 -11.0 26.0 23.0]
/G70 {
    24 34 true [1 0 0 -1 -2.0 23.0] {<0007c0ff9ff07fbff83fe1fc3fc0fc3fc0fe3f80fe3f807e3f807f3f807f3f807f3f807f3f807f3f
807f3f807f3f807f3f807e3f807e3f80fe3f80fc3fc0fc3ff1f83f9ff03f8fc03f80003f80003f80
003f80003f80003f80003f80003f80007fc000ffe000>} imagemask 
  }
  112 /G70 MSTT31c43b AddChar
/G79 [25.0 0.0 0.0 -11.0 24.0 22.0]
/G79 {
    24 33 true [1 0 0 -1 0.0 22.0] {<fff8ff7fe03e3fc01c1fe0180fe0180ff0300ff03007f03007f86003f86003fcc001fcc001fec000
ff8000ff80007f00007f00007f00003e00003e00001e00001c00000c000018000018000018003c30
007e30007e60007e60007fc0003f80001f0000>} imagemask 
  }
  121 /G79 MSTT31c43b AddChar
/G72 [21.0 0.0 2.0 0.0 21.0 23.0]
/G72 {
    19 23 true [1 0 0 -1 -2.0 23.0] {<0003c0ff87e07f8fe03f9fe03fbfe03fe3e03fc1c03fc0003fc0003f80003f80003f80003f80003f
80003f80003f80003f80003f80003f80003f80003f80007fc000ffe000>} imagemask 
  }
  114 /G72 MSTT31c43b AddChar
/G69 [14.0 0.0 2.0 0.0 13.0 34.0]
/G69 {
    11 34 true [1 0 0 -1 -2.0 34.0] {<0e001f003f803f803f801f000e0000000000000000000000ff807f803f803f803f803f803f803f80
3f803f803f803f803f803f803f803f803f803f803f803f807fc0ffe0>} imagemask 
  }
  105 /G69 MSTT31c43b AddChar
/G67 [25.0 0.0 2.0 -11.0 24.0 23.0]
/G67 {
    22 34 true [1 0 0 -1 -2.0 23.0] {<03f8000ffffc1f8ffc3f0ffc7e07c0fe07e0fe07f0fe07f0fe07f0fe07f07e07f07e07e03f0fe01f
9fc007ff0003fc000e00001c00003c00007e00007fffc07ffff07ffff87ffff83ffffc1ffffc7000
7ce0001ce0001ce00018f000307c01e03fffc007fe00>} imagemask 
  }
  103 /G67 MSTT31c43b AddChar
/G68 [28.0 0.0 2.0 0.0 26.0 33.0]
/G68 {
    24 33 true [1 0 0 -1 -2.0 33.0] {<ff80007f80003f80003f80003f80003f80003f80003f80003f80003f80003f87c03f9ff03fbff83f
e3f83fc1fc3f81fc3f81fc3f81fc3f81fc3f81fc3f81fc3f81fc3f81fc3f81fc3f81fc3f81fc3f81
fc3f81fc3f81fc3f81fc3f81fc7fc3feffe7ff>} imagemask 
  }
  104 /G68 MSTT31c43b AddChar
/G74 [17.0 0.0 1.0 -1.0 16.0 30.0]
/G74 {
    15 31 true [1 0 0 -1 -1.0 30.0] {<004000c001c001c003c007c00fc03fc07ffefffe1fc01fc01fc01fc01fc01fc01fc01fc01fc01fc0
1fc01fc01fc01fc01fc01fc01fc21fe60ffc07f803e0>} imagemask 
  }
  116 /G74 MSTT31c43b AddChar
/G20 [13.0 0.0 0.0 0.0 0.0 0.0]
/G20 {
} 
  32 /G20 MSTT31c43b AddChar
/G28 [17.0 0.0 2.0 -11.0 16.0 34.0]
/G28 {
    14 45 true [1 0 0 -1 -2.0 34.0] {<00040018007000e001c003c0078007800f801f001f003f003f007e007e007e007e00fe00fe00fe00
fe00fe00fe00fe00fe00fe00fe00fe007e007e007e003f003f003f001f001f000f800780078003c0
01c000e0007000180004>} imagemask 
  }
  40 /G28 MSTT31c43b AddChar
/G29 [17.0 0.0 1.0 -11.0 15.0 34.0]
/G29 {
    14 45 true [1 0 0 -1 -1.0 34.0] {<8000600038001c000e000f000780078007c003e003e003f003f001f001f801f801f801fc01fc01fc
01fc01fc01fc01fc01fc01fc01fc01fc01f801f801f801f803f003f003e003e007c0078007800f00
0e001c00380060008000>} imagemask 
  }
  41 /G29 MSTT31c43b AddChar
/G4a [25.0 0.0 1.0 -1.0 25.0 33.0]
/G4a {
    24 34 true [1 0 0 -1 -1.0 33.0] {<03ffff003ff0001fe0001fe0001fe0001fe0001fe0001fe0001fe0001fe0001fe0001fe0001fe000
1fe0001fe0001fe0001fe0001fe0001fe0001fe0001fe0001fe0001fe0381fe07c1fe0fe1fe0fe1f
e0fe1fe0fc1fc0781fc0783f803c3f000ffe0003f800>} imagemask 
  }
  74 /G4a MSTT31c43b AddChar
/G2e [13.0 0.0 2.0 -1.0 10.0 7.0]
/G2e {
    8 8 true [1 0 0 -1 -2.0 7.0] {<3c7effffffff7e3c>} imagemask 
  }
  46 /G2e MSTT31c43b AddChar
/G53 [28.0 0.0 3.0 -1.0 26.0 34.0]
/G53 {
    23 35 true [1 0 0 -1 -3.0 34.0] {<01fc0807ff981f07f83c01f87c0078780078780038f80018fc0018fe0008ff0008ffc000fff0007f
fc007fff003fff801fffe00ffff003fff801fffc007ffc001ffe0007fe8001fe8000fec0007ec000
3ee0003ee0003cf0003cf80078fe00f0ff81e0c7ffc080fe00>} imagemask 
  }
  83 /G53 MSTT31c43b AddChar
/G41 [36.0 0.0 0.0 0.0 35.0 34.0]
/G41 {
    35 34 true [1 0 0 -1 0.0 34.0] {<000040000000006000000000e000000000f000000001f000000001f800000003f800000003f80000
0007fc00000007fc00000007fe0000000dfe0000000dff00000019ff00000018ff00000030ff8000
00307f800000207fc00000603fc00000603fe00000c03fe00000c01fe00001fffff00001fffff000
03000ff800030007f800030007fc00060007fc00060003fe000e0003fe000e0001ff001e0001ff00
7f0003ff80ffe01fffe0>} imagemask 
  }
  65 /G41 MSTT31c43b AddChar
/G4b [40.0 0.0 1.0 0.0 40.0 33.0]
/G4b {
    39 33 true [1 0 0 -1 -1.0 33.0] {<ffffc07ffc0ffe000fe007fc000fc007f8000f0007f8000e0007f8001c0007f800300007f800e000
07f801c00007f803000007f80e000007f81c000007f838000007f878000007f9fc000007fbfe0000
07ffff000007ffff000007f9ff800007f8ffc00007f87fe00007f83ff00007f81ff80007f81ff800
07f80ffc0007f807fe0007f803ff0007f801ff8007f801ffc007f800ffe007f800fff00ffe00fff8
ffffc3fffe>} imagemask 
  }
  75 /G4b MSTT31c43b AddChar
/G61 [25.0 0.0 2.0 -1.0 24.0 23.0]
/G61 {
    22 24 true [1 0 0 -1 -2.0 23.0] {<00fc0007ff001e1f803c0fc03e0fe07e0fe07f0fe07f0fe03e0fe01c0fe0003fe000efe003cfe00f
8fe01f0fe03f0fe07e0fe0fe0fe0fe0fe0fe1fe0ff2fe0ffcffc7f87f83e03e0>} imagemask 
  }
  97 /G61 MSTT31c43b AddChar
/G31 [25.0 0.0 4.0 0.0 21.0 33.0]
/G31 {
    17 33 true [1 0 0 -1 -4.0 33.0] {<00300000f00003f0001ff0007ff000cff00007f00007f00007f00007f00007f00007f00007f00007
f00007f00007f00007f00007f00007f00007f00007f00007f00007f00007f00007f00007f00007f0
0007f00007f00007f00007f8000ffc00ffff80>} imagemask 
  }
  49 /G31 MSTT31c43b AddChar
/G39 [25.0 0.0 2.0 0.0 23.0 33.0]
/G39 {
    21 33 true [1 0 0 -1 -2.0 33.0] {<01f80007fe000f1f801f0fc03e07e07e07e07e07f0fe03f0fe03f0fe03f8fe03f8fe03f8fe03f8fe
03f87f03f87f03f83f83f81fc7f00ffff003f7f00007f00007e00007e0000fc0000f80001f80003f
00007e0000fc0001f00007c0003f0000f00000>} imagemask 
  }
  57 /G39 MSTT31c43b AddChar
/G34 [25.0 0.0 2.0 0.0 23.0 33.0]
/G34 {
    21 33 true [1 0 0 -1 -2.0 33.0] {<0001c00003c00007c0000fc0000fc0001fc0003fc0003fc0007fc000dfc0019fc0019fc0031fc006
1fc0061fc00c1fc0181fc0381fc0301fc0601fc0c01fc0fffff8fffff8fffff8fffff8fffff8001f
c0001fc0001fc0001fc0001fc0001fc0001fc0>} imagemask 
  }
  52 /G34 MSTT31c43b AddChar
/G2d [17.0 0.0 1.0 9.0 15.0 14.0]
/G2d {
    14 5 true [1 0 0 -1 -1.0 14.0] {<fffcfffcfffcfffcfffc>} imagemask 
  }
  45 /G2d MSTT31c43b AddChar
/G35 [25.0 0.0 2.0 0.0 23.0 33.0]
/G35 {
    21 33 true [1 0 0 -1 -2.0 33.0] {<03fff807fff807fff007fff00ffff00fffe00c00001800001800003f80003ff8003ffe007fff007f
ffc07fffe0ffffe001fff0001ff00007f80001f80000f80000780000780000380000380000307800
30fe0030ff0060ff80607fe1c03fff000ff800>} imagemask 
  }
  53 /G35 MSTT31c43b AddChar
%%EndResource

777 675 807 (Copyright \(C\) J.S.A.Kapp 1994-1995.) 807 SB
32 0 0 50 50 0 0 0 40 /Courier /font0 ANSIFont font
240 782 1800 (This note describes REDEMO, a program that demonstrates some) 1800 SB
240 832 1380 (features of the RSAEURO cryptographic toolkit.) 1380 SB
240 932 30 (R) 29 SB
269 932 30 (E) 29 SB
298 932 30 (D) 29 SB
327 932 30 (E) 29 SB
356 932 30 (M) 29 SB
385 932 30 (O) 29 SB
414 932 30 ( ) 28 SB
442 932 30 (i) 29 SB
471 932 30 (s) 29 SB
500 932 30 ( ) 28 SB
528 932 30 (a) 29 SB
557 932 30 ( ) 28 SB
585 932 30 (s) 29 SB
614 932 30 (i) 29 SB
643 932 30 (m) 29 SB
672 932 30 (p) 29 SB
701 932 30 (l) 29 SB
730 932 30 (e) 29 SB
759 932 30 ( ) 28 SB
787 932 30 (p) 29 SB
816 932 30 (r) 29 SB
845 932 30 (o) 29 SB
874 932 30 (g) 29 SB
903 932 30 (r) 29 SB
932 932 30 (a) 29 SB
961 932 30 (m) 29 SB
990 932 30 ( ) 29 SB
1019 932 30 (t) 29 SB
1048 932 30 (h) 29 SB
1077 932 30 (a) 29 SB
1106 932 30 (t) 29 SB
1135 932 30 ( ) 29 SB
1164 932 30 (e) 29 SB
1193 932 30 (x) 29 SB
1222 932 30 (e) 29 SB
1251 932 30 (r) 29 SB
1280 932 30 (c) 29 SB
1309 932 30 (i) 29 SB
1338 932 30 (s) 29 SB
1367 932 30 (e) 29 SB
1396 932 30 (s) 29 SB
1425 932 30 ( ) 29 SB
1454 932 30 (R) 29 SB
1483 932 30 (S) 29 SB
1512 932 30 (A) 29 SB
1541 932 30 (E) 29 SB
1570 932 30 (U) 29 SB
1599 932 30 (R) 29 SB
1628 932 30 (O) 29 SB
1657 932 30 (') 29 SB
1686 932 30 (s) 29 SB
1715 932 30 ( ) 29 SB
1744 932 30 (c) 29 SB
1773 932 30 (r) 29 SB
1802 932 30 (y) 29 SB
1831 932 30 (p) 29 SB
1860 932 30 (t) 29 SB
1889 932 30 (o) 29 SB
1918 932 30 (g) 29 SB
1947 932 30 (r) 29 SB
1976 932 30 (a) 29 SB
2005 932 30 (p) 29 SB
2034 932 30 (h) 29 SB
2063 932 30 (i) 29 SB
2092 932 30 (c) 29 SB
240 982 1740 (operations. With REDEMO, you can perform the cryptographic) 1740 SB
240 1032 30 (o) 29 SB
269 1032 30 (p) 29 SB
298 1032 30 (e) 29 SB
327 1032 30 (r) 29 SB
356 1032 30 (a) 29 SB
385 1032 30 (t) 29 SB
414 1032 30 (i) 29 SB
443 1032 30 (o) 29 SB
472 1032 30 (n) 29 SB
501 1032 30 (s) 29 SB
530 1032 30 ( ) 29 SB
559 1032 30 (o) 29 SB
588 1032 30 (f) 29 SB
617 1032 30 ( ) 29 SB
646 1032 30 (s) 29 SB
675 1032 30 (i) 29 SB
704 1032 30 (g) 29 SB
733 1032 30 (n) 29 SB
762 1032 30 (i) 29 SB
791 1032 30 (n) 29 SB
820 1032 30 (g) 29 SB
849 1032 30 (,) 29 SB
878 1032 30 ( ) 29 SB
907 1032 30 (s) 29 SB
936 1032 30 (e) 29 SB
965 1032 30 (a) 29 SB
994 1032 30 (l) 29 SB
1023 1032 30 (i) 29 SB
1052 1032 30 (n) 29 SB
1081 1032 30 (g) 29 SB
1110 1032 30 (,) 29 SB
1139 1032 30 ( ) 29 SB
1168 1032 30 (v) 29 SB
1197 1032 30 (e) 29 SB
1226 1032 30 (r) 29 SB
1255 1032 30 (i) 29 SB
1284 1032 30 (f) 29 SB
1313 1032 30 (y) 29 SB
1342 1032 30 (i) 29 SB
1371 1032 750 (ng, and opening files, as) 750 SB
240 1082 1860 (well as generating key pairs. There can be up to two different) 1860 SB
240 1132 1680 (key pairs, so you can simulate a multi-user environment.) 1680 SB
240 1232 1800 (REDEMO has a main menu with seven commands. The main menu is) 1800 SB
240 1282 30 (d) 29 SB
269 1282 30 (i) 29 SB
298 1282 30 (s) 29 SB
327 1282 30 (p) 29 SB
356 1282 30 (l) 29 SB
385 1282 30 (a) 29 SB
414 1282 30 (y) 29 SB
443 1282 30 (e) 29 SB
472 1282 30 (d) 29 SB
501 1282 30 ( ) 29 SB
530 1282 30 (w) 29 SB
559 1282 30 (h) 29 SB
588 1282 30 (e) 29 SB
617 1282 30 (n) 29 SB
646 1282 30 ( ) 29 SB
675 1282 30 (y) 29 SB
704 1282 30 (o) 29 SB
733 1282 30 (u) 29 SB
762 1282 30 ( ) 29 SB
791 1282 30 (s) 29 SB
820 1282 30 (t) 29 SB
849 1282 30 (a) 29 SB
878 1282 30 (r) 29 SB
907 1282 30 (t) 29 SB
936 1282 30 ( ) 29 SB
965 1282 30 (u) 29 SB
994 1282 30 (p) 29 SB
1023 1282 30 ( ) 29 SB
1052 1282 30 (R) 29 SB
1081 1282 30 (E) 29 SB
1110 1282 30 (D) 29 SB
1139 1282 30 (E) 29 SB
1168 1282 30 (M) 29 SB
1197 1282 30 (O) 29 SB
1226 1282 30 (,) 29 SB
1255 1282 30 ( ) 29 SB
1284 1282 30 (a) 29 SB
1313 1282 30 (n) 29 SB
1342 1282 30 (d) 29 SB
1371 1282 750 ( is displayed again after) 750 SB
240 1332 1800 (REDEMO performs a command. After you select a command REDEMO) 1800 SB
240 1382 1260 (prompts for parameters such as file names.) 1260 SB
240 1482 1800 (REDEMO's commands and their parameters are summarized in the) 1800 SB
240 1532 480 (following table.) 480 SB
32 0 0 50 50 0 0 0 40 /Courier-Oblique /font11 ANSIFont font
390 1632 390 (RDEMO COMMAND) 390 SB
/fm 256 def
389 2 390 1675 B
1 F
n
1290 1632 300 (PARAMETERS) 300 SB
/fm 256 def
299 2 1290 1675 B
1 F
n
240 1732 90 (S -) 90 SB
390 1732 330 (Sign a file) 330 SB
1290 1732 360 (name of file) 360 SB
390 1782 420 (digest content) 420 SB
1290 1782 30 (w) 28 SB
1318 1782 30 (h) 28 SB
1346 1782 30 (i) 28 SB
1374 1782 30 (c) 28 SB
1402 1782 30 (h) 28 SB
1430 1782 30 ( ) 26 SB
1456 1782 30 (p) 28 SB
1484 1782 30 (r) 28 SB
1512 1782 30 (i) 28 SB
1540 1782 30 (v) 28 SB
1568 1782 30 (a) 28 SB
1596 1782 30 (t) 28 SB
1624 1782 30 (e) 28 SB
1652 1782 30 ( ) 26 SB
1678 1782 30 (k) 28 SB
1706 1782 30 (e) 28 SB
1734 1782 30 (y) 28 SB
1762 1782 30 ( ) 26 SB
1788 1782 30 (t) 28 SB
1816 1782 30 (o) 28 SB
1844 1782 30 ( ) 26 SB
1870 1782 30 (s) 28 SB
1898 1782 30 (i) 28 SB
1926 1782 30 (g) 28 SB
1954 1782 30 (n) 28 SB
1982 1782 30 ( ) 27 SB
2009 1782 30 (w) 28 SB
2037 1782 30 (i) 28 SB
2065 1782 30 (t) 28 SB
2093 1782 30 (h) 28 SB
390 1832 570 (encrypt digest with) 570 SB
1290 1832 720 (message-digest algorithm) 720 SB
390 1882 330 (private key) 330 SB
1290 1882 720 (name of file in which to) 720 SB
240 1932 30 ( ) 30 SB
1290 1932 120 (save) 120 SB
1440 1932 270 (signature) 270 SB
240 2032 90 (V -) 90 SB
390 2032 600 (Verify a signed file) 600 SB
1290 2032 360 (name of file) 360 SB
390 2082 660 (digest content decrypt) 660 SB
1290 2082 30 (w) 31 SB
1321 2082 30 (h) 31 SB
1352 2082 90 (ich) 90 SB
1443 2082 30 ( ) 42 SB
1485 2082 210 (public ) 222 SB
1707 2082 120 (key ) 132 SB
1839 2082 90 (to ) 102 SB
1941 2082 180 (verify) 180 SB
390 2132 630 (signature with public) 630 SB
1290 2132 30 (w) 29 SB
1319 2132 30 (i) 29 SB
1348 2132 30 (t) 29 SB
1377 2132 30 (h) 29 SB
1406 2132 30 ( ) 24 SB
1430 2132 30 (m) 29 SB
1459 2132 30 (e) 29 SB
1488 2132 30 (s) 29 SB
1517 2132 30 (s) 29 SB
1546 2132 30 (a) 29 SB
1575 2132 30 (g) 29 SB
1604 2132 30 (e) 29 SB
1633 2132 30 (-) 29 SB
1662 2132 30 (d) 29 SB
1691 2132 30 (i) 29 SB
1720 2132 30 (g) 29 SB
1749 2132 30 (e) 29 SB
1778 2132 30 (s) 29 SB
1807 2132 30 (t) 29 SB
1836 2132 30 ( ) 24 SB
1860 2132 30 (a) 29 SB
1889 2132 30 (l) 29 SB
1918 2132 30 (g) 29 SB
1947 2132 30 (o) 29 SB
1976 2132 30 (r) 29 SB
2005 2132 30 (i) 29 SB
2034 2132 30 (t) 29 SB
2063 2132 30 (h) 29 SB
2092 2132 30 (m) 29 SB
390 2182 630 (key compare result to) 630 SB
1290 2182 660 (name of file in which ) 660 SB
390 2232 180 (digest) 180 SB
1290 2232 540 (signature is saved) 540 SB
240 2332 90 (E -) 90 SB
390 2332 330 (sEal a file) 330 SB
1290 2332 360 (name of file) 360 SB
390 2382 600 (generate random data) 600 SB
1290 2382 30 (n) 29 SB
1319 2382 30 (a) 29 SB
1348 2382 30 (m) 29 SB
1377 2382 30 (e) 29 SB
1406 2382 30 ( ) 27 SB
1433 2382 30 (o) 29 SB
1462 2382 30 (f) 29 SB
1491 2382 30 ( ) 27 SB
1518 2382 30 (f) 29 SB
1547 2382 30 (i) 29 SB
1576 2382 30 (l) 29 SB
1605 2382 30 (e) 29 SB
1634 2382 30 ( ) 27 SB
1661 2382 30 (i) 29 SB
1690 2382 30 (n) 29 SB
1719 2382 30 ( ) 27 SB
1746 2382 30 (w) 29 SB
1775 2382 30 (h) 29 SB
1804 2382 30 (i) 29 SB
1833 2382 30 (c) 29 SB
1862 2382 30 (h) 29 SB
1891 2382 30 ( ) 28 SB
1919 2382 30 (t) 29 SB
1948 2382 30 (o) 29 SB
1977 2382 30 ( ) 28 SB
2005 2382 30 (s) 29 SB
2034 2382 30 (a) 29 SB
2063 2382 30 (v) 29 SB
2092 2382 30 (e) 29 SB
390 2435 540 (encryption key, IV) 540 SB
32 0 0 50 50 0 0 0 43 /Courier-BoldOblique /font10 ANSIFont font
930 2432 90 (\(*\)) 90 SB
32 0 0 50 50 0 0 0 40 /Courier-Oblique /font11 ANSIFont font
1290 2435 690 (encrypted content which) 690 SB
390 2485 690 (encrypt key with public) 690 SB
1290 2485 30 (p) 29 SB
1319 2485 30 (u) 29 SB
1348 2485 30 (b) 29 SB
1377 2485 30 (l) 29 SB
1406 2485 30 (i) 29 SB
1435 2485 30 (c) 29 SB
1464 2485 30 ( ) 29 SB
1493 2485 30 (k) 29 SB
1522 2485 30 (e) 29 SB
1551 2485 570 (y to seal with data) 570 SB
390 2535 570 (key encrypt content) 570 SB
1290 2535 600 (encryption algorithm) 600 SB
390 2585 240 (with key) 240 SB
1290 2585 780 (names of files in which to) 780 SB
240 2635 30 ( ) 30 SB
1290 2635 750 (save encrypted key and IV) 750 SB
240 2735 90 (O -) 90 SB
390 2735 540 (Open a sealed file) 540 SB
1290 2735 660 (name of file in which ) 660 SB
390 2785 1710 (decrypt encrypted key         encrypted  content is saved) 1710 SB
390 2835 480 (with private key) 480 SB
1290 2835 30 (n) 29 SB
1319 2835 30 (a) 29 SB
1348 2835 30 (m) 29 SB
1377 2835 30 (e) 29 SB
1406 2835 30 ( ) 27 SB
1433 2835 30 (o) 29 SB
1462 2835 30 (f) 29 SB
1491 2835 30 ( ) 27 SB
1518 2835 30 (f) 29 SB
1547 2835 30 (i) 29 SB
1576 2835 30 (l) 29 SB
1605 2835 30 (e) 29 SB
1634 2835 30 ( ) 27 SB
1661 2835 30 (i) 29 SB
1690 2835 30 (n) 29 SB
1719 2835 30 ( ) 27 SB
1746 2835 30 (w) 29 SB
1775 2835 30 (h) 29 SB
1804 2835 30 (i) 29 SB
1833 2835 30 (c) 29 SB
1862 2835 30 (h) 29 SB
1891 2835 30 ( ) 28 SB
1919 2835 30 (t) 29 SB
1948 2835 30 (o) 29 SB
1977 2835 30 ( ) 28 SB
2005 2835 30 (s) 29 SB
2034 2835 30 (a) 29 SB
2063 2835 30 (v) 29 SB
2092 2835 30 (e) 29 SB
390 2885 750 (decrypt encrypted content) 750 SB
1290 2885 690 (recovered content which) 690 SB
390 2935 240 (with key) 240 SB
1290 2935 720 (private key to open with) 720 SB
1290 2985 750 (data encryption algorithm) 750 SB
1290 3035 690 (names of files in which) 690 SB
1290 3085 30 (e) 28 SB
1318 3085 30 (n) 28 SB
1346 3085 30 (c) 28 SB
1374 3085 30 (r) 28 SB
1402 3085 30 (y) 28 SB
1430 3085 30 (p) 28 SB
1458 3085 30 (t) 28 SB
1486 3085 30 (e) 28 SB
1514 3085 30 (d) 28 SB
1542 3085 30 ( ) 26 SB
1568 3085 30 (k) 28 SB
1596 3085 30 (e) 28 SB
1624 3085 30 (y) 28 SB
1652 3085 30 ( ) 26 SB
1678 3085 30 (a) 28 SB
1706 3085 30 (n) 28 SB
1734 3085 30 (d) 28 SB
1762 3085 30 ( ) 26 SB
1788 3085 30 (I) 28 SB
1816 3085 30 (V) 28 SB
1844 3085 30 ( ) 26 SB
1870 3085 30 (a) 28 SB
1898 3085 30 (r) 28 SB
1926 3085 30 (e) 28 SB
1954 3085 30 ( ) 27 SB
1981 3085 30 (s) 28 SB
2009 3085 30 (a) 28 SB
2037 3085 30 (v) 28 SB
2065 3085 30 (e) 28 SB
2093 3085 30 (d) 28 SB
1 #C
EJ RS
%%PageTrailer
%%PageResources: font Courier
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font MSTT31c420
%%+ font MSTT31c43b
%%+ font MSTT31c46b
%%Page: 2 2
%%PageResources: (atend)
SS
0 0 20 20 806 1100 300 SM
32 0 0 50 50 0 0 0 40 /Courier-Oblique /font11 ANSIFont font
0 0 0 fC
240 240 90 (G -) 90 SB
390 240 540 (Generate a keypair) 540 SB
1290 240 810 (length of key in bits \(508-) 810 SB
390 290 600 (generate RSA public/) 600 SB
1290 290 810 (1024\) name of file in which) 810 SB
390 340 480 (private key pair) 480 SB
1290 340 480 (to save key pair) 480 SB
240 440 90 (L -) 90 SB
390 440 420 (Load a keypair) 420 SB
1290 440 30 (l) 28 SB
1318 440 30 (o) 28 SB
1346 440 30 (a) 28 SB
1374 440 30 (d) 28 SB
1401 440 30 ( ) 26 SB
1427 440 30 (k) 28 SB
1455 440 30 (e) 28 SB
1483 440 30 (y) 28 SB
1511 440 30 (p) 28 SB
1539 440 30 (a) 28 SB
1567 440 30 (i) 28 SB
1595 440 30 (r) 28 SB
1623 440 30 ( ) 26 SB
1649 440 30 (i) 28 SB
1677 440 30 (n) 28 SB
1705 440 30 (t) 28 SB
1733 440 30 (o) 28 SB
1761 440 30 ( ) 26 SB
1787 440 30 (f) 28 SB
1815 440 30 (r) 28 SB
1843 440 30 (e) 28 SB
1871 440 30 (e) 28 SB
1899 440 30 ( ) 26 SB
1925 440 30 (k) 28 SB
1953 440 30 (e) 28 SB
1981 440 30 (y) 28 SB
2009 440 30 (p) 28 SB
2037 440 30 (a) 28 SB
2065 440 30 (i) 28 SB
2093 440 30 (r) 28 SB
1290 490 30 (s) 29 SB
1319 490 30 (l) 29 SB
1348 490 30 (o) 29 SB
1377 490 30 (t) 29 SB
1406 490 30 ( ) 27 SB
1433 490 30 (r) 29 SB
1462 490 30 (e) 29 SB
1491 490 30 (q) 29 SB
1520 490 30 (u) 29 SB
1549 490 30 (i) 29 SB
1578 490 30 (r) 29 SB
1607 490 30 (e) 29 SB
1636 490 30 (s) 29 SB
1665 490 30 ( ) 27 SB
1692 490 30 (n) 29 SB
1721 490 30 (a) 29 SB
1750 490 30 (m) 29 SB
1779 490 30 (e) 29 SB
1808 490 30 ( ) 27 SB
1835 490 30 (o) 29 SB
1864 490 30 (f) 29 SB
1893 490 30 ( ) 27 SB
1920 490 30 (f) 29 SB
1949 490 30 (i) 29 SB
1978 490 30 (l) 29 SB
2007 490 30 (e) 29 SB
2036 490 30 ( ) 27 SB
2063 490 30 (o) 29 SB
2092 490 30 (f) 29 SB
1290 540 210 (keypair) 210 SB
240 590 240 (Q - Quit) 240 SB

%%BeginResource: font MSTT31c4ac
/MSTT31c4ac [50.0 0 0 0 0 0] 60 -80 [-50.0 -50.0 50.0 50.0] [1 50 div 0 0 1 50 div 0 0] /MSTT31c4ac GreNewFont
%%EndResource

32 0 0 50 50 0 0 1 41 /MSTT31c4ac font

%%BeginResource: font MSTT31c4ac
/G28 [15.0 0.0 4.0 -11.0 13.0 33.0]
/G28 {
    9 44 true [1 0 0 -1 -4.0 33.0] {<00800180010002000600040008001800100030002000200040004000400040008000800080008000
80008000800080008000800080008000c00040004000400060002000200010001000180008000400
0600020001000080>} imagemask 
  }
  40 /G28 MSTT31c4ac AddChar
/G2a [18.0 0.0 2.0 21.0 16.0 33.0]
/G2a {
    14 12 true [1 0 0 -1 -2.0 33.0] {<20203030104008c005b81fe4ff00c5000880184030602020>} imagemask 
  }
  42 /G2a MSTT31c4ac AddChar
/G29 [14.0 0.0 2.0 -11.0 11.0 33.0]
/G29 {
    9 44 true [1 0 0 -1 -2.0 33.0] {<8000c000400020001000100008000c00040006000200020001000100010001000180008000800080
008000800080008000800080008000800180010001000100030002000200040004000c0008001000
3000200040008000>} imagemask 
  }
  41 /G29 MSTT31c4ac AddChar
/G20 [12.0 0.0 0.0 0.0 0.0 0.0]
/G20 {
} 
  32 /G20 MSTT31c4ac AddChar
/G49 [10.0 0.0 1.0 -1.0 8.0 33.0]
/G49 {
    7 34 true [1 0 0 -1 -1.0 33.0] {<0c7090101010101010101010101010101010101010101010101010101010101e7840>} imagemask 
  }
  73 /G49 MSTT31c4ac AddChar
/G6e [19.0 0.0 3.0 -1.0 17.0 24.0]
/G6e {
    14 25 true [1 0 0 -1 -3.0 24.0] {<8000807881fc83c487048e049c049804b004e004c004c00480048004800480048004800480048004
80048004800480048004>} imagemask 
  }
  110 /G6e MSTT31c4ac AddChar
/G69 [9.0 0.0 4.0 -1.0 5.0 30.0]
/G69 {
    1 31 true [1 0 0 -1 -4.0 30.0] {<80808000000080808080808080808080808080808080808080808080808080>} imagemask 
  }
  105 /G69 MSTT31c4ac AddChar
/G74 [22.0 0.0 2.0 -1.0 21.0 28.0]
/G74 {
    19 29 true [1 0 0 -1 -2.0 28.0] {<020000020000020000020000020180020e0002f0000700003e0000e2000002000002000002000002
00000200000200000200000200000200000200000200200200400200800203000206000218000270
00038000020000>} imagemask 
  }
  116 /G74 MSTT31c4ac AddChar
/G61 [22.0 0.0 2.0 -1.0 20.0 22.0]
/G61 {
    18 23 true [1 0 0 -1 -2.0 22.0] {<003e0000c3000180800200800400c0080040100040000040000040000040000040003fc001e04006
00401800403000406000404001c0800340800c408030407fc040080040>} imagemask 
  }
  97 /G61 MSTT31c4ac AddChar
/G6c [9.0 0.0 4.0 -1.0 5.0 33.0]
/G6c {
    1 34 true [1 0 0 -1 -4.0 33.0] {<80808080808080808080808080808080808080808080808080808080808080808080>} imagemask 
  }
  108 /G6c MSTT31c4ac AddChar
/G7a [21.0 0.0 2.0 -1.0 18.0 24.0]
/G7a {
    16 25 true [1 0 0 -1 -2.0 24.0] {<00073ffd20020006000400080008001000300020004000c000800100030002000600040008001800
100020006001ffffe000>} imagemask 
  }
  122 /G7a MSTT31c4ac AddChar
/G6f [23.0 0.0 2.0 0.0 21.0 22.0]
/G6f {
    19 22 true [1 0 0 -1 -2.0 22.0] {<007e000181000200c00c004008002010002020002020002040002040002080006080004080004080
00c0800080800100800300c00600400c002018001830000fc000>} imagemask 
  }
  111 /G6f MSTT31c4ac AddChar
/G76 [21.0 0.0 2.0 0.0 19.0 24.0]
/G76 {
    17 24 true [1 0 0 -1 -2.0 24.0] {<800000800080800100c00300400200400400400c0040080040100040300060200020600020400020
80002080002100003100001200001200001400001400001c0000080000080000>} imagemask 
  }
  118 /G76 MSTT31c4ac AddChar
/G65 [23.0 0.0 1.0 0.0 21.0 23.0]
/G65 {
    20 23 true [1 0 0 -1 -1.0 23.0] {<00fc000183000600800c00400800201001e0300f0020f0002f0000780000400000400000400000c0
0000c00030400020400020400040400080200100300600181c0007e000>} imagemask 
  }
  101 /G65 MSTT31c4ac AddChar
/G63 [22.0 0.0 2.0 0.0 19.0 24.0]
/G63 {
    17 24 true [1 0 0 -1 -2.0 24.0] {<00f800018c0002020004010008010010000010000020000020000040000040000040000080000080
00008000008000008000008001808001004002004004002018001070000f8000>} imagemask 
  }
  99 /G63 MSTT31c4ac AddChar
/G72 [18.0 0.0 4.0 -1.0 17.0 24.0]
/G72 {
    13 25 true [1 0 0 -1 -4.0 24.0] {<807080c88188830886088c009800b000e000c0008000800080008000800080008000800080008000
80008000800080008000>} imagemask 
  }
  114 /G72 MSTT31c4ac AddChar
/G66 [19.0 0.0 2.0 -1.0 17.0 33.0]
/G66 {
    15 34 true [1 0 0 -1 -2.0 33.0] {<00f8018c03060202020002000200020002000206027803c002001e00e20002000200020002000200
02000200020002000200020002000200020002000200020002000200>} imagemask 
  }
  102 /G66 MSTT31c4ac AddChar
/G70 [20.0 0.0 2.0 -11.0 18.0 24.0]
/G70 {
    16 35 true [1 0 0 -1 -2.0 24.0] {<00f8838486028c029801b001a001c001c0018001800180038002800280068004800c800880188010
8020c040e1809f0080008000800080008000800080008000800080008000>} imagemask 
  }
  112 /G70 MSTT31c4ac AddChar
/G68 [22.0 0.0 4.0 -1.0 19.0 32.0]
/G68 {
    15 33 true [1 0 0 -1 -4.0 32.0] {<800080008000800080008000800080008078818c82048c029802b002a002c002c002800280028002
8002800280028002800280028002800280028002800280028002>} imagemask 
  }
  104 /G68 MSTT31c4ac AddChar
/G2d [15.0 0.0 1.0 12.0 13.0 14.0]
/G2d {
    12 2 true [1 0 0 -1 -1.0 14.0] {<03f0fe00>} imagemask 
  }
  45 /G2d MSTT31c4ac AddChar
/G62 [21.0 0.0 2.0 -1.0 19.0 32.0]
/G62 {
    17 33 true [1 0 0 -1 -2.0 32.0] {<800000800000800000800000800000800000800000800000800000800000803c0080c30083010084
0100880180900180a00100c00100c00100800100800200800200800400800c008018008030008060
0080c000830000860000980000e00000800000>} imagemask 
  }
  98 /G62 MSTT31c4ac AddChar
/G6b [20.0 0.0 2.0 -1.0 17.0 32.0]
/G6b {
    15 33 true [1 0 0 -1 -2.0 32.0] {<8000800080008000800080008000800080088010806080c08180830086008c009800f000e000c000
f000b8009c008e008300818080c0806080308018800c80068004>} imagemask 
  }
  107 /G6b MSTT31c4ac AddChar
/G67 [22.0 0.0 2.0 -9.0 19.0 22.0]
/G67 {
    17 31 true [1 0 0 -1 -2.0 22.0] {<000f0000388000c080018080020180040180080180100180300280200280200680400480400c8040
0880401880c01080802080806080c0c0804180804300803c00800000800000800000800000801001
8010010008020007bc0000f000>} imagemask 
  }
  103 /G67 MSTT31c4ac AddChar
/G6d [33.0 0.0 2.0 -1.0 30.0 24.0]
/G6d {
    28 25 true [1 0 0 -1 -2.0 24.0] {<80000000803c01e080fe03e081e2071083821e10870238108e0230109c026010b802c010f0038010
e0038010c00300108002001080020010800200108002001080020010800200108002001080020010
8002001080020010800200108002001080020010>} imagemask 
  }
  109 /G6d MSTT31c4ac AddChar
/G64 [24.0 0.0 2.0 -1.0 21.0 32.0]
/G64 {
    19 33 true [1 0 0 -1 -2.0 32.0] {<000020000020000020000020000020000020000020000020000020000020000020000020001f2000
60a00180600300200600200c00201800201000202000602000604000e04000a08001208003208006
20800c2080182080302040c0203f8020000020>} imagemask 
  }
  100 /G64 MSTT31c4ac AddChar
/G2e [8.0 0.0 2.0 0.0 6.0 4.0]
/G2e {
    4 4 true [1 0 0 -1 -2.0 4.0] {<60f0f060>} imagemask 
  }
  46 /G2e MSTT31c4ac AddChar
%%EndResource

241 745 15 (\() 16 SB
257 745 18 (*) 19 SB
276 745 14 (\)) 15 SB
291 745 12 ( ) 13 SB
304 745 10 (I) 11 SB
315 745 19 (n) 20 SB
335 745 9 (i) 10 SB
345 745 22 (t) 23 SB
368 745 9 (i) 10 SB
378 745 22 (a) 23 SB
401 745 9 (l) 10 SB
411 745 9 (i) 10 SB
421 745 21 (z) 22 SB
443 745 22 (a) 23 SB
466 745 22 (t) 23 SB
489 745 9 (i) 10 SB
499 745 23 (o) 24 SB
523 745 19 (n) 20 SB
543 745 12 ( ) 13 SB
556 745 21 (v) 22 SB
578 745 23 (e) 24 SB
602 745 22 (c) 23 SB
625 745 22 (t) 23 SB
648 745 23 (o) 24 SB
672 745 18 (r) 19 SB
691 745 12 ( ) 13 SB
704 745 19 (f) 20 SB
724 745 23 (o) 24 SB
748 745 18 (r) 19 SB
767 745 12 ( ) 13 SB
780 745 22 (c) 23 SB
803 745 9 (i) 10 SB
813 745 20 (p) 21 SB
834 745 22 (h) 23 SB
857 745 23 (e) 24 SB
881 745 18 (r) 19 SB
900 745 15 (-) 16 SB
916 745 21 (b) 22 SB
938 745 9 (l) 10 SB
948 745 23 (o) 24 SB
972 745 22 (c) 23 SB
995 745 20 (k) 21 SB
1016 745 12 ( ) 13 SB
1029 745 22 (c) 23 SB
1052 745 22 (h) 23 SB
1075 745 22 (a) 23 SB
1098 745 9 (i) 10 SB
1108 745 19 (n) 20 SB
1128 745 9 (i) 10 SB
1138 745 19 (n) 20 SB
1158 745 22 (g) 23 SB
1181 745 12 ( ) 13 SB
1194 745 33 (m) 34 SB
1228 745 23 (o) 24 SB
1252 745 24 (d) 25 SB
1277 745 23 (e) 24 SB
1301 745 8 (.) 9 SB
240 745 15 (\() 16 SB
256 745 18 (*) 19 SB
275 745 14 (\)) 15 SB
290 745 12 ( ) 13 SB
303 745 10 (I) 11 SB
314 745 19 (n) 20 SB
334 745 9 (i) 10 SB
344 745 22 (t) 23 SB
367 745 9 (i) 10 SB
377 745 22 (a) 23 SB
400 745 9 (l) 10 SB
410 745 9 (i) 10 SB
420 745 21 (z) 22 SB
442 745 22 (a) 23 SB
465 745 22 (t) 23 SB
488 745 9 (i) 10 SB
498 745 23 (o) 24 SB
522 745 19 (n) 20 SB
542 745 12 ( ) 13 SB
555 745 21 (v) 22 SB
577 745 23 (e) 24 SB
601 745 22 (c) 23 SB
624 745 22 (t) 23 SB
647 745 23 (o) 24 SB
671 745 18 (r) 19 SB
690 745 12 ( ) 13 SB
703 745 19 (f) 20 SB
723 745 23 (o) 24 SB
747 745 18 (r) 19 SB
766 745 12 ( ) 13 SB
779 745 22 (c) 23 SB
802 745 9 (i) 10 SB
812 745 20 (p) 21 SB
833 745 22 (h) 23 SB
856 745 23 (e) 24 SB
880 745 18 (r) 19 SB
899 745 15 (-) 16 SB
915 745 21 (b) 22 SB
937 745 9 (l) 10 SB
947 745 23 (o) 24 SB
971 745 22 (c) 23 SB
994 745 20 (k) 21 SB
1015 745 12 ( ) 13 SB
1028 745 22 (c) 23 SB
1051 745 22 (h) 23 SB
1074 745 22 (a) 23 SB
1097 745 9 (i) 10 SB
1107 745 19 (n) 20 SB
1127 745 9 (i) 10 SB
1137 745 19 (n) 20 SB
1157 745 22 (g) 23 SB
1180 745 12 ( ) 13 SB
1193 745 33 (m) 34 SB
1227 745 23 (o) 24 SB
1251 745 24 (d) 25 SB
1276 745 23 (e) 24 SB
1300 745 8 (.) 9 SB
32 0 0 50 50 0 0 0 40 /Courier /font0 ANSIFont font
240 848 180 (NOTES.) 180 SB
0 0 0 fC
/fm 256 def
179 2 240 891 B
1 F
n
390 948 30 (1) 29 SB
419 948 30 (.) 29 SB
448 948 30 ( ) 29 SB
477 948 30 (Y) 29 SB
506 948 30 (o) 29 SB
535 948 30 (u) 29 SB
564 948 30 ( ) 29 SB
593 948 30 (s) 29 SB
622 948 30 (e) 29 SB
651 948 30 (l) 29 SB
680 948 30 (e) 29 SB
709 948 30 (c) 29 SB
738 948 30 (t) 29 SB
767 948 30 ( ) 29 SB
796 948 30 (k) 29 SB
825 948 30 (e) 29 SB
854 948 30 (y) 29 SB
883 948 30 (s) 29 SB
912 948 30 ( ) 29 SB
941 948 30 (b) 29 SB
970 948 30 (y) 29 SB
999 948 30 ( ) 29 SB
1028 948 30 (n) 29 SB
1057 948 30 (u) 29 SB
1086 948 30 (m) 29 SB
1115 948 30 (b) 29 SB
1144 948 30 (e) 29 SB
1173 948 30 (r) 29 SB
1202 948 30 (:) 29 SB
1231 948 30 ( ) 29 SB
1260 948 30 (') 29 SB
1289 948 30 (1) 29 SB
1318 948 30 (') 29 SB
1347 948 30 ( ) 29 SB
1376 948 30 (o) 29 SB
1405 948 30 (r) 29 SB
1434 948 30 ( ) 29 SB
1463 948 30 (') 29 SB
1492 948 30 (2) 29 SB
1521 948 600 ('. The first keypair) 600 SB
390 998 30 (i) 29 SB
419 998 30 (s) 29 SB
448 998 30 ( ) 29 SB
477 998 30 (b) 29 SB
506 998 30 (u) 29 SB
535 998 30 (i) 29 SB
564 998 30 (l) 29 SB
593 998 30 (t) 29 SB
622 998 30 ( ) 29 SB
651 998 1470 (in. The Second is generated by REDEMO's 'Generate) 1470 SB
390 1048 570 (a keypair' command.) 570 SB
390 1148 1650 (2. How you specify file names to REDEMO depends on your) 1650 SB
390 1198 540 (operating system. ) 540 SB
390 1298 1560 (3. REDEMO reads and writes all files in binary mode.) 1560 SB
390 1398 1560 (4. Message-digest algorithm choices are MD2 and MD5.) 1560 SB
390 1498 30 (5) 29 SB
419 1498 30 (.) 29 SB
448 1498 30 ( ) 29 SB
477 1498 30 (F) 29 SB
506 1498 30 (o) 29 SB
535 1498 30 (r) 29 SB
564 1498 30 ( ) 29 SB
593 1498 30 (d) 29 SB
622 1498 30 (a) 29 SB
651 1498 1470 (ta encryption, the choices are DES, DESX, two-key) 1470 SB
390 1548 30 (t) 29 SB
419 1548 30 (r) 29 SB
448 1548 30 (i) 29 SB
477 1548 30 (p) 29 SB
506 1548 30 (l) 29 SB
535 1548 30 (e) 29 SB
564 1548 30 (-) 29 SB
593 1548 30 (D) 29 SB
622 1548 30 (E) 29 SB
651 1548 30 (S) 29 SB
680 1548 30 ( ) 29 SB
709 1548 30 (\() 29 SB
738 1548 30 (D) 29 SB
767 1548 30 (E) 29 SB
796 1548 30 (S) 29 SB
825 1548 30 (-) 29 SB
854 1548 30 (E) 29 SB
883 1548 30 (D) 29 SB
912 1548 30 (E) 29 SB
941 1548 30 (2) 29 SB
970 1548 30 (\)) 29 SB
999 1548 30 (,) 29 SB
1028 1548 30 ( ) 29 SB
1057 1548 30 (a) 29 SB
1086 1548 30 (n) 29 SB
1115 1548 30 (d) 29 SB
1144 1548 30 ( ) 29 SB
1173 1548 30 (t) 29 SB
1202 1548 30 (h) 29 SB
1231 1548 30 (r) 29 SB
1260 1548 30 (e) 29 SB
1289 1548 30 (e) 29 SB
1318 1548 30 (-) 29 SB
1347 1548 30 (k) 29 SB
1376 1548 30 (e) 29 SB
1405 1548 30 (y) 29 SB
1434 1548 30 ( ) 29 SB
1463 1548 30 (t) 29 SB
1492 1548 30 (r) 29 SB
1521 1548 600 (iple-DES \(DES-EDE3\).) 600 SB
390 1648 1680 (7. REDEMO seeds RSAEURO's random number generator with a) 1680 SB
390 1698 1620 (fixed value. As a result, RDEMO sessions with the same) 1620 SB
240 1748 30 ( ) 30 SB
390 1748 1710 (commands and parameters produce the same results. The use) 1710 SB
390 1798 1500 (of a fixed seed value is not recommended for non -) 1500 SB
390 1848 810 (demonstration applications.) 810 SB
1 #C
EJ RS
%%PageTrailer
%%PageResources: font Courier
%%+ font Courier-Oblique
%%+ font MSTT31c4ac
%%Trailer
SVDoc restore
end
%%Pages: 2
% TrueType font name key:
%    MSTT31c420 = 0aefDTimes New RomanF0000004b000002bc0000
%    MSTT31c43b = 0aefDTimes New RomanF00000032000002bc0000
%    MSTT31c448 = 0aefDTimes New RomanF00000032000001900000
%    MSTT31c455 = 0aefDArialF00000032000001900000
%    MSTT31c460 = 0aefDArialF0000003a000001900000
%    MSTT31c46b = 0aefDArialF0000003a000002bc0000
%    MSTT31c476 = 0aefDArialF00000032000002bc0000
%    MSTT31c4a0 = 0aefDArchitectF00000032000001900000
%    MSTT31c4ac = 0aefDArchitectF00000032000002bc0000
%%DocumentSuppliedResources: procset Win35Dict 3 1
%%+ font MSTT31c420
%%+ font MSTT31c43b
%%+ font MSTT31c46b
%%+ font MSTT31c4ac

%%DocumentNeededResources: font Courier
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique

%%EOF
