%!PS-Adobe-3.0
%%Creator: Windows PSCRIPT
%%Title: D:\PROGRAM\CRYPT\RSAREF2\DOC\SCRIPTS.TXT
%%BoundingBox: 14 14 595 778
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%Pages: (atend)
%%BeginResource: procset Win35Dict 3 1
/Win35Dict 290 dict def Win35Dict begin/bd{bind def}bind def/in{72
mul}bd/ed{exch def}bd/ld{load def}bd/tr/translate ld/gs/gsave ld/gr
/grestore ld/M/moveto ld/L/lineto ld/rmt/rmoveto ld/rlt/rlineto ld
/rct/rcurveto ld/st/stroke ld/n/newpath ld/sm/setmatrix ld/cm/currentmatrix
ld/cp/closepath ld/ARC/arcn ld/TR{65536 div}bd/lj/setlinejoin ld/lc
/setlinecap ld/ml/setmiterlimit ld/sl/setlinewidth ld/scignore false
def/sc{scignore{pop pop pop}{0 index 2 index eq 2 index 4 index eq
and{pop pop 255 div setgray}{3{255 div 3 1 roll}repeat setrgbcolor}ifelse}ifelse}bd
/FC{bR bG bB sc}bd/fC{/bB ed/bG ed/bR ed}bd/HC{hR hG hB sc}bd/hC{
/hB ed/hG ed/hR ed}bd/PC{pR pG pB sc}bd/pC{/pB ed/pG ed/pR ed}bd/sM
matrix def/PenW 1 def/iPen 5 def/mxF matrix def/mxE matrix def/mxUE
matrix def/mxUF matrix def/fBE false def/iDevRes 72 0 matrix defaultmatrix
dtransform dup mul exch dup mul add sqrt def/fPP false def/SS{fPP{
/SV save def}{gs}ifelse}bd/RS{fPP{SV restore}{gr}ifelse}bd/EJ{gsave
showpage grestore}bd/#C{userdict begin/#copies ed end}bd/FEbuf 2 string
def/FEglyph(G  )def/FE{1 exch{dup 16 FEbuf cvrs FEglyph exch 1 exch
putinterval 1 index exch FEglyph cvn put}for}bd/SM{/iRes ed/cyP ed
/cxPg ed/cyM ed/cxM ed 72 100 div dup scale dup 0 ne{90 eq{cyM exch
0 eq{cxM exch tr -90 rotate -1 1 scale}{cxM cxPg add exch tr +90 rotate}ifelse}{cyP
cyM sub exch 0 ne{cxM exch tr -90 rotate}{cxM cxPg add exch tr -90
rotate 1 -1 scale}ifelse}ifelse}{pop cyP cyM sub exch 0 ne{cxM cxPg
add exch tr 180 rotate}{cxM exch tr 1 -1 scale}ifelse}ifelse 100 iRes
div dup scale 0 0 transform .25 add round .25 sub exch .25 add round
.25 sub exch itransform translate}bd/SJ{1 index 0 eq{pop pop/fBE false
def}{1 index/Break ed div/dxBreak ed/fBE true def}ifelse}bd/ANSIVec[
16#0/grave 16#1/acute 16#2/circumflex 16#3/tilde 16#4/macron 16#5/breve
16#6/dotaccent 16#7/dieresis 16#8/ring 16#9/cedilla 16#A/hungarumlaut
16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle 16#60/grave
16#7C/bar 16#82/quotesinglbase 16#83/florin 16#84/quotedblbase 16#85
/ellipsis 16#86/dagger 16#87/daggerdbl 16#88/circumflex 16#89/perthousand
16#8A/Scaron 16#8B/guilsinglleft 16#8C/OE 16#91/quoteleft 16#92/quoteright
16#93/quotedblleft 16#94/quotedblright 16#95/bullet 16#96/endash 16#97
/emdash 16#98/tilde 16#99/trademark 16#9A/scaron 16#9B/guilsinglright
16#9C/oe 16#9F/Ydieresis 16#A0/space 16#A1/exclamdown 16#A4/currency
16#A5/yen 16#A6/brokenbar 16#A7/section 16#A8/dieresis 16#A9/copyright
16#AA/ordfeminine 16#AB/guillemotleft 16#AC/logicalnot 16#AD/hyphen
16#AE/registered 16#AF/macron 16#B0/degree 16#B1/plusminus 16#B2/twosuperior
16#B3/threesuperior 16#B4/acute 16#B5/mu 16#B6/paragraph 16#B7/periodcentered
16#B8/cedilla 16#B9/onesuperior 16#BA/ordmasculine 16#BB/guillemotright
16#BC/onequarter 16#BD/onehalf 16#BE/threequarters 16#BF/questiondown
16#C0/Agrave 16#C1/Aacute 16#C2/Acircumflex 16#C3/Atilde 16#C4/Adieresis
16#C5/Aring 16#C6/AE 16#C7/Ccedilla 16#C8/Egrave 16#C9/Eacute 16#CA
/Ecircumflex 16#CB/Edieresis 16#CC/Igrave 16#CD/Iacute 16#CE/Icircumflex
16#CF/Idieresis 16#D0/Eth 16#D1/Ntilde 16#D2/Ograve 16#D3/Oacute 16#D4
/Ocircumflex 16#D5/Otilde 16#D6/Odieresis 16#D7/multiply 16#D8/Oslash
16#D9/Ugrave 16#DA/Uacute 16#DB/Ucircumflex 16#DC/Udieresis 16#DD/Yacute
16#DE/Thorn 16#DF/germandbls 16#E0/agrave 16#E1/aacute 16#E2/acircumflex
16#E3/atilde 16#E4/adieresis 16#E5/aring 16#E6/ae 16#E7/ccedilla 16#E8
/egrave 16#E9/eacute 16#EA/ecircumflex 16#EB/edieresis 16#EC/igrave
16#ED/iacute 16#EE/icircumflex 16#EF/idieresis 16#F0/eth 16#F1/ntilde
16#F2/ograve 16#F3/oacute 16#F4/ocircumflex 16#F5/otilde 16#F6/odieresis
16#F7/divide 16#F8/oslash 16#F9/ugrave 16#FA/uacute 16#FB/ucircumflex
16#FC/udieresis 16#FD/yacute 16#FE/thorn 16#FF/ydieresis ] def/reencdict
12 dict def/IsChar{basefontdict/CharStrings get exch known}bd/MapCh{dup
IsChar not{pop/bullet}if newfont/Encoding get 3 1 roll put}bd/MapDegree{16#b0
/degree IsChar{/degree}{/ring}ifelse MapCh}bd/MapBB{16#a6/brokenbar
IsChar{/brokenbar}{/bar}ifelse MapCh}bd/ANSIFont{reencdict begin/newfontname
ed/basefontname ed FontDirectory newfontname known not{/basefontdict
basefontname findfont def/newfont basefontdict maxlength dict def basefontdict{exch
dup/FID ne{dup/Encoding eq{exch dup length array copy newfont 3 1 roll
put}{exch newfont 3 1 roll put}ifelse}{pop pop}ifelse}forall newfont
/FontName newfontname put 127 1 159{newfont/Encoding get exch/bullet
put}for ANSIVec aload pop ANSIVec length 2 idiv{MapCh}repeat MapDegree
MapBB newfontname newfont definefont pop}if newfontname end}bd/SB{FC
/ULlen ed/str ed str length fBE not{dup 1 gt{1 sub}if}if/cbStr ed
/dxGdi ed/y0 ed/x0 ed str stringwidth dup 0 ne{/y1 ed/x1 ed y1 y1
mul x1 x1 mul add sqrt dxGdi exch div 1 sub dup x1 mul cbStr div exch
y1 mul cbStr div}{exch abs neg dxGdi add cbStr div exch}ifelse/dyExtra
ed/dxExtra ed x0 y0 M fBE{dxBreak 0 BCh dxExtra dyExtra str awidthshow}{dxExtra
dyExtra str ashow}ifelse fUL{x0 y0 M dxUL dyUL rmt ULlen fBE{Break
add}if 0 mxUE transform gs rlt cyUL sl [] 0 setdash st gr}if fSO{x0
y0 M dxSO dySO rmt ULlen fBE{Break add}if 0 mxUE transform gs rlt cyUL
sl [] 0 setdash st gr}if n/fBE false def}bd/font{/name ed/Ascent ed
0 ne/fT3 ed 0 ne/fSO ed 0 ne/fUL ed/Sy ed/Sx ed 10.0 div/ori ed -10.0
div/esc ed/BCh ed name findfont/xAscent 0 def/yAscent Ascent def/ULesc
esc def ULesc mxUE rotate pop fT3{/esc 0 def xAscent yAscent mxUE transform
/yAscent ed/xAscent ed}if [Sx 0 0 Sy neg xAscent yAscent] esc mxE
rotate mxF concatmatrix makefont setfont [Sx 0 0 Sy neg 0 Ascent] mxUE
mxUF concatmatrix pop fUL{currentfont dup/FontInfo get/UnderlinePosition
known not{pop/Courier findfont}if/FontInfo get/UnderlinePosition get
1000 div 0 exch mxUF transform/dyUL ed/dxUL ed}if fSO{0 .3 mxUF transform
/dySO ed/dxSO ed}if fUL fSO or{currentfont dup/FontInfo get/UnderlineThickness
known not{pop/Courier findfont}if/FontInfo get/UnderlineThickness get
1000 div Sy mul/cyUL ed}if}bd/min{2 copy gt{exch}if pop}bd/max{2 copy
lt{exch}if pop}bd/CP{/ft ed{{ft 0 eq{clip}{eoclip}ifelse}stopped{currentflat
1 add setflat}{exit}ifelse}loop}bd/patfont 10 dict def patfont begin
/FontType 3 def/FontMatrix [1 0 0 -1 0 0] def/FontBBox [0 0 16 16]
def/Encoding StandardEncoding def/BuildChar{pop pop 16 0 0 0 16 16
setcachedevice 16 16 false [1 0 0 1 .25 .25]{pat}imagemask}bd end/p{
/pat 32 string def{}forall 0 1 7{dup 2 mul pat exch 3 index put dup
2 mul 1 add pat exch 3 index put dup 2 mul 16 add pat exch 3 index
put 2 mul 17 add pat exch 2 index put pop}for}bd/pfill{/PatFont patfont
definefont setfont/ch(AAAA)def X0 64 X1{Y1 -16 Y0{1 index exch M ch
show}for pop}for}bd/vert{X0 w X1{dup Y0 M Y1 L st}for}bd/horz{Y0 w
Y1{dup X0 exch M X1 exch L st}for}bd/fdiag{X0 w X1{Y0 M X1 X0 sub dup
rlt st}for Y0 w Y1{X0 exch M Y1 Y0 sub dup rlt st}for}bd/bdiag{X0 w
X1{Y1 M X1 X0 sub dup neg rlt st}for Y0 w Y1{X0 exch M Y1 Y0 sub dup
neg rlt st}for}bd/AU{1 add cvi 15 or}bd/AD{1 sub cvi -16 and}bd/SHR{pathbbox
AU/Y1 ed AU/X1 ed AD/Y0 ed AD/X0 ed}bd/hfill{/w iRes 37.5 div round
def 0.1 sl [] 0 setdash n dup 0 eq{horz}if dup 1 eq{vert}if dup 2 eq{fdiag}if
dup 3 eq{bdiag}if dup 4 eq{horz vert}if 5 eq{fdiag bdiag}if}bd/F{/ft
ed fm 256 and 0 ne{gs FC ft 0 eq{fill}{eofill}ifelse gr}if fm 1536
and 0 ne{SHR gs HC ft CP fm 1024 and 0 ne{/Tmp save def pfill Tmp restore}{fm
15 and hfill}ifelse gr}if}bd/S{PenW sl PC st}bd/m matrix def/GW{iRes
12 div PenW add cvi}bd/DoW{iRes 50 div PenW add cvi}bd/DW{iRes 8 div
PenW add cvi}bd/SP{/PenW ed/iPen ed iPen 0 eq iPen 6 eq or{[] 0 setdash}if
iPen 1 eq{[DW GW] 0 setdash}if iPen 2 eq{[DoW GW] 0 setdash}if iPen
3 eq{[DW GW DoW GW] 0 setdash}if iPen 4 eq{[DW GW DoW GW DoW GW] 0
setdash}if}bd/E{m cm pop tr scale 1 0 moveto 0 0 1 0 360 arc cp m sm}bd
/AG{/sy ed/sx ed sx div 4 1 roll sy div 4 1 roll sx div 4 1 roll sy
div 4 1 roll atan/a2 ed atan/a1 ed sx sy scale a1 a2 ARC}def/A{m cm
pop tr AG m sm}def/P{m cm pop tr 0 0 M AG cp m sm}def/RRect{n 4 copy
M 3 1 roll exch L 4 2 roll L L cp}bd/RRCC{/r ed/y1 ed/x1 ed/y0 ed/x0
ed x0 x1 add 2 div y0 M x1 y0 x1 y1 r arcto 4{pop}repeat x1 y1 x0 y1
r arcto 4{pop}repeat x0 y1 x0 y0 r arcto 4{pop}repeat x0 y0 x1 y0 r
arcto 4{pop}repeat cp}bd/RR{2 copy 0 eq exch 0 eq or{pop pop RRect}{2
copy eq{pop RRCC}{m cm pop/y2 ed/x2 ed/ys y2 x2 div 1 max def/xs x2
y2 div 1 max def/y1 exch ys div def/x1 exch xs div def/y0 exch ys div
def/x0 exch xs div def/r2 x2 y2 min def xs ys scale x0 x1 add 2 div
y0 M x1 y0 x1 y1 r2 arcto 4{pop}repeat x1 y1 x0 y1 r2 arcto 4{pop}repeat
x0 y1 x0 y0 r2 arcto 4{pop}repeat x0 y0 x1 y0 r2 arcto 4{pop}repeat
m sm cp}ifelse}ifelse}bd/PP{{rlt}repeat}bd/OB{gs 0 ne{7 3 roll/y ed
/x ed x y translate ULesc rotate x neg y neg translate x y 7 -3 roll}if
sc B fill gr}bd/B{M/dy ed/dx ed dx 0 rlt 0 dy rlt dx neg 0 rlt cp}bd
/CB{B clip n}bd/ErrHandler{errordict dup maxlength exch length gt
dup{errordict begin}if/errhelpdict 12 dict def errhelpdict begin/stackunderflow(operand stack underflow)def
/undefined(this name is not defined in a dictionary)def/VMerror(you have used up all the printer's memory)def
/typecheck(operator was expecting a different type of operand)def
/ioerror(input/output error occured)def end{end}if errordict begin
/handleerror{$error begin newerror{/newerror false def showpage 72
72 scale/x .25 def/y 9.6 def/Helvetica findfont .2 scalefont setfont
x y moveto(Offending Command = )show/command load{dup type/stringtype
ne{(max err string)cvs}if show}exec/y y .2 sub def x y moveto(Error = )show
errorname{dup type dup( max err string )cvs show( : )show/stringtype
ne{( max err string )cvs}if show}exec errordict begin errhelpdict errorname
known{x 1 add y .2 sub moveto errhelpdict errorname get show}if end
/y y .4 sub def x y moveto(Stack =)show ostack{/y y .2 sub def x 1
add y moveto dup type/stringtype ne{( max err string )cvs}if show}forall
showpage}if end}def end}bd end
%%EndResource
/SVDoc save def
%%EndProlog
%%BeginSetup
Win35Dict begin
ErrHandler
statusdict begin 0 setjobtimeout end
statusdict begin statusdict /jobname (D:\PROGRAM\CRYPT\RSAREF2\DOC\SCRIPTS.TXT) put end
/oldDictCnt countdictstack def {}stopped 
{ countdictstack oldDictCnt lt { Win35Dict begin } 
{1 1 countdictstack oldDictCnt sub {pop end } for } ifelse } if 
/oldDictCnt countdictstack def {letter
}stopped 
{ countdictstack oldDictCnt lt { Win35Dict begin } 
{1 1 countdictstack oldDictCnt sub {pop end } for } ifelse } if 
[{ }
/exec load currenttransfer /exec load] cvx settransfer
%%EndSetup
%%Page: 1 1
%%PageResources: (atend)
SS
0 0 20 20 806 1100 300 SM
userdict /SVDoc known {matrix currentmatrix aload pop grestore gsave}if
/level2 {/languagelevel where {p languagelevel 2 ge}{false} ife} def
/level1 {level2 not} def
%!PS-Adobe
%%BeginProlog
/wpdict 300 dict def
wpdict begin
/d{bind def}bind def/l{load def}d/ec{exec def}d/cp/closepath l/cup/currentpoint l/cs/currentscreen l
/cv/curveto l/drx{dtransform round x round x}d/f/eofill l/g/setgray l/gr/grestore l
/gs/gsave l/ife{ifelse}d/ix/index l/li/lineto l/lc/setlinecap l
/lj/setlinejoin l/m/moveto l/mx/matrix l/mcm{mx currentmatrix}d/sm/setmatrix l
/np/newpath l/p/pop l/re/rotate l/rh/readhexstring l/rl/rlineto l/rm/rmoveto l/rs/restore l
/setfl{dup 1 le{p 1 setflat}{setflat}ife}def/languagelevel where{p languagelevel}{1}ife
2 lt{/sf{bzcnt 70 div setfl}d/fpath{bzcnt 4 div setflat}d}{/sf{}d/fpath{}d}ife
/cf currentflat def/s{fpath flattenpath stroke}d/sc/scale l
/sd/setdash l/ss/setscreen l/sv/save l/tr/translate l
/w/setlinewidth l/x/exch l/xd{x def}d/c{3{255 div 3 1 roll}repeat setrgbcolor}d
/bF false def/bF2 false def/bf 0 def/ds{gs 1 lc s gr}d/gd{255 div g}d
/h{0 rm}d
/lp{px li}d/mp{px m}d/nb 50 string def/osv 0 def/icl/initclip l/pf{gs f gr}def
/pff{gs fill gr}def/pl{{px li}repeat}d/ps{gs s gr}def/plen 0 def/pwid 0 def
/px{transform .25 sub round .25 add x .25 sub round .25 add x itransform}d
/pxd{drx idtransform}d/rlp{pxd rl}d/rmp{pxd rm}d/_g{g}d/_lr{rlp}d/_s{s}d
/_w{w}d/_m{mp}d/_rmxy{rmp}d/bzcnt 0 def/bzct{/bzcnt xd}def
/bzcl{/bzcnt 0 def cf setflat}def/rF false def/sF false def/pth 0 def/ptw 0 def/pths 0 def/ptws 0 def/PColor 0 def
/instpat 0 def/cm 0 def/slan 0 def/hscl 0 def/psz 0 def/xres 0 def/yres 0 def/pstr 0 def/lutb 0 def
/rot 0 def/mir 0 def/HTd 0 def/WDd 0 def/ury 0 def/llx 0 def/lly 0 def/exstr 0 def/HTs 0 def/WDs 0 def
/Hs 0 def/Ws 0 def/imc 0 def/Bdep 0 def/clu 0 def/curx 0 def/cury 0 def/Sx 0 def/Sy 0 def/xpos 0 def
/ypos 0 def/lw 0 def/DUy 0 def/DUx 0 def/Ux 0 def/Uy 0 def/cml 0 def
/cp3{3 copy}d/cp4{4 copy}d/cp6{6 copy}d/aosh{cp3 -4 -4 rm gs ashow gr
cp3 4 0 rm gs ashow gr cp3 4 0 rm gs ashow gr cp3 0 4 rm gs ashow gr
cp3 0 4 rm gs ashow gr cp3 -4 0 rm gs ashow gr cp3 -4 0 rm gs ashow gr
cp3 0 -4 rm gs ashow gr currentrgbcolor 6 3 roll 1 g 4 0 rm ashow setrgbcolor}d
/wosh{cp4 -4 -4 rm gs widthshow gr
cp4 4 0 rm gs widthshow gr cp4 4 0 rm gs widthshow gr cp4 0 4 rm gs widthshow gr
cp4 0 4 rm gs widthshow gr cp4 -4 0 rm gs widthshow gr cp4 -4 0 rm gs widthshow gr
cp4 0 -4 rm gs widthshow gr currentrgbcolor 7 3 roll 1 g 4 0 rm widthshow setrgbcolor}d
/awosh{cp6 -4 -4 rm gs awidthshow gr
cp6 4 0 rm gs awidthshow gr cp6 4 0 rm gs awidthshow gr cp6 0 4 rm gs awidthshow gr
cp6 0 4 rm gs awidthshow gr cp6 -4 0 rm gs awidthshow gr cp6 -4 0 rm gs awidthshow gr
cp6 0 -4 rm gs awidthshow gr currentrgbcolor 9 3 roll 1 g 4 0 rm awidthshow setrgbcolor}d
/assh{sv gs psz 20 div dup neg rm 4 1 roll cp3 ashow 4 -1 roll gr cp3 sv x currentfont/PaintType known
{bf setfont}if 1 g ashow rs currentfont/PaintType known{currentfont mo setfont ashow}{aosh}ife cup 3 -1 roll rs m}d
/wssh{sv gs psz 20 div dup neg rm 5 1 roll cp4 widthshow gr cp4 sv currentfont/PaintType known{bf setfont}if
1 g 5 1 roll widthshow rs currentfont/PaintType known{currentfont mo setfont widthshow}{wosh}ife cup 3 -1 roll rs m}d
/awssh{sv gs psz 20 div dup neg rm 7 1 roll cp6 awidthshow gr cp6 sv x currentfont/PaintType known{bf setfont}if
1 g 7 1 roll awidthshow rs currentfont/PaintType known{currentfont mo setfont awidthshow}{awosh}ife cup 3 -1 roll rs m}d
/B{/bF true def sF not{/S/bsh l/bF2 true def}if}d
/b{/bF false def bF2{/S/show l/bF2 false def}if}d
/bd{sv}d/bp{sv .06 .06 sc 0 0 m}d/bsh{gs psz 30 div 0 rm dup show gr show}d
/clr{rF{6 3 roll p p p}{eq3{p p gd}{c}ife}ife}d/co{/pwid xd/plen xd
osv 1 eq{0 pwid tr -90 re}if osv 2 eq{pwid plen tr 180 re}if
osv 3 eq{plen 0 tr 90 re}if dup 1 eq{pwid 0 tr 90 re}if
dup 2 eq{pwid plen tr 180 re}if dup 3 eq{0 plen tr -90 re}if/osv xd}d
/cw{s initclip m 0 2 ix rl 0 rl 0 x neg rl clip np}d
/DU{cup/DUy xd/DUx xd}d/du{gs sv 12 w cup -24 add m DUx DUy -24 add li s rs
12 w cup -48 add m DUx DUy -48 add li s gr}d/ed{rs}d/ep{rs showpage 0 0 m}d
/eq3{3 copy 2 ix eq{eq{true}{false}ife}{p p false}ife}d
/ff{x rc x 3 div dup/psz xd scalefont dup/bf xd setfont}d
/ffs{/slan x 10 div def/hscl x 1000 div def/psz x 3 div def
[psz hscl mul 0 slan dup sin x cos div psz mul psz 0 0]
x rc x makefont dup/bf xd setfont}d/fr{72 0 rmtx defaultmatrix dtransform
/yres xd/xres xd xres dup mul yres dup mul add sqrt}d
/is{sv 4 1 roll dup/pstr x 7 add 8 idiv string def
3 1 roll tr dup 1 sc dup 1 1[5 -1 roll 0 0 1 0 0]{currentfile pstr rh p}
cml 0 eq{image}{false 3 colorimage}ife rs}d/cexp{exstr 0 lutb 3 copy 7 -1 roll
{get putinterval x 3 add x 3 copy}forall p p p p p}d/bwexp{dup 0 lutb 3 copy 7 -1 roll
{get put x 1 add x 3 copy}forall p p p p p}d/NOM 0 def/INX 1 def/INY 2 def
/p1x 0 def/p1y 0 def/p2x 0 def/p2y 0 def/p3x 0 def/p3y 0 def
/idef{/p3y xd/p3x xd/p2y xd/p2x xd/p1y xd/p1x xd
/rot xd/mir xd p3x p1x sub 1 add dup mul p1y p3y sub 1 add
dup mul add sqrt/HTd xd p2y p1y sub 1 add dup mul p2x p1x
sub 1 add dup mul add sqrt/WDd xd}def
/mirror{mir NOM eq{Ws Hs sc}{mir INX eq{Ws neg Hs sc}
{mir INY eq{Ws Hs neg sc}{Ws neg Hs neg sc}ife}ife}ife}def
/ic{sv 6 1 roll tr 2 ix 2 ix sc[3 ix 0 0 5 ix neg 0 7 ix]
2 1 roll true 3 1 roll imagemask rs}d/ieps{/ury xd/urx xd/lly xd/llx xd idef
ury lly sub/HTs xd urx llx sub/WDs xd
WDd WDs div/Ws xd HTd HTs div/Hs xd
p3x p3y tr rot re mirror llx neg lly neg tr}def
/im{sv 15 1 roll dup/pstr x string def/exstr x 3 mul string def
/HTs xd/WDs xd/imc xd/Bdep xd/clu xd
idef p1x p1y m cup transform/cury xd/curx xd rot re
/Ws WDd def/Hs HTd def mirror curx cury itransform tr WDs HTs Bdep
[WDs 0 0 HTs neg 0 0]{currentfile pstr rh p
clu 1 eq{cexp}if clu 2 eq{bwexp}if}
imc 0 eq{image}{false 3 colorimage}ife rs}d
/kp{initclip clip np}d/l1{cup osv plen pwid 6 -1 roll rs sv}d
/l2{bp 7 2 roll co m}d/osh{dup -4 -4 rm gs show gr
dup 4 0 rm gs show gr dup 4 0 rm gs show gr dup 0 4 rm gs show gr
dup 0 4 rm gs show gr dup -4 0 rm gs show gr dup -4 0 rm gs show gr
dup 0 -4 rm gs show gr currentrgbcolor 4 3 roll 1 g 4 0 rm show setrgbcolor}d
/mo{dup/OutlineFlag known not{dup dup length 2 add dict begin
{1 ix/FID ne{def}{p p}ife}forall/UniqueID known{/UniqueID UniqueID 10000 add def}if
/PaintType PaintType 0 eq{2}{PaintType}ife def/StrokeWidth 15 def/OutlineFlag true def
/OutlineFont currentdict end definefont}if}d/O{currentfont/PaintType known{currentfont mo setfont}{/S/osh l}ife}d
/o{currentfont/PaintType known{bf setfont}{/S/show l}ife}d/R{/rF true def currentrgbcolor 1 .25 .25 setrgbcolor}d
/r{/rF false def eq3{1 sub neg gd p p}{setrgbcolor}ife}d/rc{dup FontDirectory x known{findfont}
{dup nb cvs dup length 1 sub get 82 eq{dup nb cvs dup length 1 sub 0 x getinterval
findfont begin currentdict dup length dict begin
{1 ix/FID ne{def}{p p}ife}forall/FontName xd/Encoding WPen def
currentdict dup end end/FontName get x definefont}
{findfont}ife}ife}d/rmtx mx def/S/show l/A/ashow l/W/widthshow l/AW/awidthshow l/sg{neg 100 add 100 div g}d/SH{bF2{/bF2 false def}if/S/ssh l/A/assh l/W/wssh l/AW/awssh l/sF true def}d
/sh{/S/show l/A/ashow l/W/widthshow l/AW/awidthshow l/sF false def bF{B}if}d/sp{gs s gr}d/ssh{sv x gs psz 20 div dup neg rm dup show gr dup sv x
currentfont/PaintType known{bf setfont}if 1 g show rs currentfont/PaintType known{currentfont mo setfont show}{osh}ife
cup 3 -1 roll rs m}d/ST{cup/Sy xd/Sx xd}d
/st{gs cup psz 4 div add mp Sx Sy psz 4 div add lp 10 w s gr}d
/U{cup/Uy xd/Ux xd}d/u{gs cup -24 add m Ux Uy -24 add li 12 w s gr}d
/ul{cup osv plen pwid 7 -2 roll rs rs bp 6 1 roll co m}d/WPen StandardEncoding 256 array copy def 0
[127/Aacute/Acircumflex/Adieresis/Agrave/Aring/Atilde/Ccedilla
/Delta/Eacute/Ecircumflex/Edieresis/Egrave/Eth/Gamma/Iacute/Icircumflex/Idieresis/Igrave/Lambda/Ntilde/Oacute
/Ocircumflex/Odieresis/Ograve/Omega/Otilde/Phi/Pi/Psi/Scaron/Sigma/TeXtext32/Theta/Thorn
176/Pts
181/dbar
190/Hbar
192/hbar
201/Ldot
204/ldot
209/Uacute/Ucircumflex/Udieresis/Ugrave/Upsilon/Xi/Yacute
/Ydieresis/Zcaron/aacute/acircumflex/adieresis/agrave/aring/atilde/brokenbar
226/approxequal
228/ccedilla/copyright/degree/divide
236/dotlessj/eacute/ecircumflex/edieresis/egrave
242/eth/ff/ffi
246/ffl/iacute
252/icircumflex/idieresis/igrave/logicalnot
1/minus/mu/multiply/ntilde/oacute/ocircumflex/odieresis/ograve/onehalf/onequarter/onesuperior/otilde/plusminus
/registered/scaron/thorn/threequarters/threesuperior/trademark/twosuperior/uacute/ucircumflex/udieresis
/ugrave/yacute/ydieresis/zcaron/IJ/ij/Eng/eng
]{dup type/nametype eq{WPen 2 ix 2 ix put p 1 add}{x
p}ife}forall p/URy 0 def/URx	0 def/LLy 0 def/LLx	0 def/dxcg 0 def/dx1 0 def/dx2 0 def/dx3 0 def
/cgray	0 def/curstep -1 def/dis 0 def/steps 0 def/gsteps 0 def/grot 0 def/gtype 0 def/ry 0 def
/rx 0 def/botg	0 def/topg 0 def/bgc 0 def/tgc	0 def/cgc 0 def
/extents{fpath flattenpath pathbbox/URy xd/URx xd/LLy xd/LLx xd}def
/dxcolor{cml 0 eq{cgray dxcg sub dup/cgray xd curstep -1 eq{g}
{/curstep curstep 1 sub def curstep 1 eq{p botg gd}{g}ife}ife}
{cgc aload p dx3 sub 3 1 roll dx2 sub 3 1 roll
dx1 sub 3 1 roll 3 array astore/cgc xd
cgc aload p setrgbcolor}ife}d/box{LLx LLy m URx LLy li URx URy li LLx URy li cp s}def
/calcdx{sub gsteps 1 sub div 255 div}def
/computegdx{topg botg calcdx/dxcg xd}def/computeRGBdx{mark tgc aload p bgc aload p
3 ix 1 ix calcdx/dx3 xd 4 ix 2 ix calcdx/dx2 xd
5 ix 3 ix calcdx/dx1 xd cleartomark}def
/ccdx{cml 0 eq{computegdx}{computeRGBdx}ife}def/stclr{cml 0 eq{topg gd/cgray currentgray def}
{tgc aload p c currentrgbcolor 3 array astore/cgc xd}ife}def/lgf{/steps gsteps def
ry 1 ne{stclr/gf{add}def/top URy LLy sub ry mul LLy add def
/lw URy top sub steps .5 sub div def lgfdo}if
stclr/gf{sub}def
ry 1 ne{/lw top LLy sub steps .5 sub div def}if lgfdo}def
/lgfdo{ry 1 ne{/center top def lw 2 div w
LLx center lw 4 div gf m URx center lw 4 div gf li s
/center center lw gf def LLx center m dxcolor}
{/lw URy LLy sub steps div def/top URy lw 2 div sub def
/center top def LLx top m/steps steps 1 add def}ife
lw w steps 1 sub dup/curstep xd{URx center li s center lw gf/center xd
LLx center m dxcolor}repeat/curstep -1 def}def/sgf{/steps gsteps .5 sub def
/midx URx LLx sub 1 rx sub mul def/midy URy LLy sub ry mul def
/width URx LLx sub def/dx width midx sub steps div def
/height URy LLy sub def/dy height midy sub steps div def
/dw width steps div def/dl height steps div def
width w stclr/xpos LLx def/ypos URy def/lw width def/lh height def
gsteps{xpos lw 2 div add ypos m xpos lw 2 div add ypos
lh sub li s/lw lw dw sub def/lh lh dl sub def/xpos xpos dx add def/ypos ypos dy sub def
lw w dxcolor}repeat/curstep -1 def}def
/dfc{dup mul x dup mul add sqrt dup dis gt{/dis xd}{p}ife}def
/fdis{URx LLx sub rx mul LLx add/midx xd
URy LLy sub ry mul LLy add/midy xd
/width URx LLx sub def/gcx width rx mul def/height URy LLy sub def/gcy height ry mul def
gcx gcy dfc width gcx sub gcy dfc
width gcx sub height gcy sub dfc gcx height gcy sub dfc}def/rgf{/steps gsteps def
fdis/lw dis steps .5 sub div def/radius lw def lw 2 div w stclr
midx lw 2 div sub midy m midx midy radius 2 div 0 361 arc s lw w
steps 1 sub
dup/curstep xd/curstep curstep 1 add def
{dxcolor midx midy radius 0 361 arc s/radius radius lw add def}repeat/curstep -1 def}def
/gf{fpath flattenpath/gsteps xd/grot xd/gtype xd/ry x 100 div def/rx x 100 div def
cml 0 eq{gtype 1 eq{x}if/botg xd/topg xd}{gtype 1 eq{6 3 roll}if
3 array astore/bgc xd
3 array astore/tgc xd}ife
sv[]0 sd eoclip gsteps 1 eq
{stclr f}{mcm 3 get 0 gt{/grot grot 180 add def}if grot re extents
gsteps 0 eq{csteps}if
ccdx gtype 0 eq
{lgf}{gtype 1 eq{sgf}{rgf}ife}ife}ife rs}d/csteps{fdis dis 72 div fr mul	cs p p dup xres
eq{p p/gsteps xres def}{div/gsteps x round cvi dup 1 le{p 2}if def}ife}def
/ssf{dup 0 eq{p}{cs 3 ix 3 1 roll ss p p}ife}d/ssa{cs 4 1 roll p 1 ix 4 -1 roll ss p}d
/invalidcolortable? true def
level2 {
/PATmp{x dup length 2 add dict copy begin currentdict/Multi known not{/Multi 1 def}if
Multi 1 ne{/UserProc/PaintProc load def
/PaintProc{begin 0 1 Multi 1 sub{PaintColors 1 index get PATsc
PaintData x get gs currentdict UserProc gr}for end}d
}if currentdict end x makepattern
}d/PATDict 3 dict def/PATsc{mark x aload p
counttomark 1 eq{gd}if counttomark 3 eq{c}if
cleartomark}d/PATsp{PATDict begin/CColor[currentcolor]def
/CCSpace currentcolorspace def end
dup/PaintType get 2 eq{x dup length
dup 1 eq{[/Pattern/DeviceGray]setcolorspace}if
dup 3 eq{[/Pattern/DeviceRGB]setcolorspace}if
4 eq{[/Pattern/DeviceCMYK]setcolorspace}if
aload length 1 add -1 roll}if setpattern}d/PATusp{PATDict begin
CCSpace setcolorspace CColor aload p setcolor
end p}d
/pdictt 20 dict def
pdictt begin/dummy null def/PaintType 1 def/PatternType 1 def/TilingType 2 def/BBox[0 0 1 1]def
/XStep 1 def/YStep 1 def/Multi 2 def/PaintData[{0 0 m 0 1 rl 1 0 rl 0 -1 rl cp
PaintColors 0 get aload p null ne{f}if p p}
{ptw pth true[ptw 0 0 pth neg 0 ptw]{Bitmap}imagemask}]def
/PaintProc{begin exec end}d end/makedict{pdictt 20 dict copy dup begin
x/Bitmap xd x/PaintColors xd gs initmatrix 1 1 drx idtransform sc
[ptws 0 0 pths 0 0]PATmp gr end}d
/setpat{/pth xd/ptw xd/pths xd/ptws xd makedict/instpat xd instpat PATsp}d/unsetpat{instpat PATusp}d
/myappcolorspace/DeviceRGB def/rgbclut 0 def
/doclutimage{/rgbclut xd p bpc dup 8 eq{p 255}{4 eq{15}{3}ife}
ife/hival xd[/Indexed myappcolorspace hival rgbclut]setcolorspace
myimagedict dup begin/Width iw def/Height ih def/Decode[0 hival]def/ImageMatrix[1 0 0 -1 0 ih]def
/DataSource setupimageproc def/BitsPerComponent bpc def
/Interpolate smoothflag def end image}d/do24image{myappcolorspace setcolorspace
myimagedict dup begin/Width iw def/Height ih def/Decode[0 1 0 1 0 1]def/ImageMatrix[1 0 0 -1 0 ih]def
/DataSource setupimageproc def/BitsPerComponent 8 def/Interpolate smoothflag def
end image}d/setup1asciiproc{[currentfile mystring/rh cvx/p cvx]cvx bind}d
/setup1binaryproc{[currentfile mystring/readstring cvx/p cvx]cvx bind}d
/setup2asciiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}d
/setup2binaryproc{currentfile/ASCIIHexDecode filter/RunLengthDecode filter}d
/myimagedict 16 dict dup begin/ImageType 1 def/MultipleDataSource false def end def
/im_save 0 def/setupimageproc 0 def/polarity 0 def/smoothflag 0 def/mystring 0 def
/bpc 0 def/ih 0 def/iw 0 def/beginimage{/im_save sv def
dup 2 eq{p/setup2binaryproc}{dup 3 eq{p/setup2asciiproc}
{0 eq{/setup1binaryproc}{/setup1asciiproc}ife}ife}ife
/setupimageproc x l{[1 0]}{[0 1]}ife/polarity xd/smoothflag xd tr
sc/mystring x string def/bpc xd/ih xd/iw xd}d/endimage{im_save rs np}d/1bitbwcopyimage{1 g
0 0 m 0 1 rl 1 0 rl 0 -1 rl cp fill
0 g myimagedict dup begin/Width iw def/Height ih def/Decode polarity def
/ImageMatrix[1 0 0 -1 0 ih]def/DataSource setupimageproc def
/BitsPerComponent 1 def/Interpolate smoothflag def
end
imagemask}d/1bitcopyimage{ssc 0 0 m 0 1 rl 1 0 rl 0 -1 rl cp fill
ssc myimagedict dup begin/Width iw def/Height ih def
/Decode polarity def/ImageMatrix[1 0 0 -1 0 ih]def
/DataSource setupimageproc def/BitsPerComponent 1 def/Interpolate smoothflag def
end imagemask}d/1bitmaskimage{ssc
myimagedict dup begin/Width iw def/Height ih def/Decode polarity def
/ImageMatrix[1 0 0 -1 0 ih]def/DataSource setupimageproc def
/BitsPerComponent 1 def/Interpolate smoothflag def
end imagemask}d
} if
level1 {
/PATsc{aload length dup 1 eq{p dup null eq{p}{gd}ife}{p c}ife}d
/PATtcalc{gs x concat mcm x 2 ne{dup 4 get x dup 5 get x
XStep 0 drx XStep div x XStep div x 0 YStep drx YStep div x YStep div x
7 -3 roll astore}if gr}d
/PATmp{x dup length 7 add dict copy begin TilingType PATtcalc
/cm xd currentdict/Multi known not{/Multi 1 def}if/FontType 3 def/Encoding 256 array def
3 string 0 1 255{Encoding x dup 3 ix cvs cvn put}for p
/FontMatrix mx def/FontBBox BBox def/BuildChar{mark 3 1 roll x begin
Multi 1 ne{PaintData x get}{p}ife PaintType 2 eq Multi 1 ne or
{XStep 0 FontBBox aload p setcachedevice}{XStep 0 setcharwidth}ife currentdict/PaintProc load
end gs false PATredef exec true PATredef gr
cleartomark}d currentdict end/foo x definefont}d
/PATpcalc{PATDict/CurrentPattern get begin gs
cm sm BBox aload p p p tr pathbbox
gr YStep div ceiling 4 1 roll XStep div ceiling 4 1 roll
YStep div floor 4 1 roll XStep div floor 4 1 roll
2 ix sub cvi abs x 3 ix sub cvi abs x
4 2 roll YStep mul x XStep mul x end}d/PATfill{sv 5 1 roll PATDict/CurrentPattern get dup begin
setfont cm sm PaintType 2 eq{PATDict/PColor get PATsc}if
3 ix string 0 1 Multi 1 sub{3 ix 3 ix m
Multi 1 ne{dup PaintColors x get PATsc}if
0 1 7 ix 1 sub{2 ix x 2 ix put}for p
3 ix{cup 2 ix show YStep add m}repeat}for
5{p}repeat end rs}d/oldeofill/eofill l
/oldfill/fill l/oldstroke/stroke l/oldshow/show l/oldwidthshow/widthshow l/PATredef{userdict begin
{/eofill{/eoclip load PATdraw np}d/fill{/clip load PATdraw np}d
/stroke{PATstroke}d/show{0 0 null 0 0 6 -1 roll PATawidthshow}d
/widthshow{0 0 3 -1 roll PATawidthshow}d}{/eofill{oldeofill}d
/fill{oldfill}d/stroke{oldstroke}d/show{oldshow}d/widthshow{oldwidthshow}d}ife end}d
false PATredef
/PATdraw{PATpcalc gs 5 -1 roll exec np PATfill gr}d
/PATstroke{{cup strokepath m PATpcalc gs clip np PATfill gr np}stopped
{0.1 g oldstroke (Path is too complex, filling with light gray)=}if}d
/PATsstr 1 string def/PATawidthshow{{dup PATsstr dup 0 4 -1 roll put
false charpath/clip load PATdraw cup np m
3 ix eq{4 ix 4 ix rm}if 2 copy rm}forall
p p p p p cup np m}d/PATDict 3 dict def/PATsp{true PATredef PATDict begin/CurrentPattern xd
CurrentPattern/PaintType get 2 eq{/PColor xd}if/CColor[currentrgbcolor]def end}d
/PATusp{false PATredef PATDict begin CColor aload p c end p}d
/pdictt 20 dict def
pdictt begin/dummy null def/PaintType 1 def/PatternType 1 def/TilingType 2 def/BBox[0 0 1 1]def
/XStep 1 def/YStep 1 def/Multi 2 def/PaintData[{0 0 m 0 1 rl 1 0 rl 0 -1 rl cp
PaintColors 0 get aload p null ne{f}if p p}
{ptw pth true[ptw 0 0 pth neg 0 ptw]{Bitmap}imagemask}]def
/PaintProc{begin exec end}d end/makedict{pdictt 20 dict copy dup begin
x/Bitmap xd x/PaintColors xd gs initmatrix 1 1 drx idtransform sc
[ptws 0 0 pths 0 0]PATmp gr end}d
/setpat{/pth xd/ptw xd/pths xd/ptws xd makedict/instpat xd instpat PATsp}d/unsetpat{instpat PATusp}d
/snl{{/noload sv def}if}d/enl{{noload rs}if}d/nc 1 def
/colorimage where{p true}{false}ife{/nc 0
statusdict begin/processcolors where{p p processcolors}
{/deviceinfo where{p deviceinfo/Colors known
{p{deviceinfo/Colors get}}if}if}ife end def
nc 0 ne{systemdict/colorimage known
systemdict/setcolortransfer known
systemdict/currentcolortransfer known
systemdict/currentcmykcolor known
and and and not{/nc 0 def}if}if}if
nc dup 1 ne x dup 3 ne x 4 ne and and{/nc 0 def}if
nc 1 eq dup dup not snl{
/expandbw{expandfactor mul round cvi bwclut x get 255 div}d
/doclutimage{p/bwclut xd bpc dup 8 eq{p 255}{4 eq{15}{3}ife}ife
/expandfactor xd[/expandbw load/exec load dup currenttransfer x]
cvx bind settransfer
iw ih bpc[1 0 0 -1 0 ih]setupimageproc
image}d}if
not enl
nc dup 3 eq x 4 eq or
dup dup not snl{/nullproc{{}}def
/concatutil{/exec load 7 -1 roll/exec load}d/defsubclut{1 add getinterval def}d
/spconcattransfer{/Dclut x def/Cclut x def/Bclut x def/Aclut x def/ncompute x l
currentcolortransfer[{Aclut ncompute}concatutil]cvx[{Bclut ncompute}concatutil]cvx
[{Cclut ncompute}concatutil]cvx[{Dclut ncompute}concatutil]cvx
setcolortransfer}d/setuprgbcluts{/bit3x rgbclut length 3 sub def
/bit1x bit3x 3 idiv def/rclut rgbclut def/gclut rclut 1 bit3x defsubclut
/bclut rclut 2 bit3x defsubclut}d}if not enl
nc 3 eq dup dup not snl{/3compute{x bit3x mul round cvi get 255 div}d
/doclutimage{/rgbclut xd p setuprgbcluts/3compute rclut gclut bclut dup
spconcattransfer iw ih bpc[1 0 0 -1 0 ih][setupimageproc/exec load/dup load dup]cvx
nullproc nullproc true 3 colorimage}d}if not enl
nc 4 eq
dup dup not snl{/stuffclut{cmykindex 3 -1 roll put}d
/ftoint{1 x sub 255 mul round cvi}d/4compute{x bit4x mul round cvi get 255 div}d
/computecmykclut{setuprgbcluts/bit4x rgbclut length 3 idiv 4 mul 4 sub def
/cmykclut bit4x 4 add string def/cclut cmykclut def
/mclut cclut 1 bit4x defsubclut/yclut cclut 2 bit4x defsubclut
/kclut cclut 3 bit4x defsubclut/cmykindex 0 def
0 1 bit1x{dup/cmykindex x
bit1x x sub 4 mul def 3 mul dup rclut x get 255 div
x dup gclut x get 255 div x bclut x get 255 div
setrgbcolor currentcmykcolor ftoint kclut stuffclut
ftoint yclut stuffclut ftoint mclut stuffclut
ftoint cclut stuffclut}for}d/doclutimage{/rgbclut xd p invalidcolortable?
{computecmykclut}if/4compute cclut mclut yclut kclut spconcattransfer
iw ih bpc[1 0 0 -1 0 ih][setupimageproc/exec load/dup load dup dup]cvx
nullproc nullproc nullproc true 4 colorimage}d}if not enl
nc 0 eq dup dup not
snl{/las{3 mul 3 getinterval putinterval x
3 add x 3 copy}d/8lookup/las l/4lookup{/byte 1 ix def -4 bitshift
las byte 15 and las}d
/2lookup{/byte 1 ix def -6 bitshift las
byte -4 bitshift 3 and las byte -2 bitshift
3 and las byte 3 and las}d/colorexpand{mystringexp 0 rgbclut
3 copy 7 -1 roll/mylookup load forall p p p p p}d
/createexpandstr{/mystringexp x mystring length mul string def}d
/doclutimage{/rgbclut xd p/mylookup bpc 8 eq
{3 createexpandstr/8lookup}{bpc 4 eq{6 createexpandstr/4lookup}{12 createexpandstr
/2lookup}ife}ife l iw ih bpc[1 0 0 -1 0 ih]
[setupimageproc/exec load/colorexpand load/exec load]cvx
false 3 colorimage}d}if not enl
/colorimage where{p true}{false}ife dup{/do24image{iw ih 8[1 0 0 -1 0 ih]
setupimageproc false 3 colorimage}d}if
dup dup snl not{/rgbtogray{/str xd/len str length def/smlen len 3 idiv def
/rstr str def/gstr str 1 len 1 sub getinterval def/bstr str 2 len 2 sub getinterval def
str dup 0 1 smlen 1 sub{dup 3 mul rstr 1 ix get .3 mul
gstr 2 ix get .59 mul add bstr 3 -1 roll get .11 mul add
round cvi put dup}for p 0 smlen getinterval}d/do24image{iw ih 8[1 0 0 -1 0 ih]
[setupimageproc/exec load/rgbtogray load/exec load]cvx bind
image}d}if enl/doimage{iw ih 8[1 0 0 -1 0 ih]setupimageproc image}d
/setup1asciiproc{[currentfile mystring/rh cvx/p cvx]cvx bind}d
/setup1binaryproc{[currentfile mystring/readstring cvx/p cvx]cvx bind}d
/iw 0 def/ih 0 def/im_save 0 def/setupimageproc 0 def/polarity 0 def
/smoothflag 0 def/mystring 0 def/bpc 0 def/beginimage{/im_save sv def dup 0 eq
{p/setup1binaryproc}{1 eq{/setup1asciiproc}
{(error, can't use level2 data acquisition procs for level1)print flush}ife}ife
/setupimageproc x l/polarity xd/smoothflag xd tr sc/mystring x string def/bpc xd/ih xd/iw xd}d
/endimage{im_save rs np}d/1bitbwcopyimage{1 g 0 0 m 0 1 rl 1 0 rl 0 -1 rl cp fill
0 g iw ih polarity[1 0 0 -1 0 ih]setupimageproc imagemask}d/1bitcopyimage{setrgbcolor
0 0 m 0 1 rl 1 0 rl 0 -1 rl cp fill
setrgbcolor iw ih polarity[1 0 0 -1 0 ih]setupimageproc
imagemask}d/1bitmaskimage{setrgbcolor
iw ih polarity[1 0 0 -1 0 ih]setupimageproc
imagemask}d
} if
/BeginEPSF{end
userdict begin/showpage{}def
/b4 sv def/d_cnt countdictstack def/op_cnt count 1 sub def
0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
10 setmiterlimit[]0 setdash newpath/languagelevel where{p languagelevel 1 ne
{false setstrokeadjust false setoverprint}if}if}d
end
userdict begin/EndEPSF{count op_cnt sub{pop}repeat
countdictstack d_cnt sub{end}repeat b4 end restore wpdict begin}bind def end
%%EndProlog
  /wb {wpdict begin} def
wb
/cml 1 def
/we {icl end} d
we
userdict /SVDoc known {/SVDoc save def matrix astore setmatrix}if
/winmtx matrix currentmatrix def

%%BeginResource: font MSTT31c3ec
/GreNewFont{10 dict dup 3 1 roll def dup begin 6 1 roll/FontType 3
def/FontMatrix exch def/FontBBox exch def/FontInfo 2 dict def FontInfo
/UnderlinePosition 3 -1 roll put FontInfo/UnderlineThickness 3 -1
roll put/Encoding 256 array def 0 1 255{Encoding exch/.notdef put}for
/CharProcs 256 dict def CharProcs/.notdef{}put/Metrics 256 dict def
Metrics/.notdef 3 -1 roll put/BuildChar{/char exch def/fontdict exch
def/charname fontdict/Encoding get char get def fontdict/Metrics get
charname get aload pop setcachedevice fontdict begin Encoding char
get CharProcs exch get end exec}def end definefont pop}def/AddChar{begin
Encoding 3 1 roll put CharProcs 3 1 roll put Metrics 3 1 roll put end}def
/MSTT31c3ec [75.0 0 0 0 0 0] 53 -104 [-75.0 -75.0 75.0 75.0] [1 75 div 0 0 1 75 div 0 0] /MSTT31c3ec GreNewFont
%%EndResource

32 0 0 75 75 0 0 1 67 /MSTT31c3ec font

%%BeginResource: font MSTT31c3ec
/G52 [50.0 0.0 1.0 0.0 51.0 50.0]
/G52 {
    50 50 true [1 0 0 -1 -1.0 50.0] {<ffffffe00000000ffffffe00000003ff80ff80000003fe003fc0000001fc001ff0000001fc000ff0
000001fc0007f8000001fc0003fc000001fc0003fc000001fc0003fe000001fc0001fe000001fc00
01fe000001fc0001fe000001fc0001fe000001fc0001fe000001fc0001fe000001fc0001fc000001
fc0003fc000001fc0003fc000001fc0007f8000001fc000ff0000001fc001fe0000001fc003fc000
0001fc00ff00000001fc07fc00000001ffffe000000001fffff000000001fc0ff000000001fc07f8
00000001fc03fc00000001fc03fe00000001fc01fe00000001fc00ff00000001fc00ff80000001fc
007fc0000001fc003fc0000001fc001fe0000001fc001ff0000001fc000ff0000001fc0007f80000
01fc0003fc000001fc0003fe000001fc0001fe000001fc0000ff000001fc00007f800001fc00007f
c00003fe00003fe00003fe00001ff8000fff80000ffe00fffff8000fffc0>} imagemask 
  }
  82 /G52 MSTT31c3ec AddChar
/G44 [54.0 0.0 1.0 0.0 51.0 50.0]
/G44 {
    50 50 true [1 0 0 -1 -1.0 50.0] {<fffffff80000000fffffffc0000003ff803ff8000003fc0003fe000001fc0000ff800001fc00007f
c00001fc00001fe00001fc00000ff00001fc000007f80001fc000007f80001fc000003fc0001fc00
0001fe0001fc000001fe0001fc000000ff0001fc000000ff0001fc0000007f8001fc0000007f8001
fc0000007f8001fc0000007f8001fc0000003fc001fc0000003fc001fc0000003fc001fc0000003f
c001fc0000003fc001fc0000003fc001fc0000003fc001fc0000003fc001fc0000003fc001fc0000
003fc001fc0000003fc001fc0000003f8001fc0000007f8001fc0000007f8001fc0000007f8001fc
0000007f0001fc000000ff0001fc000000ff0001fc000001fe0001fc000001fc0001fc000003fc00
01fc000007f80001fc000007f00001fc00000fe00001fc00001fc00001fc00007f800001fc0000ff
000003fc0003fc000003ff801ff000000fffffff800000fffffff8000000>} imagemask 
  }
  68 /G44 MSTT31c3ec AddChar
/G45 [46.0 0.0 1.0 0.0 44.0 50.0]
/G45 {
    43 50 true [1 0 0 -1 -1.0 50.0] {<fffffffffc0007fffffffc0003fc0000fc0003fc00003c0001fc00001c0001fc00000e0001fc0000
0e0001fc00000e0001fc00000e0001fc0000060001fc0000060001fc0000000001fc0000000001fc
0000000001fc0000000001fc0000000001fc0000800001fc0000800001fc0000800001fc00018000
01fc0001800001fc0003800001fc000f800001ffffff800001ffffff800001fc000f800001fc0003
800001fc0001800001fc0001800001fc0000800001fc0000800001fc0000800001fc0000000001fc
0000000001fc0000000001fc0000000001fc0000000001fc0000006001fc000000c001fc000000c0
01fc000001c001fc0000018001fc0000038001fc0000078001fc0000070001fc00000f0003fc0000
3f0003fe0000fe000ffffffffe00fffffffffe00>} imagemask 
  }
  69 /G45 MSTT31c3ec AddChar
/G4d [67.0 0.0 1.0 0.0 66.0 50.0]
/G4d {
    65 50 true [1 0 0 -1 -1.0 50.0] {<fffc000000001fff800ffe000000001ff80007fe000000003fe00003ff000000003fe00001ff0000
00007fc00001ff000000007fc00001ff80000000ffc00001ff80000000ffc00001ffc0000001ffc0
0001dfc0000001dfc00001dfe0000001dfc00001cfe00000039fc00001cff00000039fc00001c7f0
0000071fc00001c7f80000071fc00001c3f800000e1fc00001c3fc00000e1fc00001c1fc00001c1f
c00001c1fe00001c1fc00001c0fe0000381fc00001c0ff0000381fc00001c0ff0000781fc00001c0
7f8000701fc00001c07f8000f01fc00001c03fc000e01fc00001c03fc001e01fc00001c01fc001c0
1fc00001c01fe003c01fc00001c00fe003801fc00001c00ff003801fc00001c007f007001fc00001
c007f807001fc00001c003f80e001fc00001c003fc0e001fc00001c001fc1c001fc00001c001fe1c
001fc00001c000fe38001fc00001c000ff38001fc00001c0007f70001fc00001c0007ff0001fc000
01c0007ff0001fc00001c0003fe0001fc00001c0003fe0001fc00001c0001fc0001fc00001c0001f
c0001fc00001c0000f80001fc00003e0000f80003fe00003e0000700003fe0000ff800070000fff8
00ffff8002000fffff80>} imagemask 
  }
  77 /G4d MSTT31c3ec AddChar
/G4f [54.0 0.0 3.0 -1.0 51.0 51.0]
/G4f {
    48 52 true [1 0 0 -1 -3.0 51.0] {<00001ff800000000ffff80000003f00fe000000f8001f000003f0000fc00007e00007e0000fc0000
3f0001f800001f8003f000000fc007e000000fe00fe0000007f00fc0000007f01fc0000003f81fc0
000003f83f80000001fc3f80000001fc7f80000001fe7f80000001fe7f80000001fe7f00000000fe
ff00000000ffff00000000ffff00000000ffff00000000ffff00000000ffff00000000ffff000000
00ffff00000000ffff00000000ffff00000000ffff00000000ffff00000000fe7f00000000fe7f80
000000fe7f80000001fe7f80000001fc3f80000001fc3fc0000001fc1fc0000003f81fc0000003f8
0fe0000003f00fe0000007e007f0000007e003f000000fc001f800001f8000fc00003f00007e0000
7e00003f0000fc00001f8003f0000007f00fc0000001ffff000000001ff80000>} imagemask 
  }
  79 /G4f MSTT31c3ec AddChar
/G20 [19.0 0.0 0.0 0.0 0.0 0.0]
/G20 {
} 
  32 /G20 MSTT31c3ec AddChar
/G54 [45.0 0.0 2.0 0.0 44.0 50.0]
/G54 {
    42 50 true [1 0 0 -1 -2.0 50.0] {<7fffffffff807fffffffff807c007f001f8078007f00078070007f000380e0007f0001c0c0007f00
00c0c0007f0000c0c0007f0000c0c0007f0000c080007f00004000007f00000000007f0000000000
7f00000000007f00000000007f00000000007f00000000007f00000000007f00000000007f000000
00007f00000000007f00000000007f00000000007f00000000007f00000000007f00000000007f00
000000007f00000000007f00000000007f00000000007f00000000007f00000000007f0000000000
7f00000000007f00000000007f00000000007f00000000007f00000000007f00000000007f000000
00007f00000000007f00000000007f00000000007f00000000007f00000000007f0000000000ff80
00000000ff8000000003ffe00000003ffffe0000>} imagemask 
  }
  84 /G54 MSTT31c3ec AddChar
/G65 [33.0 0.0 3.0 -1.0 31.0 35.0]
/G65 {
    28 36 true [1 0 0 -1 -3.0 35.0] {<001fe000007ffc0001c1fe0003807f0007003f800e001fc01c001fe03c000fe038000fe038000ff0
78000ff07ffffff07ffffff0f8000000f8000000f8000000f8000000f8000000fc000000fc000000
fc000000fc000000fe000010fe0000307f0000307f8000607fc000603fe000e03ff001c01ffc07c0
0fffff8007ffff0003fffe0001fffc0000fff800001fc000>} imagemask 
  }
  101 /G65 MSTT31c3ec AddChar
/G73 [29.0 0.0 4.0 -1.0 27.0 35.0]
/G73 {
    23 36 true [1 0 0 -1 -4.0 35.0] {<01fe0807fff81e03f83c00f8780078700038700038f00018f00018f80008fc0008fe00007f80007f
e0003ff8001ffe000fff0003ffc001ffe0007ff0001ff80007fc0001fc0000fe00007e80007e8000
3ec0003ec0003ee0003cf0003cf80078fc00f0ff81e0ffff8083fe00>} imagemask 
  }
  115 /G73 MSTT31c3ec AddChar
/G74 [21.0 0.0 0.0 -1.0 21.0 45.0]
/G74 {
    21 46 true [1 0 0 -1 0.0 45.0] {<00100000300000300000700000700000f00000f00001f00003f00007f0001ff0007ffff0fffff003
f00003f00003f00003f00003f00003f00003f00003f00003f00003f00003f00003f00003f00003f0
0003f00003f00003f00003f00003f00003f00003f00003f00003f00003f00003f00003f00003f018
03f83001fc7001ffe000ffc000ff80003e00>} imagemask 
  }
  116 /G74 MSTT31c3ec AddChar
/G53 [42.0 0.0 5.0 -1.0 38.0 51.0]
/G53 {
    33 52 true [1 0 0 -1 -5.0 51.0] {<003fe0040000fffc040003f03f8c0007c007fc000f0001fc001f0000fc003e00007c007c00003c00
7c00003c007c00001c00fc00001c00fc00000c00fe00000c00fe00000c00ff00000400ff80000400
7fc00004007fe00000007ff80000003ffe0000001fff0000000fffc0000007fff0000003fffc0000
00fffe0000007fff8000001fffc0000007fff0000003fff8000000fffc0000003ffe0000000ffe00
000007ff00000001ff00000000ff004000007f804000003f806000003f806000003f806000001f80
6000001f807000001f807000001f007800001f007800003e007c00003e007e00007c007f8000f800
7fc001f00063f807e000403fff80004007fc0000>} imagemask 
  }
  83 /G53 MSTT31c3ec AddChar
/G63 [33.0 0.0 3.0 -1.0 31.0 35.0]
/G63 {
    28 36 true [1 0 0 -1 -3.0 35.0] {<000ff000007ffc0000f07f0003c03f8007801fc00f001fc01f000fe01e000fe03e000fe03e0007e0
7c0003c07c0000007c000000fc000000fc000000fc000000fc000000fc000000fc000000fe000000
fe000000fe000000ff0000107f0000307f0000307f8000607fc000603fe000c03ff001c01ffc0f80
0fffff8007ffff0003fffe0001fffc0000fff000001f8000>} imagemask 
  }
  99 /G63 MSTT31c3ec AddChar
/G72 [25.0 0.0 1.0 0.0 25.0 35.0]
/G72 {
    24 35 true [1 0 0 -1 -1.0 35.0] {<00e07c03e0fe0fe1ff7fe3ffdfe7ff0fee7f07ec3e07f80e07f00007f00007e00007e00007e00007
e00007e00007e00007e00007e00007e00007e00007e00007e00007e00007e00007e00007e00007e0
0007e00007e00007e00007e00007f0000ff0001ffc00ffff00>} imagemask 
  }
  114 /G72 MSTT31c3ec AddChar
/G69 [21.0 0.0 3.0 0.0 19.0 52.0]
/G69 {
    16 52 true [1 0 0 -1 -3.0 52.0] {<03c007e00ff00ff00ff00ff007e003c000000000000000000000000000000000000000e003e00fe0
7fe0dfe00fe007e007e007e007e007e007e007e007e007e007e007e007e007e007e007e007e007e0
07e007e007e007e007e007e007e007e007e00ff01ff8ffff>} imagemask 
  }
  105 /G69 MSTT31c3ec AddChar
/G70 [38.0 0.0 1.0 -16.0 35.0 35.0]
/G70 {
    34 51 true [1 0 0 -1 -1.0 35.0] {<00e01f800003e07fe0000fe1fff0007fe3fff800ffe7fffc000fef07fe0007ee01ff0007f800ff00
07f0007f8007e0003f8007e0003f8007e0001f8007e0001fc007e0001fc007e0001fc007e0000fc0
07e0000fc007e0000fc007e0000fc007e0000fc007e0000fc007e0000fc007e0000f8007e0000f80
07e0000f8007e0001f0007e0001f0007e0001f0007e0003e0007f0003c0007f0007c0007f8007800
07fc00f00007ff03e00007e7ff800007e1fe000007e000000007e000000007e000000007e0000000
07e000000007e000000007e000000007e000000007e000000007e000000007e000000007e0000000
0ff00000001ff8000000ffff000000>} imagemask 
  }
  112 /G70 MSTT31c3ec AddChar
%%EndResource

0 0 0 fC
857 243 646 (RDEMO Test Scripts) 646 SB
0 0 0 fC
/fm 256 def
645 2 857 313 B
1 F
n

%%BeginResource: font MSTT31c3f9
/MSTT31c3f9 [50.0 0 0 0 0 0] 100 -100 [-50.0 -50.0 50.0 50.0] [1 50 div 0 0 1 50 div 0 0] /MSTT31c3f9 GreNewFont
%%EndResource

32 0 0 50 50 0 0 1 47 /MSTT31c3f9 font

%%BeginResource: font MSTT31c3f9
/G56 [33.0 0.0 0.0 0.0 33.0 36.0]
/G56 {
    33 36 true [1 0 0 -1 0.0 36.0] {<ff00007f807f00007f007f00007f007f00007f003f8000fe003f8000fe003f8000fe001fc001fc00
1fc001fc001fc001fc000fe003f8000fe003f8000fe003f80007f007f00007f007f00007f007f000
03f80fe00003f80fe00003f80fe00001fc1fc00001fc1fc00001fc1fc00000fc1f800000fe3f8000
00fe3f8000007e3f0000007f7f0000007f7f0000003f7e0000003ffe0000003ffe0000001ffc0000
001ffc0000001ffc0000000ff80000000ff80000>} imagemask 
  }
  86 /G56 MSTT31c3f9 AddChar
/G65 [28.0 0.0 2.0 0.0 26.0 27.0]
/G65 {
    24 27 true [1 0 0 -1 -2.0 27.0] {<00ff0003ffc007fff01ffff81ffff83fc3fc7f81fe7f00fe7e007efe007ffe007fffffffffffffff
fffffffffffe0000fe0000fe00007f00787f00ff7f80fe3fc1fe1ffffc1ffff80ffff003ffe0007f
80>} imagemask 
  }
  101 /G65 MSTT31c3f9 AddChar
/G72 [19.0 0.0 3.0 0.0 20.0 27.0]
/G72 {
    17 27 true [1 0 0 -1 -3.0 27.0] {<003e00fc7f80fcff80fdff00ffff00ffff00ffc000ff8000ff0000ff0000fe0000fe0000fe0000fe
0000fe0000fe0000fe0000fe0000fe0000fe0000fe0000fe0000fe0000fe0000fe0000fe0000fe00
00>} imagemask 
  }
  114 /G72 MSTT31c3f9 AddChar
/G73 [28.0 0.0 1.0 0.0 26.0 27.0]
/G73 {
    25 27 true [1 0 0 -1 -1.0 27.0] {<00ff800007fff0000ffff8001ffffc003ffffe007f81fe007f00ff007f0078007f8000007ff00000
3fff00003fffe0001ffffc000ffffe0003ffff00007fff000007ff8000007f801e003f80ff003f80
7f003f807fc0ff003fffff001ffffe000ffffc0007fff00000ffc000>} imagemask 
  }
  115 /G73 MSTT31c3f9 AddChar
/G69 [14.0 0.0 3.0 0.0 10.0 36.0]
/G69 {
    7 36 true [1 0 0 -1 -3.0 36.0] {<fefefefefefe00000000fefefefefefefefefefefefefefefefefefefefefefefefefefe>} imagemask 
  }
  105 /G69 MSTT31c3f9 AddChar
/G6f [31.0 0.0 2.0 0.0 29.0 27.0]
/G6f {
    27 27 true [1 0 0 -1 -2.0 27.0] {<003f800001fff00007fffc000ffffe001fffff003fe0ff803fc07f807f803fc07f001fc07f001fe0
fe000fe0fe000fe0fe000fe0fe000fe0fe000fe0fe000fe0fe000fe0ff001fc07f001fc07f803fc0
3fc07f803fe0ff801fffff000ffffe0007fffc0001fff000003f8000>} imagemask 
  }
  111 /G6f MSTT31c3f9 AddChar
/G6e [30.0 0.0 3.0 0.0 27.0 27.0]
/G6e {
    24 27 true [1 0 0 -1 -3.0 27.0] {<000fc0fc3ff8fcfffcfdfffefffffeffc1feff80ffff00ffff007ffe007ffe007ffe007ffe007ffe
007ffe007ffe007ffe007ffe007ffe007ffe007ffe007ffe007ffe007ffe007ffe007ffe007ffe00
7f>} imagemask 
  }
  110 /G6e MSTT31c3f9 AddChar
/G20 [14.0 0.0 0.0 0.0 0.0 0.0]
/G20 {
} 
  32 /G20 MSTT31c3f9 AddChar
/G31 [28.0 0.0 4.0 0.0 20.0 36.0]
/G31 {
    16 36 true [1 0 0 -1 -4.0 36.0] {<003f003f007f00ff01ff03ff07ff1fff7fffffffff7ffe7ffc7ff07f807f007f007f007f007f007f
007f007f007f007f007f007f007f007f007f007f007f007f007f007f007f007f>} imagemask 
  }
  49 /G31 MSTT31c3f9 AddChar
/G2e [14.0 0.0 3.0 0.0 10.0 7.0]
/G2e {
    7 7 true [1 0 0 -1 -3.0 7.0] {<fefefefefefefe>} imagemask 
  }
  46 /G2e MSTT31c3f9 AddChar
/G30 [28.0 0.0 2.0 0.0 26.0 36.0]
/G30 {
    24 36 true [1 0 0 -1 -2.0 36.0] {<00ff0003ffc007ffe00ffff01ffff83ffffc3fc3fc7f81fe7f00fe7f00fe7f00fefe007ffe007ffe
007ffe007ffe007ffe007ffe007ffe007ffe007ffe007ffe007ffe007ffe007ffe007f7f00fe7f00
fe7f00fe7f81fe3fc3fc3ffffc1ffff80ffff007ffe003ffc000ff00>} imagemask 
  }
  48 /G30 MSTT31c3f9 AddChar
%%EndResource

1047 380 267 (Version 1.0) 267 SB

%%BeginResource: font MSTT31c416
/MSTT31c416 [50.0 0 0 0 0 0] 100 -100 [-50.0 -50.0 50.0 50.0] [1 50 div 0 0 1 50 div 0 0] /MSTT31c416 GreNewFont
%%EndResource

32 0 0 50 50 0 0 1 46 /MSTT31c416 font

%%BeginResource: font MSTT31c416
/G43 [36.0 0.0 2.0 -1.0 34.0 34.0]
/G43 {
    32 35 true [1 0 0 -1 -2.0 34.0] {<0003fe01001fffe3007f81ff00fe003f03fc001f07f8000f0ff000070fe000031fe000033fc00001
3fc000017fc000007f8000007f800000ff800000ff800000ff800000ff800000ff800000ff800000
ff800000ff8000007f8000007fc000007fc000003fc000003fe000001fe000021fe000060ff0000e
07f8001c03fc003800ff01e0003fffc00007fe00>} imagemask 
  }
  67 /G43 MSTT31c416 AddChar
/G6f [25.0 0.0 2.0 -1.0 23.0 23.0]
/G6f {
    21 24 true [1 0 0 -1 -2.0 23.0] {<01fc0007ff000f8f801f07c03f07e03e03f07e03f07e03f0fe03f8fe03f8fe03f8fe03f8fe03f8fe
03f8fe03f8fe03f87e03f07e03f03e03f03f07e01f07c00f8f8007ff0001fc00>} imagemask 
  }
  111 /G6f MSTT31c416 AddChar
/G70 [28.0 0.0 2.0 -11.0 26.0 23.0]
/G70 {
    24 34 true [1 0 0 -1 -2.0 23.0] {<0007c0ff9ff07fbff83fe1fc3fc0fc3fc0fe3f80fe3f807e3f807f3f807f3f807f3f807f3f807f3f
807f3f807f3f807f3f807e3f807e3f80fe3f80fc3fc0fc3ff1f83f9ff03f8fc03f80003f80003f80
003f80003f80003f80003f80003f80007fc000ffe000>} imagemask 
  }
  112 /G70 MSTT31c416 AddChar
/G79 [25.0 0.0 0.0 -11.0 24.0 22.0]
/G79 {
    24 33 true [1 0 0 -1 0.0 22.0] {<fff8ff7fe03e3fc01c1fe0180fe0180ff0300ff03007f03007f86003f86003fcc001fcc001fec000
ff8000ff80007f00007f00007f00003e00003e00001e00001c00000c000018000018000018003c30
007e30007e60007e60007fc0003f80001f0000>} imagemask 
  }
  121 /G79 MSTT31c416 AddChar
/G72 [21.0 0.0 2.0 0.0 21.0 23.0]
/G72 {
    19 23 true [1 0 0 -1 -2.0 23.0] {<0003c0ff87e07f8fe03f9fe03fbfe03fe3e03fc1c03fc0003fc0003f80003f80003f80003f80003f
80003f80003f80003f80003f80003f80003f80003f80007fc000ffe000>} imagemask 
  }
  114 /G72 MSTT31c416 AddChar
/G69 [14.0 0.0 2.0 0.0 13.0 34.0]
/G69 {
    11 34 true [1 0 0 -1 -2.0 34.0] {<0e001f003f803f803f801f000e0000000000000000000000ff807f803f803f803f803f803f803f80
3f803f803f803f803f803f803f803f803f803f803f803f807fc0ffe0>} imagemask 
  }
  105 /G69 MSTT31c416 AddChar
/G67 [25.0 0.0 2.0 -11.0 24.0 23.0]
/G67 {
    22 34 true [1 0 0 -1 -2.0 23.0] {<03f8000ffffc1f8ffc3f0ffc7e07c0fe07e0fe07f0fe07f0fe07f0fe07f07e07f07e07e03f0fe01f
9fc007ff0003fc000e00001c00003c00007e00007fffc07ffff07ffff87ffff83ffffc1ffffc7000
7ce0001ce0001ce00018f000307c01e03fffc007fe00>} imagemask 
  }
  103 /G67 MSTT31c416 AddChar
/G68 [28.0 0.0 2.0 0.0 26.0 33.0]
/G68 {
    24 33 true [1 0 0 -1 -2.0 33.0] {<ff80007f80003f80003f80003f80003f80003f80003f80003f80003f80003f87c03f9ff03fbff83f
e3f83fc1fc3f81fc3f81fc3f81fc3f81fc3f81fc3f81fc3f81fc3f81fc3f81fc3f81fc3f81fc3f81
fc3f81fc3f81fc3f81fc3f81fc7fc3feffe7ff>} imagemask 
  }
  104 /G68 MSTT31c416 AddChar
/G74 [17.0 0.0 1.0 -1.0 16.0 30.0]
/G74 {
    15 31 true [1 0 0 -1 -1.0 30.0] {<004000c001c001c003c007c00fc03fc07ffefffe1fc01fc01fc01fc01fc01fc01fc01fc01fc01fc0
1fc01fc01fc01fc01fc01fc01fc21fe60ffc07f803e0>} imagemask 
  }
  116 /G74 MSTT31c416 AddChar
/G20 [13.0 0.0 0.0 0.0 0.0 0.0]
/G20 {
} 
  32 /G20 MSTT31c416 AddChar
/G28 [17.0 0.0 2.0 -11.0 16.0 34.0]
/G28 {
    14 45 true [1 0 0 -1 -2.0 34.0] {<00040018007000e001c003c0078007800f801f001f003f003f007e007e007e007e00fe00fe00fe00
fe00fe00fe00fe00fe00fe00fe00fe007e007e007e003f003f003f001f001f000f800780078003c0
01c000e0007000180004>} imagemask 
  }
  40 /G28 MSTT31c416 AddChar
/G29 [17.0 0.0 1.0 -11.0 15.0 34.0]
/G29 {
    14 45 true [1 0 0 -1 -1.0 34.0] {<8000600038001c000e000f000780078007c003e003e003f003f001f001f801f801f801fc01fc01fc
01fc01fc01fc01fc01fc01fc01fc01fc01f801f801f801f803f003f003e003e007c0078007800f00
0e001c00380060008000>} imagemask 
  }
  41 /G29 MSTT31c416 AddChar
/G4a [25.0 0.0 1.0 -1.0 25.0 33.0]
/G4a {
    24 34 true [1 0 0 -1 -1.0 33.0] {<03ffff003ff0001fe0001fe0001fe0001fe0001fe0001fe0001fe0001fe0001fe0001fe0001fe000
1fe0001fe0001fe0001fe0001fe0001fe0001fe0001fe0001fe0001fe0381fe07c1fe0fe1fe0fe1f
e0fe1fe0fc1fc0781fc0783f803c3f000ffe0003f800>} imagemask 
  }
  74 /G4a MSTT31c416 AddChar
/G2e [13.0 0.0 2.0 -1.0 10.0 7.0]
/G2e {
    8 8 true [1 0 0 -1 -2.0 7.0] {<3c7effffffff7e3c>} imagemask 
  }
  46 /G2e MSTT31c416 AddChar
/G53 [28.0 0.0 3.0 -1.0 26.0 34.0]
/G53 {
    23 35 true [1 0 0 -1 -3.0 34.0] {<01fc0807ff981f07f83c01f87c0078780078780038f80018fc0018fe0008ff0008ffc000fff0007f
fc007fff003fff801fffe00ffff003fff801fffc007ffc001ffe0007fe8001fe8000fec0007ec000
3ee0003ee0003cf0003cf80078fe00f0ff81e0c7ffc080fe00>} imagemask 
  }
  83 /G53 MSTT31c416 AddChar
/G41 [36.0 0.0 0.0 0.0 35.0 34.0]
/G41 {
    35 34 true [1 0 0 -1 0.0 34.0] {<000040000000006000000000e000000000f000000001f000000001f800000003f800000003f80000
0007fc00000007fc00000007fe0000000dfe0000000dff00000019ff00000018ff00000030ff8000
00307f800000207fc00000603fc00000603fe00000c03fe00000c01fe00001fffff00001fffff000
03000ff800030007f800030007fc00060007fc00060003fe000e0003fe000e0001ff001e0001ff00
7f0003ff80ffe01fffe0>} imagemask 
  }
  65 /G41 MSTT31c416 AddChar
/G4b [40.0 0.0 1.0 0.0 40.0 33.0]
/G4b {
    39 33 true [1 0 0 -1 -1.0 33.0] {<ffffc07ffc0ffe000fe007fc000fc007f8000f0007f8000e0007f8001c0007f800300007f800e000
07f801c00007f803000007f80e000007f81c000007f838000007f878000007f9fc000007fbfe0000
07ffff000007ffff000007f9ff800007f8ffc00007f87fe00007f83ff00007f81ff80007f81ff800
07f80ffc0007f807fe0007f803ff0007f801ff8007f801ffc007f800ffe007f800fff00ffe00fff8
ffffc3fffe>} imagemask 
  }
  75 /G4b MSTT31c416 AddChar
/G61 [25.0 0.0 2.0 -1.0 24.0 23.0]
/G61 {
    22 24 true [1 0 0 -1 -2.0 23.0] {<00fc0007ff001e1f803c0fc03e0fe07e0fe07f0fe07f0fe03e0fe01c0fe0003fe000efe003cfe00f
8fe01f0fe03f0fe07e0fe0fe0fe0fe0fe0fe1fe0ff2fe0ffcffc7f87f83e03e0>} imagemask 
  }
  97 /G61 MSTT31c416 AddChar
/G31 [25.0 0.0 4.0 0.0 21.0 33.0]
/G31 {
    17 33 true [1 0 0 -1 -4.0 33.0] {<00300000f00003f0001ff0007ff000cff00007f00007f00007f00007f00007f00007f00007f00007
f00007f00007f00007f00007f00007f00007f00007f00007f00007f00007f00007f00007f00007f0
0007f00007f00007f00007f8000ffc00ffff80>} imagemask 
  }
  49 /G31 MSTT31c416 AddChar
/G39 [25.0 0.0 2.0 0.0 23.0 33.0]
/G39 {
    21 33 true [1 0 0 -1 -2.0 33.0] {<01f80007fe000f1f801f0fc03e07e07e07e07e07f0fe03f0fe03f0fe03f8fe03f8fe03f8fe03f8fe
03f87f03f87f03f83f83f81fc7f00ffff003f7f00007f00007e00007e0000fc0000f80001f80003f
00007e0000fc0001f00007c0003f0000f00000>} imagemask 
  }
  57 /G39 MSTT31c416 AddChar
/G2d [17.0 0.0 1.0 9.0 15.0 14.0]
/G2d {
    14 5 true [1 0 0 -1 -1.0 14.0] {<fffcfffcfffcfffcfffc>} imagemask 
  }
  45 /G2d MSTT31c416 AddChar
/G35 [25.0 0.0 2.0 0.0 23.0 33.0]
/G35 {
    21 33 true [1 0 0 -1 -2.0 33.0] {<03fff807fff807fff007fff00ffff00fffe00c00001800001800003f80003ff8003ffe007fff007f
ffc07fffe0ffffe001fff0001ff00007f80001f80000f80000780000780000380000380000307800
30fe0030ff0060ff80607fe1c03fff000ff800>} imagemask 
  }
  53 /G35 MSTT31c416 AddChar
%%EndResource

764 491 833 (Copyright \(C\) J.S.A.Kapp 1991 - 1995.) 833 SB
32 0 0 50 50 0 0 0 40 /Courier /font0 ANSIFont font
240 598 1680 (REDEMO comes with several test scripts that test RSAEURO) 1680 SB
240 648 1380 (cryptographic operations of various key sizes.) 1380 SB
240 748 1650 (The test scripts are: '508.in', '512a.in', '767.in' and) 1650 SB
240 798 1860 ('1024.in'. The scripts consist of REDEMO commands. To exercise) 1860 SB
240 848 30 (a) 29 SB
269 848 30 ( ) 29 SB
298 848 30 (s) 29 SB
327 848 30 (c) 29 SB
356 848 30 (r) 29 SB
385 848 30 (i) 29 SB
414 848 30 (p) 29 SB
443 848 30 (t) 29 SB
472 848 30 (,) 29 SB
501 848 30 ( ) 29 SB
530 848 30 (r) 29 SB
559 848 30 (e) 29 SB
588 848 30 (d) 29 SB
617 848 30 (i) 29 SB
646 848 30 (r) 29 SB
675 848 30 (e) 29 SB
704 848 30 (c) 29 SB
733 848 30 (t) 29 SB
762 848 30 ( ) 29 SB
791 848 30 (R) 29 SB
820 848 30 (E) 29 SB
849 848 30 (D) 29 SB
878 848 30 (E) 29 SB
907 848 30 (M) 29 SB
936 848 30 (O) 29 SB
965 848 30 (') 29 SB
994 848 30 (s) 29 SB
1023 848 30 ( ) 29 SB
1052 848 30 (i) 29 SB
1081 848 30 (n) 29 SB
1110 848 30 (p) 29 SB
1139 848 30 (u) 29 SB
1168 848 30 (t) 29 SB
1197 848 30 ( ) 29 SB
1226 848 30 (t) 29 SB
1255 848 30 (o) 29 SB
1284 848 30 ( ) 29 SB
1313 848 30 (t) 29 SB
1342 848 30 (h) 29 SB
1371 848 750 (e script. For example, on) 750 SB
240 898 1380 (a UNIX or DOS system you would run the command) 1380 SB
390 998 450 (redemo < 508.in) 450 SB
240 1098 1140 (to exercise the test script '508.in'. ) 1140 SB
240 1198 30 (T) 29 SB
269 1198 30 (h) 29 SB
298 1198 30 (e) 29 SB
327 1198 30 ( ) 29 SB
356 1198 30 (s) 29 SB
385 1198 30 (c) 29 SB
414 1198 30 (r) 29 SB
443 1198 30 (i) 29 SB
472 1198 30 (p) 29 SB
501 1198 1620 (ts work with a number of input files. Each script also) 1620 SB
240 1248 240 (produces) 240 SB
481 1248 30 ( ) 40 SB
521 1248 210 (output ) 220 SB
741 1248 180 (files ) 190 SB
931 1248 150 (that ) 160 SB
1091 1248 120 (you ) 130 SB
1221 1248 120 (can ) 130 SB
1351 1248 240 (compare ) 250 SB
1601 1248 240 (against ) 250 SB
1851 1248 270 (reference) 270 SB
240 1298 30 (f) 31 SB
271 1298 30 (i) 31 SB
302 1298 90 (les) 90 SB
393 1298 30 ( ) 32 SB
425 1298 270 (supplied ) 272 SB
697 1298 150 (with ) 152 SB
849 1298 240 (REDEMO. ) 242 SB
1091 1298 150 (Both ) 152 SB
1243 1298 120 (the ) 122 SB
1365 1298 240 (scripts ) 242 SB
1607 1298 120 (and ) 122 SB
1729 1298 120 (the ) 122 SB
1851 1298 270 (reference) 270 SB
240 1348 1410 (files are stored in the 'scripts' subdirectory.) 1410 SB
240 1448 30 (S) 29 SB
269 1448 30 (e) 29 SB
298 1448 30 (e) 29 SB
327 1448 30 ( ) 28 SB
355 1448 30 (t) 29 SB
384 1448 30 (h) 29 SB
413 1448 30 (e) 29 SB
442 1448 30 ( ) 28 SB
470 1448 30 (') 29 SB
499 1448 30 (r) 29 SB
528 1448 30 (e) 29 SB
557 1448 30 (d) 29 SB
586 1448 30 (e) 29 SB
615 1448 30 (m) 29 SB
644 1448 30 (o) 29 SB
673 1448 30 (.) 29 SB
702 1448 30 (t) 29 SB
731 1448 30 (x) 29 SB
760 1448 30 (t) 29 SB
789 1448 30 (') 29 SB
818 1448 30 ( ) 28 SB
846 1448 30 (d) 29 SB
875 1448 30 (o) 29 SB
904 1448 30 (c) 29 SB
933 1448 30 (u) 29 SB
962 1448 30 (m) 29 SB
991 1448 30 (e) 29 SB
1020 1448 30 (n) 29 SB
1049 1448 30 (t) 29 SB
1078 1448 30 (a) 29 SB
1107 1448 30 (t) 29 SB
1136 1448 30 (i) 29 SB
1165 1448 30 (o) 29 SB
1194 1448 30 (n) 29 SB
1223 1448 30 ( ) 28 SB
1251 1448 30 (f) 29 SB
1280 1448 30 (i) 29 SB
1309 1448 30 (l) 29 SB
1338 1448 30 (e) 29 SB
1367 1448 30 ( ) 29 SB
1396 1448 30 (i) 29 SB
1425 1448 30 (n) 29 SB
1454 1448 30 ( ) 29 SB
1483 1448 30 (t) 29 SB
1512 1448 30 (h) 29 SB
1541 1448 30 (e) 29 SB
1570 1448 30 ( ) 29 SB
1599 1448 30 (') 29 SB
1628 1448 30 (d) 29 SB
1657 1448 30 (o) 29 SB
1686 1448 30 (c) 29 SB
1715 1448 30 (') 29 SB
1744 1448 30 ( ) 29 SB
1773 1448 30 (s) 29 SB
1802 1448 30 (u) 29 SB
1831 1448 30 (b) 29 SB
1860 1448 30 (d) 29 SB
1889 1448 30 (i) 29 SB
1918 1448 30 (r) 29 SB
1947 1448 30 (e) 29 SB
1976 1448 30 (c) 29 SB
2005 1448 30 (t) 29 SB
2034 1448 30 (o) 29 SB
2063 1448 30 (r) 29 SB
2092 1448 30 (y) 29 SB
240 1498 1500 (for more information on the demonstration program.) 1500 SB

%%BeginResource: font MSTT31c42e
/MSTT31c42e [50.0 0 0 0 0 0] 80 -100 [-50.0 -50.0 50.0 50.0] [1 50 div 0 0 1 50 div 0 0] /MSTT31c42e GreNewFont
%%EndResource

32 0 0 50 50 0 0 1 46 /MSTT31c42e font

%%BeginResource: font MSTT31c42e
/G27 [10.0 0.0 6.0 23.0 13.0 36.0]
/G27 {
    7 13 true [1 0 0 -1 -6.0 36.0] {<1e1e3c3c3c3c7c78787870f0f0>} imagemask 
  }
  39 /G27 MSTT31c42e AddChar
/G35 [28.0 0.0 3.0 0.0 29.0 36.0]
/G35 {
    26 36 true [1 0 0 -1 -3.0 36.0] {<00ffffc000ffff8001ffff8001ffff8001e0000001e0000003c0000003c0000003c0000003c00000
07800000078fe00007bff8000ffffc000ffffe000fe07f000f801f001f000f001e000f8000000780
0000078000000780000007800000078000000f80f0000f00f0000f00f0001f00f8003e0078007e00
7c00fc003f03f8003ffff0001fffe00007ff800001fe0000>} imagemask 
  }
  53 /G35 MSTT31c42e AddChar
/G30 [28.0 0.0 3.0 0.0 28.0 36.0]
/G30 {
    25 36 true [1 0 0 -1 -3.0 36.0] {<000fc000003ff000007ffc0001fffe0003f83e0003e01f0007c00f000f8007800f0007801f000780
1e0007803e0007803e0007803c0007807c0007807c00078078000f8078000f80f8000f00f8000f00
f0001f00f0001f00f0001e00f0001e00f0003e00f0003c00f0007c00f000f8007800f8007801f000
7c03e0003e0fe0001fffc0001fff800007fe000001f80000>} imagemask 
  }
  48 /G30 MSTT31c42e AddChar
/G38 [28.0 0.0 4.0 0.0 28.0 36.0]
/G38 {
    24 36 true [1 0 0 -1 -4.0 36.0] {<003fc000fff003fff807fffc07e07e0f801e0f000f1f000f1e000f1e000f1e000f1e001e0f003e0f
c0fc03fff801ffe007ffc01ffff03f81f03e00f87c007878003cf8003cf0003cf0003cf0003cf000
7cf00078f000f87800f87c01f07f07e03fffc01fff800fff0001fc00>} imagemask 
  }
  56 /G38 MSTT31c42e AddChar
/G2e [14.0 0.0 3.0 0.0 8.0 4.0]
/G2e {
    5 4 true [1 0 0 -1 -3.0 4.0] {<7878f0f0>} imagemask 
  }
  46 /G2e MSTT31c42e AddChar
/G69 [10.0 0.0 1.0 0.0 12.0 36.0]
/G69 {
    11 36 true [1 0 0 -1 -1.0 36.0] {<01e001e001e003c00000000000000000000000000780078007800f000f000f000f000f001e001e00
1e001e001e003c003c003c003c003c007c007800780078007800f800f000f000>} imagemask 
  }
  105 /G69 MSTT31c42e AddChar
/G6e [28.0 0.0 2.0 0.0 27.0 27.0]
/G6e {
    25 27 true [1 0 0 -1 -2.0 27.0] {<0001f80003c7fc0007cffe00079fff0007bc1f0007f00f0007e00f800fc00f000f800f000f800f00
0f000f001f000f001e001f001e001e001e001e001e001e003c003e003c003c003c003c003c003c00
7c003c0078007800780078007800780078007800f000f000f000f000>} imagemask 
  }
  110 /G6e MSTT31c42e AddChar
/G20 [14.0 0.0 0.0 0.0 0.0 0.0]
/G20 {
} 
  32 /G20 MSTT31c42e AddChar
/G73 [25.0 0.0 2.0 -1.0 25.0 27.0]
/G73 {
    23 28 true [1 0 0 -1 -2.0 27.0] {<007f8001ffe007fff80ffff80f80fc1f003e1e001e1e001e1f00001fc0000ff0000ffc0007ff0001
ffc0007fe0001ff00003f00001f8f000f8f00078f00078f800787c00f07f03f03fffe01fffc00fff
8001fc00>} imagemask 
  }
  115 /G73 MSTT31c42e AddChar
/G63 [25.0 0.0 2.0 -1.0 26.0 27.0]
/G63 {
    24 28 true [1 0 0 -1 -2.0 27.0] {<001fc000fff003fff807fffc0fe07e0f801e1f001f3e000f3c000f7c0000780000780000780000f0
0000f00000f00000f00000f00000f0003cf00078f800787800f07c01f07e07e03fffc01fff800fff
0001f800>} imagemask 
  }
  99 /G63 MSTT31c42e AddChar
/G72 [17.0 0.0 2.0 0.0 21.0 27.0]
/G72 {
    19 27 true [1 0 0 -1 -2.0 27.0] {<0007c0078fe0079fc0073fc00f78000fe0000fc0000f80000f80001f00001f00001e00001e00001e
00003e00003c00003c00003c00003c0000780000780000780000780000780000f80000f00000f000
00>} imagemask 
  }
  114 /G72 MSTT31c42e AddChar
/G70 [28.0 0.0 0.0 -10.0 27.0 27.0]
/G70 {
    27 37 true [1 0 0 -1 0.0 27.0] {<0000fc0000f1fe0000f7ff0001ffff8001fe0fc001f807c001f003c001f003e003e001e003c001e0
03c001e003c001e0078001e0078001e0078001e0078003e0078003c00f8003c00f8007c00f800780
0f800f801fc01f001fc03e001ff07e001efffc001c7ff8003c3fe0003c0f80003c0000003c000000
7800000078000000780000007800000078000000f0000000f0000000>} imagemask 
  }
  112 /G70 MSTT31c42e AddChar
/G74 [14.0 0.0 2.0 -1.0 16.0 36.0]
/G74 {
    14 37 true [1 0 0 -1 -2.0 36.0] {<0020006001e003c003c003c003c007c0078007803ffc3ffc7ff87ff80f000f000e001e001e001e00
1e001c003c003c003c003c00380078007800780078007800f800ff807f807f001f00>} imagemask 
  }
  116 /G74 MSTT31c42e AddChar
%%EndResource

240 1600 289 ('508.in' script) 289 SB

%%BeginResource: font MSTT31c42e
/G31 [28.0 0.0 8.0 0.0 24.0 36.0]
/G31 {
    16 36 true [1 0 0 -1 -8.0 36.0] {<00070007000e001e003e00fe01fe07fc0ffc3ffcff3cfe38f07880780078007800f000f000f000f0
01f001e001e001e001e003c003c003c003c007c007800780078007800f000f00>} imagemask 
  }
  49 /G31 MSTT31c42e AddChar
%%EndResource

390 1718 42 (1.) 42 SB

%%BeginResource: font MSTT31c42e
/G47 [39.0 0.0 5.0 -1.0 39.0 37.0]
/G47 {
    34 38 true [1 0 0 -1 -5.0 37.0] {<0001ff0000000fffe000003ffff800007ffffc0000ff01fe0001f8003f0003f0001f0007c0000f80
0f80000f800f000007801e000007c03e000003003c000000003c0000000078000000007800000000
78000000007800000000f000000000f000ffff00f000ffff00f001ffff00f001fffe00f000001e00
f000001e00f000001e00f000003e007800003c007800003c007c00003c003c00003c003e0000f800
1f8003f8000fe01ff8000ffffff00003ffffc00001fffe0000003ff00000>} imagemask 
  }
  71 /G47 MSTT31c42e AddChar
/G65 [28.0 0.0 2.0 -1.0 27.0 27.0]
/G65 {
    25 28 true [1 0 0 -1 -2.0 27.0] {<001fc00000fff00001fffc0007fffe000fe07e000f801f001f000f003e0007803c00078078000780
780007807fffff80ffffff80ffffff80ffffff80f0000000f0000000f0000000f0000000f0001e00
78003e0078007c007c00fc003f07f8001ffff0000fffc00007ff800001fc0000>} imagemask 
  }
  101 /G65 MSTT31c42e AddChar
/G61 [28.0 0.0 2.0 -1.0 26.0 27.0]
/G61 {
    24 28 true [1 0 0 -1 -2.0 27.0] {<001fc000fff801fffc03fffe07e03f0f801f0f000f1e000f00000f00000f00001f003fff07fffe1f
fffe3fffde7f801e7c001ef8003ef0003cf0003cf0007cf000fcf801fc7e07fc7fffbc3fff3c1ffc
3c07f000>} imagemask 
  }
  97 /G61 MSTT31c42e AddChar
/G2d [17.0 0.0 2.0 11.0 17.0 15.0]
/G2d {
    15 4 true [1 0 0 -1 -2.0 15.0] {<7ffe7ffefffcfffc>} imagemask 
  }
  45 /G2d MSTT31c42e AddChar
/G62 [28.0 0.0 2.0 -1.0 26.0 36.0]
/G62 {
    24 37 true [1 0 0 -1 -2.0 36.0] {<01e00001e00001e00003c00003c00003c00003c00003c0000780000787c0079ff007bff807fffc0f
f07e0fe03e0fc01e0f801f0f000f1f000f1e000f1e000f1e000f1e000f3c000f3c001f3c001e3c00
1e3c003e7c003c7e007c7e00f87f01f87b83f0fbffe0f1ffc0f0ff80003e00>} imagemask 
  }
  98 /G62 MSTT31c42e AddChar
/G52 [36.0 0.0 2.0 0.0 36.0 36.0]
/G52 {
    34 36 true [1 0 0 -1 -2.0 36.0] {<01fffff00001fffffe0001ffffff0003ffffff8003c0001f8003c00007c003c00007c003c00003c0
07800003c007800003c007800003c007800007c007800007800f00000f800f00001f800f00007f00
0ffffffe000ffffffc001ffffff0001fffff80001e003e00001e000f00001e000780003c0003c000
3c0003c0003c0001e0003c0001e0003c0000f000780000f000780000f80078000078007800007c00
7800003c00f800003e00f000001e00f000001e00>} imagemask 
  }
  82 /G52 MSTT31c42e AddChar
/G53 [33.0 0.0 4.0 -1.0 33.0 37.0]
/G53 {
    29 38 true [1 0 0 -1 -4.0 37.0] {<000ff000007ffe0000ffff8003ffffc003f01fe007c003e0078001f00f0000f00f0000f80f000078
0f0000780f0000780f80000007c0000007f0000003fc000001ff0000007fe000003ff800000ffe00
0001ff0000007f8000001fc0000007c0000003e0300003e0f00001e0f00001e0f00001e0f80001e0
780003c07c0007c07e000f803fc03f801fffff000ffffc0003fff800007fc000>} imagemask 
  }
  83 /G53 MSTT31c42e AddChar
/G41 [33.0 0.0 0.0 0.0 31.0 36.0]
/G41 {
    31 36 true [1 0 0 -1 0.0 36.0] {<00003f8000003f8000007f8000007bc00000fbc00000f3c00001f3c00001e3c00003e3c00003c3e0
0007c1e0000781e0000f81e0000f01e0001f01e0001e01e0003e00f0003c00f0007c00f000f800f0
00f800f001f000f001fffff803fffff803fffff807fffff8078000780f8000780f0000781f00003c
1e00003c3e00003c3c00003c7c00003c7800003cf800003c>} imagemask 
  }
  65 /G41 MSTT31c42e AddChar
/G6b [25.0 0.0 2.0 0.0 28.0 36.0]
/G6b {
    26 36 true [1 0 0 -1 -2.0 36.0] {<00f0000000f0000001e0000001e0000001e0000001e0000001e0000003c0000003c0000003c00000
03c01f8007803f0007807e000780fc000781f8000783f0000f07c0000f0f80000f1f00000f3e0000
1e7e00001efe00001fff00001fcf00001f8f80003f0780003e0780003c03c0003c03c0007803e000
7801e0007801e0007800f0007800f000f000f800f0007800>} imagemask 
  }
  107 /G6b MSTT31c42e AddChar
/G79 [25.0 0.0 0.0 -10.0 27.0 26.0]
/G79 {
    27 36 true [1 0 0 -1 0.0 26.0] {<078001e0078003e0078003c003c007c003c0078003c00f0003c01f0003c01e0003c03e0003c03c00
01e07c0001e0780001e0f80001e0f00001e1f00001e1e00001e3c00000f7c00000f7800000ff8000
00ff000000ff000000fe000000fe0000007c0000007c00000078000000f0000001f0000001e00000
03e0000007c00000ff800000ff000000fe000000fc000000>} imagemask 
  }
  121 /G79 MSTT31c42e AddChar
/G2c [14.0 0.0 1.0 -8.0 8.0 4.0]
/G2c {
    7 12 true [1 0 0 -1 -1.0 4.0] {<1e1e3e3c0c0c1c183870e0c0>} imagemask 
  }
  44 /G2c MSTT31c42e AddChar
/G77 [36.0 0.0 4.0 0.0 39.0 26.0]
/G77 {
    35 26 true [1 0 0 -1 -4.0 26.0] {<f001f003c0f003f003c0f003f00780f003f007807807f007807807700f007807700f00780e781e00
780e781e00781e781c00781c783c00781c78380078387878003c387878003c787870003c7078f000
3c7078e0003ce039e0003ce039c0003ce039c0003dc03b80003fc03f80001f803f80001f803f0000
1f803f00001f003e0000>} imagemask 
  }
  119 /G77 MSTT31c42e AddChar
/G67 [28.0 0.0 1.0 -10.0 28.0 27.0]
/G67 {
    27 37 true [1 0 0 -1 -1.0 27.0] {<001f8000007fe3c001fff3c003fffbc007f0ffc00fc03fc00f801f801f000f801e000f803e000f80
3c000f003c000f0078000f0078000f0078000f0078001e0078001e0078001e0078003e007c007c00
3c007c003e01fc001f87fc001ffffc000fff780007fe780001f878000000f8000000f000f000f000
f001f000f803e000fc07e0007fffc0003fff80001ffe000007f80000>} imagemask 
  }
  103 /G67 MSTT31c42e AddChar
/G68 [28.0 0.0 2.0 0.0 26.0 36.0]
/G68 {
    24 36 true [1 0 0 -1 -2.0 36.0] {<01e00001e00001e00003c00003c00003c00003c00003c0000780000783f0078ffc079ffe07bffe0f
7c1f0ff00f0fc00f0f800f0f800f1f000f1f001f1e001e1e001e1e001e3e001e3c003e3c003c3c00
3c3c003c7c003c780078780078780078780078f80078f000f0f000f0>} imagemask 
  }
  104 /G68 MSTT31c42e AddChar
/G6f [28.0 0.0 2.0 -1.0 27.0 27.0]
/G6f {
    25 28 true [1 0 0 -1 -2.0 27.0] {<001fc00000fff00003fff80007fffc000fe07e000f801f001f000f003e000f003c0007807c000780
7800078078000780f8000780f0000780f0000780f0000f80f0000f00f0000f00f0001f00f0003e00
f8003e0078007c007c01fc003f03f8003ffff0001fffc00007ff800001fc0000>} imagemask 
  }
  111 /G6f MSTT31c42e AddChar
%%EndResource

540 1718 1152 (Generates a 508-bit RSA key pair, writing the key to) 1152 SB
540 1777 210 ('508.key'.) 210 SB

%%BeginResource: font MSTT31c42e
/G32 [28.0 0.0 3.0 0.0 28.0 36.0]
/G32 {
    25 36 true [1 0 0 -1 -3.0 36.0] {<001fc000007ff00001fffc0003fffe0007f07e0007c01f000f800f000f000f801f0007801e000780
1e0007800000078000000f8000000f0000001f0000003e0000007e000000fc000001f8000003f000
0007e000001f8000003f0000007e000000fc000003f0000007e000000fc000001f8000001f000000
3e0000003c0000007ffffc007ffffc00fffff800fffff800>} imagemask 
  }
  50 /G32 MSTT31c42e AddChar
%%EndResource

390 1895 42 (2.) 42 SB

%%BeginResource: font MSTT31c42e
/G66 [14.0 0.0 2.0 0.0 20.0 36.0]
/G66 {
    18 36 true [1 0 0 -1 -2.0 36.0] {<003f8000ffc000ffc001ff8001f00001e00003e00003c00003c00003c0003ffe003ffe007ffc007f
fc000780000780000f00000f00000f00000f00001f00001e00001e00001e00001e00003c00003c00
003c00003c00007c0000780000780000780000780000f00000f00000>} imagemask 
  }
  102 /G66 MSTT31c42e AddChar
/G6c [11.0 0.0 1.0 0.0 13.0 36.0]
/G6c {
    12 36 true [1 0 0 -1 -1.0 36.0] {<00f000f001f001e001e001e001e003c003c003c003c007c007800780078007800f000f000f000f00
1f001e001e001e001e003c003c003c003c007c007800780078007800f000f000>} imagemask 
  }
  108 /G6c MSTT31c42e AddChar
/G76 [25.0 0.0 4.0 0.0 27.0 26.0]
/G76 {
    23 26 true [1 0 0 -1 -4.0 26.0] {<f0001ef0003ef0003c78007c7800787800f07801f07801e07c03e03c03c03c07c03c07803c0f803c
0f001e1f001e1e001e3e001e3c001e7c001e78000ef8000ff0000ff0000fe0000fc0000fc000>} imagemask 
  }
  118 /G76 MSTT31c42e AddChar
/G64 [28.0 0.0 2.0 -1.0 30.0 36.0]
/G64 {
    28 37 true [1 0 0 -1 -2.0 36.0] {<000000f0000000f0000001f0000001e0000001e0000001e0000001e0000003e0000003c0003f03c0
00ffc3c001ffe7c007fff7c00fe0ff800f803f801f001f803e001f803c000f807c000f0078000f00
78000f00f8000f00f0000f00f0000e00f0001e00f0001e00f0001e00f0003e00f0003c00f8007c00
7800fc007c01fc007f07fc003fffb8001fff78000ffc780003f00000>} imagemask 
  }
  100 /G64 MSTT31c42e AddChar
/G4d [42.0 0.0 4.0 0.0 44.0 36.0]
/G4d {
    40 36 true [1 0 0 -1 -4.0 36.0] {<03fc00007f03fc00007e03fc0000fe03fc0000fe03fc0001fe03fc0003ee07bc0003dc07bc0007dc
07bc00079c07bc000f1c079e000f3c0f1e001e380f1e001e380f1e003c380f1e007c780f1e007870
0f1e00f8701e1e00f0f01e1e01f0f01e1e01e0f01e0f03c0e01e0f07c0e03c0f0781e03c0f0f81e0
3c0f0f01e03c0f1f01c03c0f1e03c03c0f3e03c0780f3c03c0780f78038078077807807807f00780
7807f00780f007e00780f007e00f00f007c00f00>} imagemask 
  }
  77 /G4d MSTT31c42e AddChar
/G44 [36.0 0.0 2.0 0.0 36.0 36.0]
/G44 {
    34 36 true [1 0 0 -1 -2.0 36.0] {<00ffff000000ffffe00001fffff80001fffffc0001e000fe0001e0003f0001e0001f0003c0000f80
03c000078003c000078003c00003c007c00003c007800003c007800003c007800003c007800003c0
0f000003c00f000003c00f000003c00f000007c01f000007801e000007801e00000f801e00000f00
1e00001f003c00001e003c00003e003c00007c003c0000f8007c0003f80078000ff00078007fe000
7fffffc0007fffff0000fffffc0000ffffe00000>} imagemask 
  }
  68 /G44 MSTT31c42e AddChar
/G6d [42.0 0.0 2.0 0.0 41.0 27.0]
/G6d {
    39 27 true [1 0 0 -1 -2.0 27.0] {<0001f007e003c7fc1ff8078ffe3ffc079ffe7ffc07bc3ef87c07f01fe03e07e01f803e0fc01f003e
0f801f003c0f001e003c0f001e003c1f003e007c1e003c00781e003c00781e003c00781e003c0078
3c007800f83c007800f03c007800f03c007800f07c00f801f07800f001e07800f001e07800f001e0
7800f001e0f001e003c0f001e003c0>} imagemask 
  }
  109 /G6d MSTT31c42e AddChar
%%EndResource

540 1895 1165 (Signs 'file' with private key and MD5 message-digest) 1165 SB

%%BeginResource: font MSTT31c42e
/G75 [28.0 0.0 3.0 -1.0 28.0 26.0]
/G75 {
    25 27 true [1 0 0 -1 -3.0 26.0] {<078007800f000f800f000f000f000f000f000f001f000f001e001e001e001e001e001e003e001e00
3c003e003c003c003c003c003c003c0078007c0078007800780078007800f800f800f800f001f800
f003f000f807f000fc1ef0007ffcf0007ff9e0003fe1e0000f800000>} imagemask 
  }
  117 /G75 MSTT31c42e AddChar
%%EndResource

540 1954 907 (algorithm, writing signature to '508-5.sig'.) 907 SB

%%BeginResource: font MSTT31c42e
/G33 [28.0 0.0 3.0 0.0 28.0 36.0]
/G33 {
    25 36 true [1 0 0 -1 -3.0 36.0] {<000fe000007ff80000fffc0001fffe0003f03f0007e01f0007c00f80078007800f00078003000780
0000078000000f8000000f0000001f0000007e00000ffc00001ff000001fe000001ff8000001f800
00007c0000003e0000001e0000001e0000001e0000001e00f0001e00f0003e00f8003c0078007c00
7c00f8003f03f0001fffe0000fffc00007ff800001fe0000>} imagemask 
  }
  51 /G33 MSTT31c42e AddChar
%%EndResource

390 2072 42 (3.) 42 SB

%%BeginResource: font MSTT31c42e
/G56 [33.0 0.0 7.0 0.0 37.0 36.0]
/G56 {
    30 36 true [1 0 0 -1 -7.0 36.0] {<7800007c78000078780000f8780000f0780001f0780001e03c0003e03c0003c03c0007803c000780
3c000f003c000f003e001e001e001e001e003c001e007c001e0078001e00f8001e00f0000f01f000
0f01e0000f03e0000f03c0000f07c0000f078000078f8000078f0000079f0000079e000007be0000
07bc000003fc000003f8000003f8000003f0000003e00000>} imagemask 
  }
  86 /G56 MSTT31c42e AddChar
%%EndResource

540 2072 399 (Verifies signature.) 399 SB

%%BeginResource: font MSTT31c42e
/G34 [28.0 0.0 3.0 0.0 27.0 36.0]
/G34 {
    24 36 true [1 0 0 -1 -3.0 36.0] {<00000f00001f00003e00007e0000fe0001fe0001de0003bc00073c000f3c001e3c003c7c00787800
707800e07801e07803c0f00780f00f00f00e00f01c01f03c01e07801e07fffff7ffffffffffeffff
fe0003c00003c00007c0000780000780000780000780000f00000f00>} imagemask 
  }
  52 /G34 MSTT31c42e AddChar
%%EndResource

390 2190 42 (4.) 42 SB

%%BeginResource: font MSTT31c42e
/G45 [33.0 0.0 2.0 0.0 35.0 36.0]
/G45 {
    33 36 true [1 0 0 -1 -2.0 36.0] {<01ffffff8001ffffff8001ffffff8003ffffff0003c000000003c000000003c000000003c0000000
078000000007800000000780000000078000000007800000000f000000000f000000000ffffffc00
0ffffffc000ffffff8001ffffff8001e000000001e000000001e000000001e000000003c00000000
3c000000003c000000003c000000003c000000007c00000000780000000078000000007800000000
7ffffff000fffffff000fffffff000ffffffe000>} imagemask 
  }
  69 /G45 MSTT31c42e AddChar
/G43 [36.0 0.0 5.0 -1.0 36.0 37.0]
/G43 {
    31 38 true [1 0 0 -1 -5.0 37.0] {<0003fc00001fff80007fffc000fffff001fe07f003f001f807e000fc0fc0007c0f80003e1f00003e
1e00001e3e0000183c0000007c000000780000007800000078000000f0000000f0000000f0000000
f0000000f0000000f0000000f0000000f0000060f00000f8f00000f0780000f0780001f07c0003e0
7c0007c03e000fc01f801f801fe07f000ffffe0007fffc0001fff000003f8000>} imagemask 
  }
  67 /G43 MSTT31c42e AddChar
/G42 [33.0 0.0 2.0 0.0 32.0 36.0]
/G42 {
    30 36 true [1 0 0 -1 -2.0 36.0] {<01ffff8001ffffe001fffff003fffff803c001f803c0007c03c0007c03c0003c0780003c0780003c
0780003c07800078078000780f0000f00f0007f00fffffc00fffff800fffff801fffffe01e0003f0
1e0000f01e0000f81e0000783c0000783c0000783c0000783c0000783c0000f87c0000f0780001f0
780003e078001fc07fffffc0ffffff00fffffe00fffff000>} imagemask 
  }
  66 /G42 MSTT31c42e AddChar
%%EndResource

540 2190 1166 (Seals 'file' in envelope with public key and DES-CBC) 1166 SB
540 2249 1102 (data encryption algorithm, writing encrypted file to) 1102 SB
540 2308 1267 ('508-1.env', encrypted data encryption key to '508-1.key',) 1267 SB

%%BeginResource: font MSTT31c42e
/G7a [23.0 0.0 1.0 0.0 24.0 26.0]
/G7a {
    23 26 true [1 0 0 -1 -1.0 26.0] {<0ffffe0ffffe1ffffc1ffffc0000f80001f00003e00003c00007c0000f80001f00003e00007c0000
f80001f00003e00003c00007c0000f80001f00003e00007c00007ffff0fffff0ffffe0ffffe0>} imagemask 
  }
  122 /G7a MSTT31c42e AddChar
%%EndResource

540 2367 783 (and initialization vector to '508-1.iv'.) 783 SB
390 2485 42 (5.) 42 SB

%%BeginResource: font MSTT31c42e
/G4f [39.0 0.0 5.0 -1.0 38.0 37.0]
/G4f {
    33 38 true [1 0 0 -1 -5.0 37.0] {<0003fc0000001fff8000003fffe00000fffff00001fe03f80003f800fc0007e0007c000fc0003e00
0f80001f001f00000f003e00000f003e00000f003c000007807c0000078078000007807800000780
f800000780f000000780f000000780f000000780f000000780f000000f80f000000f00f000000f00
f000001f00f000001e007800003e007800003c007c00007c003c0000f8003e0001f8001f0003f000
1f800fe0000ff03fc00007ffff800003fffe000000fff80000001fe00000>} imagemask 
  }
  79 /G4f MSTT31c42e AddChar
/G3a [14.0 0.0 3.0 0.0 12.0 26.0]
/G3a {
    9 26 true [1 0 0 -1 -3.0 26.0] {<078007800f000f000000000000000000000000000000000000000000000000000000000000000000
0000000078007800f000f000>} imagemask 
  }
  58 /G3a MSTT31c42e AddChar
/G22 [18.0 0.0 6.0 23.0 21.0 36.0]
/G22 {
    15 13 true [1 0 0 -1 -6.0 36.0] {<1e1e1e1e3c3c3c3c3c3c3c3c7c7c7878787878787070f0f0f0f0>} imagemask 
  }
  34 /G22 MSTT31c42e AddChar
%%EndResource

540 2485 1282 (Opens envelope and displays result: should be "Envelope) 1282 SB
540 2544 200 (opened.") 200 SB
240 2662 317 ('512a.in' script) 317 SB
390 2780 42 (1.) 42 SB
540 2780 1051 (Signs 'file' with first built-in private key and MD2) 1051 SB
540 2839 1286 (message-digest algorithm, writing signature to '512a2.sig'.) 1286 SB
390 2957 42 (2.) 42 SB
540 2957 399 (Verifies signature.) 399 SB
390 3075 42 (3.) 42 SB

%%BeginResource: font MSTT31c42e
/G28 [17.0 0.0 4.0 -10.0 20.0 36.0]
/G28 {
    16 46 true [1 0 0 -1 -4.0 36.0] {<0007000e001c0038007000f000e001e003c0038007800f000f001e001e001e003c003c003c007800
780078007800f800f000f000f000f000f000f000f000f000f000f000f00070007800780078007800
38003c001c001c001e000e00>} imagemask 
  }
  40 /G28 MSTT31c42e AddChar
/G29 [17.0 0.0 -2.0 -10.0 14.0 36.0]
/G29 {
    16 46 true [1 0 0 -1 2.0 36.0] {<0070007800380038003c001c001e001e001e001e000e000f000f000f000f000f000f000f000f000f
000f000f001f001e001e001e001e003e003c003c00780078007800f000f001e001c003c007800700
0f001e001c0038007000e000>} imagemask 
  }
  41 /G29 MSTT31c42e AddChar
%%EndResource

540 3075 1218 (Repeats \(1\) and \(2\) with MD5. Signature in '512a5.sig'.) 1218 SB
1 #C
EJ RS
%%PageTrailer
%%PageResources: font Courier
%%+ font MSTT31c3ec
%%+ font MSTT31c3f9
%%+ font MSTT31c416
%%+ font MSTT31c42e
%%Page: 2 2
%%PageResources: (atend)
SS
0 0 20 20 806 1100 300 SM
32 0 0 50 50 0 0 1 46 /MSTT31c42e font
0 0 0 fC
390 242 42 (4.) 42 SB
540 242 1182 (Seals 'file' in envelope with first built-in public key and) 1182 SB
540 301 1340 (DES-CBC data encryption algorithm, writing encrypted file to) 1340 SB
540 360 1289 ('512a1.env', encrypted data encryption key to '512a1.key',) 1289 SB
540 419 794 (and initialization vector to '512a1.iv'.) 794 SB
390 537 42 (5.) 42 SB
540 537 809 (Opens envelope and displays result.) 809 SB

%%BeginResource: font MSTT31c42e
/G36 [28.0 0.0 4.0 0.0 28.0 36.0]
/G36 {
    24 36 true [1 0 0 -1 -4.0 36.0] {<000fc0003ff000fffc01fffc03f87e07e01e07c01f0f800f0f000f1f00001e00003e00003c3f003c
ffc07dffe07ffff07fc3f87f00f8fe0078fc007cf8003cf8003cf0003cf0003cf0003cf0003cf000
78f000787800f87801f07c03f03f0fe01fffc00fff8007ff0001f800>} imagemask 
  }
  54 /G36 MSTT31c42e AddChar
%%EndResource

390 655 42 (6.) 42 SB

%%BeginResource: font MSTT31c42e
/G58 [33.0 0.0 -3.0 0.0 38.0 36.0]
/G58 {
    41 36 true [1 0 0 -1 3.0 36.0] {<00f000000f8000f800001f00007800003e00003c00007c00003e0000f800001e0001f000001f0003
e000000f0007c0000007800f80000007c01f00000003c03e00000003e07c00000001e0f800000000
f1f000000000fbe0000000007fc0000000007f80000000003f00000000003e00000000007f000000
0000ff0000000001ff8000000003e78000000007c3c00000000f83e00000001f01e00000003e01f0
0000007c00f0000000f80078000001f0007c000003e0003c000007c0003e00000f80001e00001f00
000f00003e00000f80007c0000078000>} imagemask 
  }
  88 /G58 MSTT31c42e AddChar
%%EndResource

540 655 1321 (Repeats \(4\) and \(5\) with DESX-CBC, DES-EDE2-CBC, and) 1321 SB

%%BeginResource: font MSTT31c42e
/G46 [31.0 0.0 2.0 0.0 32.0 36.0]
/G46 {
    30 36 true [1 0 0 -1 -2.0 36.0] {<00fffffc00fffffc01fffff801fffff801e0000001e0000001e0000003c0000003c0000003c00000
03c0000007800000078000000780000007800000078000000fffffe00fffffe00fffffe00fffffe0
1e0000001e0000001e0000001e0000001e0000003c0000003c0000003c0000003c00000078000000
78000000780000007800000078000000f0000000f0000000>} imagemask 
  }
  70 /G46 MSTT31c42e AddChar
/G78 [24.0 0.0 -1.0 0.0 24.0 26.0]
/G78 {
    25 26 true [1 0 0 -1 1.0 26.0] {<0780078003c00f0003c01e0001e03c0001e0780000f0780000f0f0000079e000007bc000003f8000
003f8000001f0000001e0000003f0000007f000000f7800000f7800001e3c00003c3c0000781e000
0f01e0000f00f0001e00f0003c00780078007800f0003c00>} imagemask 
  }
  120 /G78 MSTT31c42e AddChar
/G2a [19.0 0.0 6.0 21.0 24.0 36.0]
/G2a {
    18 15 true [1 0 0 -1 -6.0 36.0] {<01e00001e00001e00001e00071e3807fdf80ffffc03fff0001e00007f8000f7c001f3e001e1f001e
0e00040800>} imagemask 
  }
  42 /G2a MSTT31c42e AddChar
%%EndResource

540 714 1177 (DES-EDE3-CBC. Files: '512ax.*', '512a2.*', '512a3.*'.) 1177 SB

%%BeginResource: font MSTT31c42e
/G37 [28.0 0.0 6.0 0.0 30.0 36.0]
/G37 {
    24 36 true [1 0 0 -1 -6.0 36.0] {<7ffffffffffffffffefffffe00007e0000fc0001f00001f00003e00007c0000f80000f00001f0000
3e00003c00007c0000f80000f00001f00001e00003e00003c00007c0000780000780000f00000f00
001f00001e00001e00003e00003c00003c00003c0000780000780000>} imagemask 
  }
  55 /G37 MSTT31c42e AddChar
%%EndResource

390 832 42 (7.) 42 SB
540 832 1184 (Repeats \(3-5\) on 'bigfile'. Result should be "Envelope) 1184 SB

%%BeginResource: font MSTT31c42e
/G5c [14.0 0.0 4.0 0.0 14.0 36.0]
/G5c {
    10 36 true [1 0 0 -1 -4.0 36.0] {<f000f000f0007800780078007800780078003c003c003c003c003c003c001e001e001e001e001e00
1e000f000f000f000f000f000f0007800780078007800780078003c003c003c0>} imagemask 
  }
  92 /G5c MSTT31c42e AddChar
/G54 [31.0 0.0 6.0 0.0 36.0 36.0]
/G54 {
    30 36 true [1 0 0 -1 -6.0 36.0] {<7ffffffc7ffffff87ffffff8fffffff8000780000007800000078000000f0000000f0000000f0000
000f0000001e0000001e0000001e0000001e0000001e0000003c0000003c0000003c0000003c0000
007800000078000000780000007800000078000000f0000000f0000000f0000000f0000001e00000
01e0000001e0000001e0000001e0000003c0000003c00000>} imagemask 
  }
  84 /G54 MSTT31c42e AddChar
%%EndResource

540 891 1078 (opened \\ This is a big file", repeated a few times.) 1078 SB
240 1009 452 ('767.in' and '1024.in') 452 SB

%%BeginResource: font MSTT31c42e
/G3b [14.0 0.0 1.0 -8.0 12.0 26.0]
/G3b {
    11 34 true [1 0 0 -1 -1.0 26.0] {<01e001e003c003c00000000000000000000000000000000000000000000000000000000000000000
000000001e001e003e003c000c000c001c00180038007000e000c000>} imagemask 
  }
  59 /G3b MSTT31c42e AddChar
%%EndResource

390 1127 1314 (Same as '508.in', except that '508' becomes '767' or '1024';) 1314 SB
390 1186 957 (new key pairs are generated in both cases.) 957 SB
1 #C
EJ RS
%%PageTrailer
%%PageResources: font MSTT31c42e
%%Trailer
SVDoc restore
end
%%Pages: 2
% TrueType font name key:
%    MSTT31c3ec = 4787DTimes New RomanF0000004b000001900000
%    MSTT31c3f9 = 4787DArialF00000032000002bc0000
%    MSTT31c409 = 4787DTimes New RomanF00000032000001900000
%    MSTT31c416 = 4787DTimes New RomanF00000032000002bc0000
%    MSTT31c423 = 4787DArialF00000032000001900000
%    MSTT31c42e = 4787DArialF00000032000001900001
%%DocumentSuppliedResources: procset Win35Dict 3 1
%%+ font MSTT31c3ec
%%+ font MSTT31c3f9
%%+ font MSTT31c416
%%+ font MSTT31c42e

%%DocumentNeededResources: font Courier

%%EOF
